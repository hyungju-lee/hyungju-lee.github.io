<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 02 Nov 2020 19:29:52 +0900</pubDate>
    <lastBuildDate>Mon, 02 Nov 2020 19:29:52 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>1. sass basic - variables</title>
        <description>&lt;h2 id=&quot;1-sass-basic---variables&quot;&gt;1. sass basic - variables&lt;/h2&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;div*#box$*5

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box5&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#00f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ddd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#box1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ff0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#box2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ff0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#box3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ff0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#box4&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ff0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#box5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ff0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 02 Nov 2020 18:29:00 +0900</pubDate>
        <link>http://localhost:4000/sass/2020/11/02/sass.html</link>
        <guid isPermaLink="true">http://localhost:4000/sass/2020/11/02/sass.html</guid>
        
        
        <category>sass</category>
        
      </item>
    
      <item>
        <title>sass 공부전 세팅</title>
        <description>&lt;h2 id=&quot;sass-공부전-세팅&quot;&gt;sass 공부전 세팅&lt;/h2&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$fc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#f00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;확장-파일&quot;&gt;확장 파일&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;sass&lt;/li&gt;
  &lt;li&gt;Live sass Compiler - 설치하면 live server 확장프로그램도 같이 설치된다.&lt;/li&gt;
  &lt;li&gt;sass lint&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sass-is&quot;&gt;Sass is&lt;/h2&gt;

&lt;p&gt;CSS 작성(생성)을 위한 작고 가벼운 언어이고, Sass와 SCSS가 있다.&lt;/p&gt;

&lt;h3 id=&quot;sass&quot;&gt;Sass&lt;/h3&gt;

&lt;p&gt;SCSS와 작성하는데 있어서 구조적 차이가 있고 작성이 번거롭고 복잡할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;scss&quot;&gt;SCSS&lt;/h3&gt;

&lt;p&gt;기존에 알던 CSS와 유사하게 작성할 수 있기 때문에 친근하게 느껴져 배우기가 쉽다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/sass/image00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;live-sass-compiler&quot;&gt;Live Sass Compiler&lt;/h2&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$color-blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#00f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$color-red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#f00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$color-yellow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ff0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$color-blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$color-yellow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#f00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;live-sass-compiler-more&quot;&gt;Live Sass Compiler more&lt;/h2&gt;

&lt;p&gt;live sass compiler 확장 프로그램에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/&lt;/code&gt; 이 표시가 뜻하는 것은 현재 &lt;code class=&quot;highlighter-rouge&quot;&gt;scss&lt;/code&gt; 파일이 있는 위치를 뜻한다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;~/&lt;/code&gt; 혹여 나중에 이런 표시를 보더라도 헷갈리지 말자.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 이 표시만 있으면 프로젝트 루트 폴더 기준이다.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Nov 2020 23:06:00 +0900</pubDate>
        <link>http://localhost:4000/sass/2020/11/01/sass.html</link>
        <guid isPermaLink="true">http://localhost:4000/sass/2020/11/01/sass.html</guid>
        
        
        <category>sass</category>
        
      </item>
    
      <item>
        <title>자바스크립트 읽어봐야될 것들</title>
        <description>&lt;h2 id=&quot;자바스크립트-읽어봐야될-것들&quot;&gt;자바스크립트 읽어봐야될 것들&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.bitsrc.io/understanding-weakmaps-in-javascript-6e323d9eec81&quot; target=&quot;_blank&quot;&gt;JavaScript의 WeakMap 이해&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/the-front-journal/javascript-advanced-oop-306ac82f9f29&quot; target=&quot;_blank&quot;&gt;자바스크립트 : 고급 OOP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/hackernoon/3-javascript-performance-mistakes-you-should-stop-doing-ebf84b9de951&quot; target=&quot;_blank&quot;&gt;멈춰야 할 3 가지 자바스크립트 성능 실수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/datadriveninvestor/stopping-using-console-log-and-start-using-your-browsers-debugger-62bc893d93ff&quot; target=&quot;_blank&quot;&gt;console.log () 사용을 중지하고 브라우저의 디버거 사용을 시작하는 방법&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/developers-arena/some-cool-and-awesome-javascript-tricks-4bcb9af9b1d3&quot; target=&quot;_blank&quot;&gt;멋지고 멋진 JavaScript 트릭&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/stop-duplicating-constants-between-js-and-css-40efd253a945&quot; target=&quot;_blank&quot;&gt;JS와 CSS간에 상수 복제 중지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/internshala-tech/how-to-handle-events-dynamically-using-javascript-abe18faac3f5&quot; target=&quot;_blank&quot;&gt;JavaScript 이벤트 위임의 중요성&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@arsenyyankovsky/effective-limited-parallel-execution-in-javascript-ea2a1fb9a632&quot; target=&quot;_blank&quot;&gt;JavaScript에서 효과적인 제한된 병렬 실행&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.bitsrc.io/javascript-engines-an-overview-2162bffa1187&quot; target=&quot;_blank&quot;&gt;자바스크립트 엔진 : 개요&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/swlh/24-modern-es6-code-snippets-to-solve-practical-js-problems-3609f301859e&quot; target=&quot;_blank&quot;&gt;실용적인 JavaScript 문제를 해결하기위한 24 가지 최신 ES6 코드 조각&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/javascript-in-plain-english/4-powerful-javascript-operators-youve-never-heard-of-487df37114ad&quot; target=&quot;_blank&quot;&gt;들어 본 적이없는 강력한 JavaScript 연산자 4 가지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/free-code-camp/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0&quot; target=&quot;_blank&quot;&gt;함수 선언과 함수 표현식을 사용하는 경우&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.usejournal.com/little-known-features-of-javascript-901665291387&quot; target=&quot;_blank&quot;&gt;JavaScript의 거의 알려지지 않은 기능&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://levelup.gitconnected.com/9-tricks-for-kickass-javascript-developers-in-2019-eb01dd3def2a&quot; target=&quot;_blank&quot;&gt;2019 년 Kickass JavaScript 개발자를위한 9 가지 트릭&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/swlh/writing-a-front-end-component-with-vanilla-js-8a8fbff56299&quot; target=&quot;_blank&quot;&gt;Vanilla JS로 프런트 엔드 구성 요소 작성&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/developers-arena/some-simple-and-amazing-javascript-tricks-292e1962b1f6&quot; target=&quot;_blank&quot;&gt;간단하고 놀라운 JavaScript 트릭&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeburst.io/javascript-interview-questions-functions-5a3081c1f3f5&quot; target=&quot;_blank&quot;&gt;자바스크립트 인터뷰 질문 : 함수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.bitsrc.io/10-top-gatsbyjs-plugins-for-2020-2a8a6fdbff5a&quot; target=&quot;_blank&quot;&gt;10 Top GatsbyJS Plugins for 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;css-읽어봐야될-것들&quot;&gt;CSS 읽어봐야될 것들&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@PavelLaptev/lesser-known-css-properties-in-gifs-966a143497ba&quot; target=&quot;_blank&quot;&gt;GIF의 덜 알려진 CSS 속성&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/better-marketing/5-little-css-tricks-to-make-your-website-go-a-long-way-7cda61fcd7d0&quot; target=&quot;_blank&quot;&gt;평범한 페이지를 멋지게 만드는 5 가지 작은 CSS 트릭&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.usejournal.com/css-scroll-snap-how-it-really-works-94d99db80bc9&quot; target=&quot;_blank&quot;&gt;CSS 스크롤 스냅 — 실제 작동 방식&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3d-animation-javascript-tutorial&quot;&gt;3d animation javascript tutorial&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=XK7T3mY1V-w&amp;amp;feature=share&quot; target=&quot;_blank&quot;&gt;Awesome 3D ANIMATION Javascript Tutorial!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 01 Nov 2020 21:21:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/11/01/javascript5.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/11/01/javascript5.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>프런트 엔드 개발자를위한 14 가지 JavaScript 코드 최적화 팁</title>
        <description>&lt;h2 id=&quot;프런트-엔드-개발자를위한-14-가지-javascript-코드-최적화-팁&quot;&gt;프런트 엔드 개발자를위한 14 가지 JavaScript 코드 최적화 팁&lt;/h2&gt;

&lt;p&gt;성능 및 웹 사이트 로드 시간을 늘리기위한 팁과 요령&lt;/p&gt;

&lt;p&gt;JavaScript는 가장 인기있는 프로그래밍 언어 중 하나가되었습니다.&lt;br /&gt;
W3Tech에 따르면 전 세계 거의 96 %의 웹 사이트에서 사용됩니다.&lt;br /&gt;
웹에 대해 알아야 할 한 가지 중요한 사실은 &lt;strong&gt;사용자가 웹 사이트에 액세스하는 장치의 하드웨어 사양을 제어 할 수 없다는 것&lt;/strong&gt;입니다.&lt;br /&gt;
최종 사용자는 인터넷 연결이 좋지 않거나 좋지 않은 고급 또는 저사양 장치에서 웹 사이트에 액세스 할 수 있습니다.&lt;br /&gt;
즉, 모든 사용자의 요구 사항을 충족 할 수 있도록 웹 사이트를 최대한 최적화해야합니다.&lt;/p&gt;

&lt;p&gt;다음은 더 나은 성능을 제공하는 최적화 된 JavaScript 코드를 만들기위한 몇 가지 팁입니다.&lt;/p&gt;

&lt;h2 id=&quot;1-사용하지-않는-코드-및-기능-제거&quot;&gt;1. 사용하지 않는 코드 및 기능 제거&lt;/h2&gt;

&lt;p&gt;애플리케이션에 포함 된 코드가 많을수록 더 많은 데이터를 클라이언트로 전송해야합니다.&lt;br /&gt;
또한 브라우저가 코드를 분석하고 해석하는 데 더 많은 시간이 필요합니다.&lt;/p&gt;

&lt;p&gt;때로는 전혀 사용되지 않는 기능을 포함 할 수 있습니다.&lt;br /&gt;
이 추가 코드는 개발 환경에서만 유지하고 사용하지 않는 코드로 인해 클라이언트 브라우저에 부담을주지 않도록 프로덕션에 푸시하지 않는 것이 좋습니다.&lt;/p&gt;

&lt;p&gt;그 기능, 기능 또는 코드가 필요한지 항상 스스로에게 물어보십시오.&lt;/p&gt;

&lt;p&gt;사용하지 않는 코드는 수동으로 제거하거나 &lt;a href=&quot;https://github.com/mishoo/UglifyJS#compressor-options&quot; target=&quot;_blank&quot;&gt;Uglify&lt;/a&gt; 
또는 &lt;a href=&quot;https://developers.google.com/closure/compiler/docs/api-tutorial3&quot; target=&quot;_blank&quot;&gt;Google의 Closure Compiler&lt;/a&gt;와 같은 도구를 사용하여 제거 할 수 있습니다.&lt;br /&gt;
응용 프로그램에서 사용하지 않는 코드를 제거하는 트리 쉐이킹이라는 기술을 사용할 수도 있습니다.&lt;br /&gt;
Webpack과 같은 번 들러는이 기술을 제공합니다.&lt;br /&gt;
&lt;a href=&quot;https://medium.com/@bluepnume/javascript-tree-shaking-like-a-pro-7bf96e139eb7&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 나무 흔들기(트리셰이킹)에 대한 자세한 내용을 읽을 수 있습니다.&lt;br /&gt;
사용하지 않는 npm 패키지를 제거하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm prune&lt;/code&gt; 명령을 사용할 수 있습니다.&lt;br /&gt;
더 많은 정보는 &lt;a href=&quot;https://docs.npmjs.com/cli/v6/commands/npm-prune&quot; target=&quot;_blank&quot;&gt;NPM 문서&lt;/a&gt;에서 읽을 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;2-가능할-때마다-캐시&quot;&gt;2. 가능할 때마다 캐시&lt;/h2&gt;

&lt;p&gt;캐싱은 대기 시간과 네트워크 트래픽을 줄여서 리소스 표현을 표시하는 데 필요한 시간을 줄여 웹 사이트의 속도와 성능을 향상시킵니다.&lt;br /&gt;
이는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Cache&quot; target=&quot;_blank&quot;&gt;Cache API&lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching&quot; target=&quot;_blank&quot;&gt;HTTP 캐싱&lt;/a&gt;의 도움으로 달성 할 수 있습니다.&lt;br /&gt;
콘텐츠가 변경되면 어떻게 될지 궁금 할 것입니다.&lt;br /&gt;
위의 캐싱 메커니즘은 새 콘텐츠 게시와 같은 특정 조건이 충족 될 때 캐시를 처리하고 다시 생성 할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;3-메모리-누수-방지&quot;&gt;3. 메모리 누수 방지&lt;/h2&gt;

&lt;p&gt;고수준 언어이기 때문에 JS는 메모리 관리와 같은 여러 저수준 관리를 돌봅니다.&lt;br /&gt;
가비지 수집은 대부분의 프로그래밍 언어에서 일반적인 프로세스입니다.&lt;br /&gt;
일반 용어의 가비지 수집은 단순히 개체에 할당되었지만 현재 프로그램의 어떤 부분에서도 사용되지 않는 메모리를 수집하고 해제하는 것입니다.&lt;br /&gt;
C와 같은 프로그래밍 언어에서 개발자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;malloc()&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;dealloc()&lt;/code&gt; 함수를 사용하여 메모리 할당 및 할당 해제를 처리해야합니다.&lt;/p&gt;

&lt;p&gt;가비지 콜렉션은 JavaScript에서 자동으로 수행되지만 완벽하지 않은 특정 인스턴스가있을 수 있습니다.&lt;br /&gt;
JavaScript ES6에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Map&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Set&lt;/code&gt;는 “약한”형제와 함께 도입되었습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;WeakMap&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;WeakSet&lt;/code&gt;으로 알려진이 “약한”대응 물은 객체에 대한 “약한”참조를 보유합니다.&lt;br /&gt;
참조되지 않은 값이 가비지 수집되도록하여 메모리 누수를 방지합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;WeakMaps&lt;/code&gt;에 대한 자세한 내용은 &lt;a href=&quot;https://blog.bitsrc.io/understanding-weakmaps-in-javascript-6e323d9eec81&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 읽을 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;4-루프를-조기에-끊으십시오&quot;&gt;4. 루프를 조기에 끊으십시오.&lt;/h2&gt;

&lt;p&gt;큰주기를위한 루핑은 확실히 많은 귀중한 시간을 소비 할 수 있습니다.&lt;br /&gt;
그렇기 때문에 항상 루프를 일찍 벗어나려고 노력해야합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;/code&gt; 키워드 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt; 키워드를 사용하여 이를 수행 할 수 있습니다.&lt;br /&gt;
가장 효율적인 코드를 작성하는 것은 귀하의 책임입니다.&lt;/p&gt;

&lt;p&gt;아래 예제에서 루프를 중단하지 않은 경우 코드는 분명히 오버로드 상태 인 루프를 1000000000 번 실행합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;970&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;found&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;found&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Found&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아래 예에서 루프가 조건과 일치하지 않을 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt;하지 않은 경우에도 함수를 1000000000 번 실행하게됩니다.&lt;br /&gt;
배열 요소가 짝수 위치에있는 경우에만 처리합니다.&lt;br /&gt;
이것은 루프 실행을 거의 절반으로 줄입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;970&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;found&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.oreilly.com/library/view/high-performance-javascript/9781449382308/ch04.html&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 루프 및 성능에 대해 자세히 알아볼 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;5-변수가-계산되는-횟수-최소화&quot;&gt;5. 변수가 계산되는 횟수 최소화&lt;/h2&gt;

&lt;p&gt;변수가 계산되는 횟수를 줄이기 위해 클로저를 사용할 수 있습니다.&lt;br /&gt;
평범한 용어로 JavaScript의 클로저는 내부 함수에서 외부 함수 범위에 대한 액세스를 제공합니다.&lt;br /&gt;
함수가 호출되지 않고 생성 될 때마다 클로저가 생성됩니다.&lt;br /&gt;
내부 함수는 외부 함수가 반환 된 후에도 외부 범위의 변수에 액세스 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;이 작업을 확인하기 위해 두 가지 예를 살펴 보겠습니다.&lt;br /&gt;
이러한 예는 Bret의 블로그에서 영감을 받았습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findCustomerCity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;texasCustomers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Ludwig&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Kate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; 
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;californiaCustomers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Wade&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Lucie&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Kylie&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;texasCustomers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Texas&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;nx&quot;&gt;californiaCustomers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;California&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Unknown&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 함수를 여러 번 호출하면 새 객체가 생성 될 때마다 모든 호출에 대해 메모리는 &lt;code class=&quot;highlighter-rouge&quot;&gt;texasCustometrs&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;californiaCustomers&lt;/code&gt; 변수에 불필요하게 재 할당됩니다.&lt;/p&gt;

&lt;p&gt;클로저가있는 솔루션을 사용하면 변수를 한 번만 인스턴스화 할 수 있습니다.&lt;br /&gt;
아래 예를 살펴 보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findCustomerCity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;texasCustomers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Ludwig&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Kate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; 
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;californiaCustomers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Wade&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Lucie&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Kylie&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;texasCustomers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Texas&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;nx&quot;&gt;californiaCustomers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;California&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Unknown&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cityOfCustomer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;findCustomerCity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cityOfCustomer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//Texas&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cityOfCustomer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Wade&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//California&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cityOfCustomer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Max&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//Unknown&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 예에서 클로저의 도움으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;cityOfCustomer&lt;/code&gt; 변수로 반환되는 내부 함수는 외부 함수 &lt;code class=&quot;highlighter-rouge&quot;&gt;findCustomerCity()&lt;/code&gt;의 상수에 액세스 할 수 있습니다.&lt;br /&gt;
그리고 내부 함수가 매개 변수로 전달 된 이름으로 호출 될 때마다 상수를 다시 인스턴스화 할 필요가 없습니다.&lt;br /&gt;
클로져에 대해 자세히 알아 보려면 &lt;a href=&quot;https://medium.com/@prashantramnyc/javascript-closures-simplified-d0d23fa06ba4&quot; target=&quot;_blank&quot;&gt;Prashant의이 블로그 게시물&lt;/a&gt;을 살펴 보시기 바랍니다.&lt;/p&gt;

&lt;h2 id=&quot;6-dom-액세스-최소화&quot;&gt;6. DOM 액세스 최소화&lt;/h2&gt;

&lt;p&gt;DOM에 액세스하는 것은 다른 JavaScript 문에 비해 느립니다.&lt;br /&gt;
레이아웃 다시 그리기를 트리거하는 DOM을 변경하면 상황이 상당히 느려질 수 있습니다.&lt;/p&gt;

&lt;p&gt;DOM 요소에 액세스하는 횟수를 줄이려면 한 번 액세스하고 로컬 변수로 사용하십시오.&lt;br /&gt;
필요가 완료되면 변수 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;로 설정하여 제거해야합니다.&lt;br /&gt;
이렇게하면 가비지 수집 프로세스가 수행 될 수 있으므로 메모리 누수가 방지됩니다.&lt;/p&gt;

&lt;h2 id=&quot;7-파일-압축&quot;&gt;7. 파일 압축&lt;/h2&gt;

&lt;p&gt;Gzip과 같은 압축 방법을 사용하여 JavaScript 파일의 파일 크기를 줄일 수 있습니다.&lt;br /&gt;
이러한 작은 파일은 브라우저가 더 작은 자산을 다운로드해야하므로 웹 사이트 성능이 향상됩니다.&lt;/p&gt;

&lt;p&gt;이러한 압축은 파일 크기를 최대 80 %까지 줄일 수 있습니다.&lt;br /&gt;
&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer#text_compression_with_gzip&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 압축에 대해 자세히 알아보십시오.&lt;/p&gt;

&lt;h2 id=&quot;8-최종-코드-축소&quot;&gt;8. 최종 코드 축소&lt;/h2&gt;

&lt;p&gt;어떤 사람들은 축소와 압축이 동일하다고 생각합니다.&lt;br /&gt;
그러나 반대로 그들은 다릅니다.&lt;br /&gt;
압축에서 특수 알고리즘은 파일의 출력 크기를 변경하는 데 사용됩니다.&lt;br /&gt;
축소시 JavaScript 파일의 주석 및 추가 공백을 제거해야합니다.&lt;br /&gt;
이 프로세스는 온라인에서 찾을 수있는 많은 도구와 패키지를 사용하여 수행 할 수 있습니다.&lt;br /&gt;
축소는 페이지 최적화를위한 표준 관행이되었으며 프런트 엔드 최적화의 주요 구성 요소가되었습니다.&lt;/p&gt;

&lt;p&gt;축소는 파일 크기를 최대 60 %까지 줄일 수 있습니다.&lt;br /&gt;
&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer#minification_preprocessing_context-specific_optimizations&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 축소에 대해 자세히 알아볼 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;9-throttle-및-debounce-사용&quot;&gt;9. throttle 및 debounce 사용&lt;/h2&gt;

&lt;p&gt;이 두 가지 기술을 사용하면 코드에서 이벤트를 처리해야하는 횟수를 엄격하게 적용 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;제한은 함수가 초과 근무를 호출 할 수있는 최대 횟수를 지정하는 곳입니다.&lt;br /&gt;
예를 들어, “1000 밀리 초마다 한 번만 onkeyup 이벤트 기능을 실행하십시오”.&lt;br /&gt;
즉, 초당 20 개의 키를 입력하면 이벤트가 1 초에 한 번만 발생합니다.&lt;br /&gt;
이렇게하면 코드에 대한 부하가 줄어 듭니다.&lt;/p&gt;

&lt;p&gt;반면에, 디바운싱은 동일한 함수를 이전에 실행 한 이후로 함수가 다시 실행되는 최소 기간을 지정하는 곳입니다.&lt;br /&gt;
즉, “호출되지 않고 600 밀리 초가 지나야 만이 함수를 실행하라”.&lt;br /&gt;
이는 동일한 함수의 마지막 실행 이후 600 밀리 초가 경과 할 때까지 함수가 호출되지 않음을 의미합니다.&lt;br /&gt;
스로틀 링 및 디 바운싱에 대한 자세한 내용은 &lt;a href=&quot;https://css-tricks.com/the-difference-between-throttling-and-debouncing/&quot; target=&quot;_blank&quot;&gt;다음&lt;/a&gt;을 참조하십시오.&lt;/p&gt;

&lt;p&gt;자체 디바운스 및 스로틀 기능을 구현하거나 &lt;a href=&quot;https://lodash.com/&quot; target=&quot;_blank&quot;&gt;Lodash&lt;/a&gt; 및 &lt;a href=&quot;http://underscorejs.org/&quot; target=&quot;_blank&quot;&gt;Underscore&lt;/a&gt;와 같은 라이브러리에서 가져올 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;10-delete-키워드-사용-금지&quot;&gt;10. Delete 키워드 사용 금지&lt;/h2&gt;

&lt;p&gt;delete 키워드는 개체에서 속성을 제거하는 데 사용됩니다.&lt;br /&gt;
이 삭제 키워드의 성능과 관련하여 몇 가지 불만이있었습니다.&lt;br /&gt;
&lt;a href=&quot;https://github.com/googleapis/google-api-nodejs-client/issues/375&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;와 &lt;a href=&quot;https://stackoverflow.com/questions/43594092/slow-delete-of-object-properties-in-js-in-v8/44008788&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 볼 수 있습니다.&lt;br /&gt;
향후 업데이트에서 수정 될 예정입니다.&lt;/p&gt;

&lt;p&gt;또는 원하지 않는 속성을 &lt;code class=&quot;highlighter-rouge&quot;&gt;undefined&lt;/code&gt;으로 설정하기 만하면됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Jane Doe&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Bret에 따르면 삭제 방법이 더 빠른 것으로 알려져 있으므로 Map 객체를 사용할 수도 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;11-비동기-코드를-사용하여-스레드-차단-방지&quot;&gt;11. 비동기 코드를 사용하여 스레드 차단 방지&lt;/h2&gt;

&lt;p&gt;JavaScript는 기본적으로 동기식이며 단일 스레드이기도합니다.&lt;br /&gt;
그러나 코드를 계산하는 데 많은 시간이 필요한 경우가있을 수 있습니다.&lt;br /&gt;
본질적으로 동기 적이라는 것은이 코드 조각이 실행이 완료 될 때까지 다른 코드 명령문이 실행되는 것을 차단한다는 것을 의미합니다.&lt;br /&gt;
이렇게하면 전반적인 성능이 저하됩니다.&lt;/p&gt;

&lt;p&gt;그러나 우리는 비동기 코드를 구현함으로써 이러한 상황을 피할 수 있습니다.&lt;br /&gt;
비동기 코드는 이전에 콜백 형식으로 작성되었지만 ES6에서 새로운 스타일의 비동기 코드 처리가 도입되었습니다.&lt;br /&gt;
이 새로운 스타일을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;이라고 불렀습니다.&lt;br /&gt;
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Introducing&quot; target=&quot;_blank&quot;&gt;MDN의 공식 문서&lt;/a&gt;에서 콜백 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;에 대해 자세히 알아볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 기다려…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;JavaScript는 기본적으로 동기식이며 단일 스레드입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;단일 스레드에서 실행하면서 비동기 코드를 실행하려면 어떻게해야합니까?&lt;br /&gt;
이것은 많은 사람들이 혼란스러워하는 곳입니다.&lt;br /&gt;
이것은 브라우저 후드에서 실행되는 JavaScript 엔진 덕분에 가능합니다.&lt;br /&gt;
JavaScript 엔진은 JavaScript 코드를 실행하는 컴퓨터 프로그램 또는 인터프리터입니다.&lt;br /&gt;
JavaScript 엔진은 다양한 언어로 작성할 수 있습니다.&lt;br /&gt;
예를 들어, Chrome 브라우저를 구동하는 V8 엔진은 C++로 작성되었으며, Firefox 브라우저를 구동하는 SpiderMonkey 엔진은 C 및 C++로 작성되었습니다.&lt;/p&gt;

&lt;p&gt;이러한 JavaScript 엔진은 백그라운드에서 작업을 처리 할 수 있습니다.&lt;br /&gt;
&lt;a href=&quot;https://dev.to/steelvoltage/if-javascript-is-single-threaded-how-is-it-asynchronous-56gd&quot; target=&quot;_blank&quot;&gt;Brian에 따르면&lt;/a&gt; 호출 스택은 Web API의 기능을 인식하고 브라우저에서 처리하도록 넘겨줍니다.&lt;br /&gt;
이러한 작업이 브라우저에 의해 완료되면 반환되어 콜백으로 스택에 푸시됩니다.&lt;/p&gt;

&lt;p&gt;실행하는 브라우저의 도움이 없기 때문에 Node.js에서 어떤 일이 일어나는지 궁금 할 때가 있습니다.&lt;br /&gt;
실제로 Chrome을 구동하는 동일한 V8 엔진이 Node.js도 구동합니다.&lt;br /&gt;
다음은 노드 생태계에서이 프로세스를 설명하는 &lt;a href=&quot;https://medium.com/better-programming/is-node-js-really-single-threaded-7ea59bcc8d64&quot; target=&quot;_blank&quot;&gt;Salil의 멋진 블로그 게시물&lt;/a&gt;입니다.&lt;/p&gt;

&lt;h2 id=&quot;12-코드-분할-사용&quot;&gt;12. 코드 분할 사용&lt;/h2&gt;

&lt;p&gt;Google Light House에 대한 경험이 있다면 ‘첫 번째 콘텐츠가있는 페인트(first contentful paint)’라는 측정 항목에 익숙할 것입니다.&lt;br /&gt;
Lighthouse 보고서의 성능 섹션에서 추적되는 6 가지 메트릭 중 하나입니다.&lt;/p&gt;

&lt;p&gt;FCP (First Contentful Paint)는 사용자가 페이지를 탐색 한 후 브라우저가 DOM 콘텐츠의 첫 번째 부분을 렌더링하는 데 걸리는 시간을 측정합니다.&lt;br /&gt;
페이지의 이미지, 흰색이 아닌 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 요소 및 SVG는 DOM 콘텐츠로 간주됩니다.&lt;br /&gt;
iframe 내부의 내용은 포함되지 않습니다.&lt;/p&gt;

&lt;p&gt;더 높은 FCP 점수를 얻는 가장 좋은 방법 중 하나는 코드 분할을 사용하는 것입니다.&lt;br /&gt;
코드 분할은 처음에 필요한 모듈 만 사용자에게 보내는 기술입니다.&lt;br /&gt;
이것은 처음에 전송 된 페이로드의 크기를 줄임으로써 FCP 점수에 큰 영향을 미칩니다.&lt;/p&gt;

&lt;p&gt;웹팩과 같은 인기있는 모듈 번 들러는 코드 분할 기능을 제공합니다.&lt;br /&gt;
네이티브 ES 모듈의 도움을 받아 개별 모듈을로드 할 수도 있습니다.&lt;br /&gt;
&lt;a href=&quot;https://blog.bitsrc.io/understanding-es-modules-in-javascript-a28fec420f73&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 네이티브 ES 모듈에 대해 자세히 읽을 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;13-async비동기-및-defer지연을-사용하라&quot;&gt;13. async(비동기) 및 defer(지연)을 사용하라.&lt;/h2&gt;

&lt;p&gt;현대 웹 사이트에서 스크립트는 크기가 더 크고 처리 시간이 더 많이 소요되는 HTML보다 더 집약적입니다.&lt;br /&gt;
기본적으로 브라우저는 스크립트가 다운로드 될 때까지 기다렸다가 실행 한 다음 나머지 페이지를 처리해야합니다.&lt;/p&gt;

&lt;p&gt;이로 인해 부피가 큰 스크립트가 웹 페이지로드를 차단할 수 있습니다.&lt;br /&gt;
이를 피하기 위해 JavaScript는 비동기 및 지연이라는 두 가지 기술을 제공합니다.&lt;br /&gt;
이러한 속성을 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그에 추가하기만하면 됩니다.&lt;/p&gt;

&lt;p&gt;비동기는 렌더링에 영향을주지 않고 스크립트를로드하도록 브라우저에 지시하는 곳입니다.&lt;br /&gt;
즉, 페이지는 비동기 스크립트를 기다리지 않고 내용이 처리되고 표시됩니다.&lt;/p&gt;

&lt;p&gt;지연은 렌더링이 완료된 후 브라우저에 스크립트를로드하도록 지시하는 곳입니다.&lt;br /&gt;
두 가지를 모두 지정하면 최신 브라우저에서 비동기가 우선하는 반면, 비동기는 지원하지 않고 지연을 지원하는 이전 브라우저는 지연으로 대체됩니다.&lt;/p&gt;

&lt;p&gt;이 두 속성은 페이지로드 시간을 줄이는 데 크게 도움이됩니다.&lt;br /&gt;
&lt;a href=&quot;https://flaviocopes.com/javascript-async-defer/&quot; target=&quot;_blank&quot;&gt;Flavio의이 블로그 게시물&lt;/a&gt;을 읽어 보시기 바랍니다.&lt;/p&gt;

&lt;h2 id=&quot;14-웹-작업자를-사용하여-백그라운드에서-cpu-집약적-인-작업-실행&quot;&gt;14. 웹 작업자를 사용하여 백그라운드에서 CPU 집약적 인 작업 실행&lt;/h2&gt;

&lt;p&gt;웹 워커를 사용하면 백그라운드 스레드에서 스크립트를 실행할 수 있습니다.&lt;br /&gt;
매우 집약적 인 작업이있는 경우 사용자 인터페이스를 방해하지 않고 작업을 실행할 웹 작업자에게 할당 할 수 있습니다.&lt;br /&gt;
생성 후 웹 워커는 해당 코드에서 지정한 이벤트 핸들러에 메시지를 게시하여 JavaScript 코드와 통신 할 수 있습니다.&lt;br /&gt;
그 반대의 경우도 마찬가지입니다.&lt;/p&gt;

&lt;p&gt;웹 워커에 대해 더 알고 싶다면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers&quot; target=&quot;_blank&quot;&gt;MDN 문서&lt;/a&gt;를 살펴 보는 것이 좋습니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Nov 2020 20:29:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/11/01/javascript4.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/11/01/javascript4.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>ES6 스프레드 연산자의 5 가지 사용 (…)</title>
        <description>&lt;h2 id=&quot;es6-스프레드-연산자의-5-가지-사용-&quot;&gt;ES6 스프레드 연산자의 5 가지 사용 (…)&lt;/h2&gt;

&lt;p&gt;JavaScript 스프레드 연산자에 대한 간략한 개요입니다.&lt;/p&gt;

&lt;p&gt;스프레드 연산자는 ES6 (ECMAScript 6)에서 도입되었습니다.&lt;br /&gt;
기본적으로 세 개의 점 (…)입니다.&lt;br /&gt;
그것은 무언가를 개별 요소로 확장하므로 용어가 퍼집니다.&lt;/p&gt;

&lt;p&gt;확산 구문을 사용하면 0 개 이상의 인수 (함수 호출 용) 또는 요소(배열 리터럴 용)가 예상되는 위치에서 배열 표현식 또는 문자열과 같은 반복 가능 항목을 
확장하거나 0 개 이상의 위치에서 객체 표현식을 확장 할 수 있습니다.&lt;br /&gt;
키-값 쌍 (객체 리터럴 용)이 필요합니다.&lt;/p&gt;

&lt;p&gt;React를 배우면서 스프레드 연산자에 대해 처음 알게되었습니다.&lt;br /&gt;
그 이후로 저는 스프레드 오퍼레이터의 열렬한 팬이되었습니다.&lt;br /&gt;
JavaScript 내에서 작업을 완료하는 방법을 변경할 수있는이 세 가지 점입니다.&lt;/p&gt;

&lt;p&gt;다음은 JavaScript 내에서 내가 가장 좋아하는 스프레드 연산자의 사용 목록입니다!&lt;/p&gt;

&lt;h2 id=&quot;스프레드-연산자의-사용&quot;&gt;스프레드 연산자의 사용&lt;/h2&gt;

&lt;h3 id=&quot;1-copying-an-array-배열-복사&quot;&gt;1. Copying an array (배열 복사)&lt;/h3&gt;

&lt;p&gt;전통적인 방법은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Array.prototype.slice()&lt;/code&gt; 메서드를 사용하는 것입니다.&lt;br /&gt;
하지만 스프레드 연산자를 사용하면 점 세 개만 있으면됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;James&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Ben&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newNamesArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newNamesArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ['John','James','Ben']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-concatenating-arrays-배열-연결&quot;&gt;2. Concatenating arrays (배열 연결)&lt;/h3&gt;

&lt;p&gt;이 목표는 이전에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Array.prototype.concat()&lt;/code&gt; 메서드를 사용하여 달성되었습니다.&lt;br /&gt;
이제 스프레드 연산자를 사용하여 쉽게 달성 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;J&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
      
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ['A', 'B', 'C', 'H', 'I', 'J']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-spreading-elements-together-with-an-individual-element-개별-요소와-함께-요소-확산&quot;&gt;3. Spreading elements together with an individual element (개별 요소와 함께 요소 확산)&lt;/h3&gt;

&lt;p&gt;이것은 이와 같은 구현에서 다소 번거로운 일이었습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// normally used expand method&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [ [ 'a', 'b' ], 'c', 'd' ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;보시다시피 배열은 상위 배열 내에 중첩되었습니다.&lt;br /&gt;
이것은 이전 구현의 문제였습니다.&lt;br /&gt;
그러나 스프레드 연산자를 사용하면 의도 한 결과를 쉽게 얻을 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Apple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Pineapple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Banana&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newFruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Mango&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newFruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ['Mango', 'Apple','Pineapple','Banana']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-spreading-elements-on-function-calls-함수-호출시-요소-확산&quot;&gt;4. Spreading elements on function calls (함수 호출시 요소 확산)&lt;/h3&gt;

&lt;p&gt;아래 예에서 볼 수 있듯이 세 개의 점으로 인해이 작업이 매우 간단 해 보입니다.&lt;br /&gt;
그러나 수동으로 수행하려는 경우 모든 요소에 개별적으로 액세스하여 전달해야합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;James&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Ben&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getNames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`Names: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; and &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 

&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;getNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Names: John, James and Ben&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-객체-리터럴에-대한-확산-구문&quot;&gt;5. 객체 리터럴에 대한 확산 구문&lt;/h3&gt;

&lt;p&gt;이를 달성하는 전통적인 방법은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign()&lt;/code&gt; 메서드를 사용하는 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object.assign()&lt;/code&gt; 메서드는 하나 이상의 소스 객체에서 대상 객체로 모든 열거 가능 속성의 값을 복사하는 데 사용할 수 있으며 대상 객체를 반환합니다.&lt;/p&gt;

&lt;p&gt;그러나 스프레드 연산자를 사용하면 세 개의 점이 작업을 완료합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John Doe&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;country&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;USA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// { id: 101, name: 'John Doe', age: 25, country: &quot;USA&quot; }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: The spread operator does not &lt;strong&gt;deep-copy&lt;/strong&gt;. Please keep that in mind.
참고 : 스프레드 연산자는 전체 복사를 수행하지 않습니다. 그것을 명심하십시오.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;스프레드 연산자를 사용하여 새 개체를 만드는 것이 좋을 수 있지만 의도하지 않은 부작용이 발생할 수 있습니다.&lt;br /&gt;
조심하세요!&lt;/p&gt;

&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;

&lt;p&gt;ES6는 JavaScript를 더 효율적으로 만들었을뿐만 아니라 더 재미있게 만들었습니다.&lt;br /&gt;
최신 브라우저는 모두 새로운 ES6 구문을 지원하므로 시간을 할애하지 않았다면 지금이라도 해야합니다.&lt;/p&gt;

&lt;p&gt;어쨌든 스프레드 연산자는 JavaScript의 유용한 기능입니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Nov 2020 18:58:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/11/01/javascript3.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/11/01/javascript3.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>JavaScript 개발자를위한 10 가지 유용한 트릭</title>
        <description>&lt;h2 id=&quot;javascript-개발자를위한-10-가지-유용한-트릭&quot;&gt;JavaScript 개발자를위한 10 가지 유용한 트릭&lt;/h2&gt;

&lt;h3 id=&quot;당신이-놓쳤을지도-모르는-유횽한-자바스크립트-트릭&quot;&gt;당신이 놓쳤을지도 모르는 유횽한 자바스크립트 트릭&lt;/h3&gt;

&lt;p&gt;우리 모두 알고 있듯이 자바스크립트는 빠르게 변화하고 있습니다.&lt;br /&gt;
새로운 ES2020에서는 체크아웃하고 싶을 수 있는 많은 멋진 기능이 도입되었습니다.&lt;br /&gt;
솔직히 말해서 특정 기능을 만들 때 다양한 방법으로 코드를 작성할 수 있습니다.&lt;br /&gt;
그렇지만 그런 다양한 방법 중에서 지금 알려드릴 트릭들은 더 짧고 훨씬 더 명확합니다.&lt;br /&gt;
몇 가지 작은 트릭을 사용하여 코드를 더 깨끗하고 명확하게 만들 수 있습니다.&lt;br /&gt;
다음은 언젠가 확실히 도움이될 자바스크립트 개발자를 위한 유용한 트릭목록입니다.&lt;/p&gt;

&lt;h2 id=&quot;1-메서드-매개-변수-유효성-검사&quot;&gt;1. 메서드 매개 변수 유효성 검사&lt;/h2&gt;

&lt;p&gt;자바스크립트를 사용하면 매개변수의 &lt;strong&gt;기본값&lt;/strong&gt;을 설정할 수 있습니다.&lt;br /&gt;
이를 사용하여 메서드 매개 변수를 검증하는 깔끔한 트릭을 구현할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isRequired&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;param is required&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isRequired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`printing &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//printing 2&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// error&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//printing null&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;깔끔하지 않나요?&lt;/p&gt;

&lt;h2 id=&quot;2-json-코드-형식&quot;&gt;2. JSON 코드 형식&lt;/h2&gt;

&lt;p&gt;지금 쯤이면 &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.stringify&lt;/code&gt;에 익숙 할 것입니다.&lt;br /&gt;
그러나 &lt;code class=&quot;highlighter-rouge&quot;&gt;stringify&lt;/code&gt;를 사용하여 출력 형식을 지정할 수 있다는 것을 알고 있습니까?&lt;br /&gt;
사실 아주 간단합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stringify&lt;/code&gt; 메서드는 세 가지 입력을받습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;replacer&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;space&lt;/code&gt;입니다.&lt;br /&gt;
후자의 두 가지는 선택적 매개 변수입니다.&lt;br /&gt;
그것이 우리가 이전에 사용하지 않은 이유입니다.&lt;br /&gt;
JSON을 들여 쓰려면 space 매개 변수를 사용해야합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;John&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;John&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Age&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음은 제가 Bit에 게시 한 React 컴포넌트입니다.&lt;br /&gt;
&lt;a href=&quot;https://bit.dev/eden/stringify-components/display-results&quot; target=&quot;_blank&quot;&gt;stringify 예제&lt;/a&gt;를 자유롭게 사용하십시오.&lt;/p&gt;

&lt;h2 id=&quot;3-배열에서-고유-한-값-얻기&quot;&gt;3. 배열에서 고유 한 값 얻기&lt;/h2&gt;

&lt;p&gt;배열에서 고유 한 값을 가져 오려면 필터 방법을 사용하여 반복되는 값을 필터링해야했습니다.&lt;br /&gt;
그러나 새로운 &lt;code class=&quot;highlighter-rouge&quot;&gt;Set native&lt;/code&gt; 객체를 사용하면 작업이 정말 매끄럽고 쉽습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uniqueArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;school&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;school&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])];&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;school&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;4-배열에서-거짓-값-제거&quot;&gt;4. 배열에서 거짓 값 제거&lt;/h2&gt;

&lt;p&gt;배열에서 잘못된 값을 제거하려는 경우가있을 수 있습니다.&lt;br /&gt;
거짓 값은 FALSE로 평가되는 JavaScript의 값입니다.&lt;br /&gt;
JavaScript에는 허위 값이 6 개 밖에 없습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;undefined&lt;/li&gt;
  &lt;li&gt;null&lt;/li&gt;
  &lt;li&gt;NaN&lt;/li&gt;
  &lt;li&gt;0&lt;/li&gt;
  &lt;li&gt;”” (empty string)&lt;/li&gt;
  &lt;li&gt;false&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이러한 잘못된 값을 필터링하는 가장 쉬운 방법은 아래 함수를 사용하는 것입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;어레이를 일부 수정 한 다음 새 어레이를 필터링하려면 다음과 같이 시도 할 수 있습니다.&lt;br /&gt;
&lt;strong&gt;원래 myArray는 변경되지 않습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Do your changes and return the new item&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5-여러-개체를-함께-병합&quot;&gt;5. 여러 개체를 함께 병합&lt;/h2&gt;

&lt;p&gt;두 개 이상의 클래스를 병합해야하는 경우가 여러 번 있었는데, 이것이 바로 내 접근 방식이었습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John Ludwig&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;gender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Male&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;college&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;primary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Mani Primary School&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;secondary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Lass Secondary School&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;skills&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;programming&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Extreme&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;swimming&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Average&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;na&quot;&gt;sleeping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Pro&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;college&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skills&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;세 개의 점은 JavaScript에서 스프레드 연산자라고도합니다.&lt;br /&gt;
&lt;a href=&quot;https://medium.com/better-programming/5-uses-of-the-es6-spread-operator-ef90bdff4d56&quot; target=&quot;_blank&quot;&gt;여기&lt;/a&gt;에서 더 많은 용도를 읽을 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;6-숫자-배열-정렬&quot;&gt;6. 숫자 배열 정렬&lt;/h2&gt;

&lt;p&gt;자바스크립트 배열에는 내장 정렬 방법이 있습니다.&lt;br /&gt;
이 정렬 방법은 배열 요소를 문자열로 변환하고 기본적으로 사전 정렬을 수행합니다.&lt;br /&gt;
이로 인해 숫자 배열을 정렬 할 때 문제가 발생할 수 있습니다.&lt;br /&gt;
따라서 여기에이 문제를 극복 할 수있는 간단한 해결책이 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;숫자 배열의 두 요소를 정렬 방법과 비교하는 함수를 제공하고 있습니다.&lt;br /&gt;
이 기능은 올바른 출력을 수신하는 데 도움이됩니다.&lt;/p&gt;

&lt;h2 id=&quot;7-오른쪽-클릭-비활성화&quot;&gt;7. 오른쪽 클릭 비활성화&lt;/h2&gt;

&lt;p&gt;사용자가 웹 페이지를 마우스 오른쪽 버튼으로 클릭하지 못하도록 할 수 있습니다.&lt;br /&gt;
매우 드물지만이 기능이 필요한 경우가 여러 개있을 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;oncontextmenu=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;return false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 간단한 스니펫은 사용자의 오른쪽 클릭을 비활성화합니다.&lt;/p&gt;

&lt;h2 id=&quot;8-별칭으로-구조-해제-해체-할당&quot;&gt;8. 별칭으로 구조 해제 (해체 할당)&lt;/h2&gt;

&lt;p&gt;비 구조화 할당 구문은 배열의 값 또는 객체의 속성을 별개의 변수로 압축 해제 할 수있는 JavaScript 표현식입니다.&lt;br /&gt;
기존 개체 변수를 고수하는 대신 원하는대로 이름을 바꿀 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Grabbing number&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Grabbing number and renaming it as otherNumber&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;otherNumber&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;otherNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;9-배열의-마지막-항목-가져-오기&quot;&gt;9. 배열의 마지막 항목 가져 오기&lt;/h2&gt;

&lt;p&gt;배열의 끝에서 요소를 가져 오려면 음의 정수와 함께 &lt;code class=&quot;highlighter-rouge&quot;&gt;slice&lt;/code&gt; 메서드를 사용할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;10-약속promises이-완료-될-때까지-기다리십시오&quot;&gt;10. 약속(Promises)이 완료 될 때까지 기다리십시오&lt;/h2&gt;

&lt;p&gt;몇 가지 약속이 끝날 때까지 기다려야하는 경우가있을 수 있습니다.&lt;br /&gt;
Promise.all을 사용하여 약속을 병렬로 실행할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고 : Promise는 단일 코어 CPU에서 동시에 실행되고 다중 코어 CPU에서 병렬로 실행됩니다.&lt;br /&gt;
주된 임무는 전달 된 모든 약속이 해결 될 때까지 기다리는 것입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PromiseArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Data release&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Something went wrong&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PromiseArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;all resolved! here are the resolve values:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;got rejected! reason:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.all&lt;/code&gt;에 대해 주목해야 할 한 가지 중요한 점은 &lt;strong&gt;Promise 중 하나가 거부 될 때 메서드에서 오류가 발생한다는 것&lt;/strong&gt;입니다.&lt;br /&gt;
이것은 모든 Promise가 완료 될 때까지 코드가 기다리지 않음을 의미합니다.&lt;/p&gt;

&lt;p&gt;거부 또는 해결 여부에 관계없이 모든 약속이 완료 될 때까지 기다리려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.allSettled&lt;/code&gt;를 사용할 수 있습니다.&lt;br /&gt;
&lt;strong&gt;이 방법은 ES2020의 최종 버전에 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PromiseArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Data release&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Something went wrong&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;allSettled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PromiseArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//[&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//{status: &quot;fulfilled&quot;, value: 100},&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//{status: &quot;rejected&quot;, reason: null},&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//{status: &quot;fulfilled&quot;, value: &quot;Data release&quot;},&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//{status: &quot;rejected&quot;, reason: Error: Something went wrong ...}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;일부 약속이 거부 되었더라도 &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise.allSettled&lt;/code&gt;는 모든 약속의 결과를 반환합니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Nov 2020 17:30:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/11/01/javascript2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/11/01/javascript2.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>필요한 Git 워크 플로 - 단일 저장소에서 여러 팀을 처리하는 방법</title>
        <description>&lt;h2 id=&quot;필요한-git-워크-플로---단일-저장소에서-여러-팀을-처리하는-방법&quot;&gt;필요한 Git 워크 플로 - 단일 저장소에서 여러 팀을 처리하는 방법&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/git/image00.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이전에 경험해 본 적이 있다면 중지하십시오.&lt;br /&gt;
당신은 대규모 개발자 팀의 일원이거나 현재 대규모 개발자 팀을 관리하고 있습니다.&lt;br /&gt;
팀이 백엔드 개발자로 구성되어 있기 때문에 모두 동일한 기술 스택을 사용하여 작업하지 않습니다.&lt;br /&gt;
JAVA에서는 AngularJS에서 작업하는 프런트 엔드 개발자와 Python으로 작업하는 데이터 과학자 두 명도 있습니다.&lt;/p&gt;

&lt;p&gt;게다가 모두가 GIT 사용법을 안다고 말했지만 실제로는 그렇지 않습니다.&lt;br /&gt;
일반적으로 선택한 IDE를 사용하여 버전 제어를 처리하고 정확히 무엇을하는지 모르고 옵션을 클릭합니다.&lt;/p&gt;

&lt;p&gt;일반적으로 이유는 이러한 팀이 소스 코드를 개별적으로 처리하도록 지정합니다.&lt;br /&gt;
즉, 각 코드베이스에 대해 서로 다른 리포지토리를 사용한다는 의미입니다.&lt;br /&gt;
그것은 또한 그들에게 서로 독립적인 개별 개발 흐름을 가질 수있는 능력을 제공 할 것입니다.&lt;/p&gt;

&lt;p&gt;즉, 종종 운이 당신 편이 아니고, 하나의 저장소와 세 개의 다른 팀이 함께 작업하는 방법을 배우려고합니다.&lt;br /&gt;
이 특정 기사에서는 소스 제어 관점에서만이 시나리오를 다루겠습니다.&lt;br /&gt;
즉, 모두가 서로의 코드를 엉망으로 만들지 않고 함께 작업 할 수있는 유용한 개발 흐름을 만드는 방법입니다.&lt;/p&gt;

&lt;h2 id=&quot;단순히-성공적인-git-분기-모델branching-model을-사용하지-않는-이유는-무엇입니까&quot;&gt;단순히 성공적인 Git 분기 모델(branching model)을 사용하지 않는 이유는 무엇입니까?&lt;/h2&gt;

&lt;p&gt;2010 년 Vincent Driessen은 개발 팀에서 GIT를 사용하여 버전 제어를 처리하는 방법을 설명하는 매우 흥미로운 기사를 게시했습니다.&lt;/p&gt;

&lt;p&gt;기본적으로 이 기사에서 제안한 내용 (모든 세부 사항을 원하면 기사로 직접 이동)은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;작업해야하는 각 기능에 대해 하나의 브랜치를 만듭니다.&lt;br /&gt;
이러한 브랜치는 모든 개발 코드가있는 기본 개발 브랜치에서 제공됩니다.&lt;/li&gt;
  &lt;li&gt;각 개발자는 준비가 될 때까지 각 기능 브랜치에서 작업합니다.&lt;/li&gt;
  &lt;li&gt;준비되면 소스로 다시 병합됩니다.&lt;/li&gt;
  &lt;li&gt;모든 기능이 준비되면 개발에서 릴리스 브랜치를 생성합니다.&lt;br /&gt;
여기서 반 완성 기능이 배포되지 않도록 버그 수정 만 허용됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이것이 흐름입니다.&lt;br /&gt;
간단히 말해서 태그 지정 및 핫픽스와 관련하여 몇 가지 다른 고려 사항이 있지만 이에 대한 원본 기사를 읽어 보도록하겠습니다.&lt;/p&gt;

&lt;p&gt;그래서 다른 많은 사람들과 마찬가지로, 저는 그 접근 방식을 마음에 새겼고, 동일한 코드에서 하나의 팀으로 작업 할 때 동질적인 팀과 매우 잘 작동합니다.&lt;/p&gt;

&lt;p&gt;더 이상 현실이 아닐 때 문제가 발생합니다.&lt;/p&gt;

&lt;p&gt;오해하지 마세요. 팀이 도구에 능숙하다면 모델은 여전히 작동합니다.&lt;br /&gt;
리포지토리에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;pull&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch&lt;/code&gt;의 의미 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;merge conflict&lt;/code&gt;를 올바르게 처리하는 방법을 알고 있다면 반드시이 모델을 사용하세요.&lt;/p&gt;

&lt;p&gt;안타깝게도 항상 그렇지는 않습니다.&lt;br /&gt;
너무 많은 개발자가 GIT를 사용해야 할 때 문서를 훑어 보는 경향이 있습니다.&lt;br /&gt;
이로 인해 팀이 충분히 작을 때 사소한 문제가 발생하거나 모든 병합 작업을 수행 할 팀원을 선택해야합니다.&lt;/p&gt;

&lt;p&gt;당신도 거기에 있었을 수도 있고, 당신의 팀에 도구를 아주 잘 알고 있고 그들이 그것을 사용할 때 어떤 일이 일어나는지 이해하는 몇몇 개발자가있어서 그들은 가장 복잡한 작업을 처리하는 경향이 있습니다.&lt;/p&gt;

&lt;p&gt;예를 들어, 스프린트를 시작할 때 기능 브랜치를 생성 한 다음 다른 개발자가 코드가 준비되었다고 판단하면 병합을 처리하도록 이러한 개발자가있을 수 있습니다.&lt;/p&gt;

&lt;p&gt;이는 경우에 따라 작동하는 설정일 수 있지만 의심 할 여지없이 특정 개인에게 많은 책임이 추가되고 개발에서 확실히 시간이 걸립니다.&lt;/p&gt;

&lt;p&gt;그렇다면 git 흐름을 조정하지 않으면 발생할 수있는 최악의 상황은 무엇일까요?&lt;/p&gt;

&lt;h2 id=&quot;피해야-할-일반적인-문제&quot;&gt;피해야 할 일반적인 문제&lt;/h2&gt;

&lt;p&gt;이 접근 방식을 생각해 낸 몇 가지 사례를 공유해 보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;chaining-branches-브랜치-연결&quot;&gt;Chaining branches (브랜치 연결)&lt;/h2&gt;

&lt;p&gt;흐름은 모든 새로운 브랜치가 메인 개발 브랜치에서 나와야한다고 지시합니다.&lt;br /&gt;
이것은 다른 반 완성 브랜치에서 불완전한 코드를 가져 오는 것을 방지하기위한 것입니다.&lt;br /&gt;
여기서 문제는 브랜치를 만들고 다른 브랜치를 사용할 때주의를 기울이지 않는 개발자, 실수로 이전 브랜치를 소스로 사용할 수 있다는 것입니다.&lt;/p&gt;

&lt;p&gt;이제 그들은 전체 코드를 개발에 병합하려고 시도하고 있으며 당연히 많은 병합 충돌을 겪고 있습니다.&lt;br /&gt;
개발자가 자신의 작업이 최신 버전이므로 문제를 해결하기 위해 코드 버전을 수락하면 더욱 악화됩니다.&lt;/p&gt;

&lt;p&gt;이 모든 것을 말하고 완료하면 코드를 업로드했지만 그 과정에서 다른 팀 코드의 최신 버전을 완성되지 않은 이전 버전으로 덮어 썼습니다.&lt;/p&gt;

&lt;p&gt;매우 간단한 다이어그램을 사용하여 살펴 보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/git/image00.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결국 F2 지점에서 병합 된 코드에는 F1에서 완성되지 않은 코드가 있습니다.&lt;br /&gt;
그리고 모든 팀이 동일한 저장소를 공유하기 때문에 F1은 프런트 엔드 특정 브랜치 일 수 있고 F2는 백엔드 팀 용일 수 있습니다.&lt;br /&gt;
백엔드의 누군가가 프론트 엔드의 코드를 엉망으로 만드는 데서 오는 혼란을 상상할 수 있습니까?&lt;br /&gt;
예쁘지 않다고 말할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;premature-merges-조기-병합&quot;&gt;Premature merges (조기 병합)&lt;/h2&gt;

&lt;p&gt;이전 문제와 유사하게, 미완성 기능 브랜치를 개발에 병합하여 작동 방식을 확인하거나 
(더 나쁜 경우) 충돌이 없는지 확인하기 위해 본질적으로 미완성 코드로 메인 브랜치를 중독시키는 것입니다. .&lt;/p&gt;

&lt;p&gt;다음 개발자가 기본 브랜치에서 새로운 브랜치를 생성하여 (예상대로) 코드를 전달합니다.&lt;br /&gt;
그리고 그들이 그것을 다시 병합하기로 결정할 때, 당신이 이미 코드를 완성하고 그것들을 병합했다고 가정하면, 
그들은 당신의 코드가 아니라 당신의 코드에 대한 병합 충돌을 해결해야 할 것입니다! #WTF&lt;/p&gt;

&lt;p&gt;이 정확한 경우를 보여주는 다음 흐름도를 확인하십시오.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/git/image01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결국 결과는 이전과 같고, 자신도 모르게 다른 사람의 작업에 영향을 미치고 있습니다.&lt;br /&gt;
실제로 이러한 문제는 프로덕션에 도달 할 때까지 보이지 않을 수 있으므로 코드를 처리하는 방법에 특히주의해야합니다.&lt;/p&gt;

&lt;p&gt;동료의 코드를 망칠 수있는 다른 방법이 있지만,이 두 가지 예와 어느 정도 관련이 있습니다.&lt;br /&gt;
지금 쯤 추측 하겠지만 실제 문제는 흐름 자체가 아니라 팀과 관련된 것입니다.&lt;/p&gt;

&lt;p&gt;이것에 대한 궁극적인 수정은 관련된 개발자를 교육하여 그들이 같은 실수를 계속하지 않도록하는 것입니다.&lt;br /&gt;
그러나 만약 당신이 할 수 없거나 그들이 당신이 가진 다른 옵션을 배우지 못하거나 (결국, 실수하는 것은 인간입니다) 피해를 최소화 할 수있는 방식으로 흐름을 조정하는 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;a-new-flow&quot;&gt;A new flow&lt;/h2&gt;

&lt;p&gt;이 흐름을 통해 달성하고자하는 것은 실수로 인해 발생할 수있는 효과 영역을 좁히는 것입니다.&lt;br /&gt;
코드를 매우 분리 된 브랜치로 분류하여 누군가가 무언가를 잊었거나 단순히 규칙에 따라 플레이하고 싶지 않은 경우 나머지 팀이 아닌 직계 팀원에게만 영향을 미칩니다.&lt;/p&gt;

&lt;p&gt;문제는 피할 수 없습니다.&lt;br /&gt;
여기서 핵심은 문제를 다른 팀으로 퍼 뜨리지 않는 것입니다.&lt;br /&gt;
왜냐하면 문제를 해결하는 것은 프로젝트 전체의 작업이되며, 프론트 엔드 또는 백엔드 문제라면 해당 팀이 처리 할 수 있기 때문입니다. 그들 자신의.&lt;/p&gt;

&lt;p&gt;이제 이 흐름이 두 팀 구성을 찾는 방법을 살펴 보겠습니다 (프로젝트 내 하위 팀 수에 관계없이 쉽게 추정 할 수 있음).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/git/image02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;많은 대사입니다. 알아요.하지만 잠시만 참아주세요.&lt;/p&gt;

&lt;p&gt;이 흐름은 두 팀(T1 및 T2)이 스프린트의 시간 내에 두 가지 다른 기능 (F1 및 F2)에서 어떻게 작동하는지 보여줍니다.&lt;/p&gt;

&lt;p&gt;모든 것이 명확하므로 세부 정보는 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;점선 화살표는 자동으로 발생하는 병합입니다.&lt;/li&gt;
  &lt;li&gt;T1Dev 및 T2Dev는 각 팀의 개별 개발 브랜치입니다.&lt;br /&gt;
그 안에있는 코드가 혼합되어서는 안됩니다.&lt;br /&gt;
그게 요점입니다.&lt;br /&gt;
이것은 프런트 엔드 코드와 데이터 과학 코드를 혼합하는 것과 같습니다.&lt;/li&gt;
  &lt;li&gt;T1Stable 및 T2Stable은 해당 T1Dev 및 T2Dev의 복사본이지만 안정적인 코드 만 포함합니다.&lt;br /&gt;
이러한 분기로의 병합은 해당 기능이 닫혀있을 때만 발생하기 때문에 보장됩니다 (QA 팀이 이를 승인했음을 의미).&lt;/li&gt;
  &lt;li&gt;각 스프린트가 시작될 때 해당 안정적인 브랜치에서 각 팀에 대한 태그가 생성됩니다.&lt;/li&gt;
  &lt;li&gt;현재 스프린트의 태그에서 새로운 기능 브랜치가 생성됩니다.&lt;/li&gt;
  &lt;li&gt;기본 개발 브랜치에 병합되는 모든 항목이 개발자에 의해 테스트되고 예상대로 작동하는 경우 병합 명령이 실행되므로 코드가 QA 브랜치에 병합되고 이후 해당 팀이 테스트 할 수 있도록 해당 환경에 배포됩니다.&lt;/li&gt;
  &lt;li&gt;스프린트가 끝나면 안정적인 코드가 프로덕션에 배포됩니다 (PROD 브랜치에 병합하여).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;많은 것 같고 처리하기에 너무 많아 보일 수 있지만 많은 재난을 예방하는 데 도움이됩니다.&lt;/p&gt;

&lt;p&gt;설명하겠습니다.&lt;/p&gt;

&lt;p&gt;태그는 스프린트 내에서 생성 된 모든 브랜치가 동일한 오리진 코드를 포함하는지 확인합니다.&lt;br /&gt;
이것은 매우 중요합니다.&lt;br /&gt;
그렇지 않은 경우 잠재적으로 1 주일 동안 부분 테스트의 내용으로 스프린트에 새 브랜치를 생성 할 수 있습니다.&lt;br /&gt;
다른 팀원이 팀의 개발 브랜치에 병합되었을 수 있습니다.&lt;br /&gt;
이것은 기본적으로 당신의 코드를 병합하는 동안 다른 사람의 완성되지 않은 코드를 마지 못해 홍보하는 것을 방지합니다.&lt;/p&gt;

&lt;p&gt;안정적인 브랜치는 코드를 프로덕션으로 승격하는 과정 (또는 그 이전 단계 인 UAT)에 도움이됩니다.&lt;br /&gt;
이상적인 세상에서는 QA 지점을 다음 환경으로 홍보하는 것뿐입니다.&lt;br /&gt;
그러나 실제로는 미완성 된 기능이나 버그가있는 기능으로 인해 항상 이월 될 수 있습니다.&lt;br /&gt;
어떤 경우이든 이러한 코드는 QA를 끝내고 프로덕션으로 전환하기에 충분하지 않으므로 다음 배포를 설정할 때 브랜치를 직접 선택해야하며 승인 된 브랜치 만 선택해야합니다.&lt;br /&gt;
이렇게하면 이미 사전 승인 된 각 팀에 대한 분기가 이미 있으므로 이러한 분기를 프로덕션에 병합하기 만하면 준비가 완료됩니다.&lt;/p&gt;

&lt;p&gt;개별 개발 분기 (위 예의 T1Dev 및 T2Dev)는 코드를 분리하는 데 도움이됩니다.&lt;br /&gt;
이 브랜치에 코드를 병합하는 것은 개발자가 직접 수행해야하며이 문서의 시작 부분에서 논의했듯이 올바르게 수행 할 수있는 능력을 항상 신뢰할 수는 없습니다.&lt;/p&gt;

&lt;p&gt;개별 개발 지점을 보유함으로써 실수를하면 전체 프로젝트가 아닌 팀에만 영향을 미치게됩니다.&lt;/p&gt;

&lt;p&gt;기능의 크기에 따라 기능 브랜치에서 여러 개의 개별 브랜치를 생성해야 할 수 있습니다.&lt;br /&gt;
로컬 개발 워크 플로를 구성 할 수 있지만 적절하다고 생각되면 한 가지만 기억하십시오.&lt;br /&gt;
기능 브랜치에서 가져 와서 이동해야하는 모든 작업입니다.&lt;/p&gt;

&lt;h2 id=&quot;흐름-외부의-몇-가지-추가-권장-사항&quot;&gt;흐름 외부의 몇 가지 추가 권장 사항&lt;/h2&gt;

&lt;p&gt;흐름 자체가 팀이나 팀원이 의도하지 않은 실수를 저지를 수있는 범위를 제한하는 데 도움이되지만 이와 함께 진행되고 더 많이 예방할 수있는 다른 권장 사항이 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;흐름-문서화&quot;&gt;흐름 문서화&lt;/h2&gt;

&lt;p&gt;개발 흐름, 특히 복잡한 흐름을 문서화해야합니다.&lt;br /&gt;
모든 사람은 언제 어떤 일이 일어나야하는지 정확히 이해할 수 있어야하며 더 중요한 것은 어떻게해야하는지에 대한 것입니다.&lt;/p&gt;

&lt;p&gt;즉, 개발자를 직접 이끌 수있는 안전한 문서를 작성하는 것을 두려워하지 마십시오.&lt;br /&gt;
많이 들릴지 모르지만 한 번 작성하면 특히 프로젝트를 시작할 때 그리고 나중에 모든 새로운 개발자가 참여할 때 자주 사용하게됩니다.&lt;/p&gt;

&lt;p&gt;단계별 설명이 있으면 끌어 오기 또는 병합을 수행하는 방법을 추측하지 않고 해당 작업을 처리하는 표준화 된 방법을 제공하므로 의심이가는 경우 누구든지 대답 할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;흐름에-대해-토론&quot;&gt;흐름에 대해 토론&lt;/h2&gt;

&lt;p&gt;또 다른 형태의 문서는 가능한 경우 직접 대면 Q &amp;amp; A를하는 것입니다.&lt;br /&gt;
또는 적어도 행 아웃이나 다른 모든 유형의 회원 라이브 모임을 통해 모든 사람이 의심을 표할 수 있습니다.&lt;/p&gt;

&lt;p&gt;때로는 그러한 의심이 계획의 결함을 강조하므로 반대로 변경 사항에 대해 개방적입니다.&lt;/p&gt;

&lt;p&gt;그들이 당신의 리드를 따르도록 열려 있어야하는 것처럼 (당신이 흐름을 만드는 사람이라면) 당신은 당신이 간과하거나 놓친 개선점에 대해 열려 있어야합니다.&lt;br /&gt;
이러한 일이 발생할 수 있음을 인식하고 모든 사람에게 공개하기 전에 GIT에 더 정통한 팀 구성원과 함께 계획을 검토하십시오.&lt;br /&gt;
그들이 괜찮다면 아주 좋은 기회가 있고 다른 사람들도 그렇게 될 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;일부-표준을-시행하는-것을-두려워하지-마십시오&quot;&gt;일부 표준을 시행하는 것을 두려워하지 마십시오.&lt;/h2&gt;

&lt;p&gt;다시 말하지만 때때로 문제는 행동의 자유에서 비롯됩니다.&lt;br /&gt;
GIT로 작업하는 개발자가 작동 방식을 제대로 이해하지 못하지만 외부 도구를 사용하여 이를 보완하려고하면 도구가 없었을 때보 다 더 많은 문제가 발생할 수 있습니다.&lt;/p&gt;

&lt;p&gt;따라서 이를 방지하기 위해 사용해야하는 GIT 클라이언트, 작업해야하는 환경, 폴더 구조 또는 소스 제어 처리와 관련하여 작업을 단순화 할 수 있다고 생각하는 모든 것을 자유롭게 적용 할 수 있습니다.&lt;br /&gt;
이 주제에 대해 더 많이 알고 싶은 경우 구현으로 얻을 수있는 표준 유형에 대한 기사).&lt;/p&gt;

&lt;p&gt;여기에서해야 할 일 중 하나는 GIT와 함께 제공되는 CLI 클라이언트의 사용을 적용한 다음 입력해야하는 모든 명령을 단계별 문서에 나열하는 것입니다.&lt;br /&gt;
이런 식으로 작업은 누구나 쉽게 이해할 수 있습니다 (개발자가 GIT 줄이 아닌 코드 줄에 대해 걱정하게하는 이상적인 시나리오).&lt;/p&gt;

&lt;h2 id=&quot;마지막-단어&quot;&gt;마지막 단어&lt;/h2&gt;

&lt;p&gt;여기까지 읽어 주셔서 감사합니다. 다음을 기억하세요.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;모든 사람이 GIT에 대해 충분히 알고있는 것은 아닙니다.&lt;/li&gt;
  &lt;li&gt;모두가 그것을 인정하지는 않을 것입니다&lt;/li&gt;
  &lt;li&gt;표준 git 흐름이 항상 팀에 적합한 선택은 아닙니다.&lt;br /&gt;
문제가 발생할 때 부수적 인 피해를 최소화하는 흐름을 목표로해야합니다.&lt;/li&gt;
  &lt;li&gt;또한 GIT 사용에 대해 팀을 교육하는 것을 목표로해야합니다.&lt;br /&gt;
처음에는 그렇게 보이지 않을 수도 있지만 잘못 수행 된 병합으로 인해 배송 날짜가 누락되는 것을 방지 할 수있는 투자입니다.&lt;/li&gt;
  &lt;li&gt;마지막으로, 프로세스에 대한 문서를 가능한 한 많이 제공하고, 지속적으로 증가하고 변화하는 라이브 문서임을 공개하십시오.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;읽어 주셔서 다시 한 번 감사 드리며 원하신다면 GIT를 잘못 사용하여 과거에 어떤 문제를 겪었는지 비슷한 이야기를 남겨 주시거나이를 피하기 위해 사용한 다른 흐름을 남겨주세요!&lt;/p&gt;

&lt;h2 id=&quot;logrocket--웹-앱에-대한-완전한-가시성&quot;&gt;LogRocket : 웹 앱에 대한 완전한 가시성&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://logrocket.com/signup/&quot; target=&quot;_blank&quot;&gt;logRocket&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LogRocket은 마치 자신의 브라우저에서 발생한 것처럼 문제를 재생할 수있는 프런트 엔드 애플리케이션 모니터링 솔루션입니다.&lt;br /&gt;
오류가 발생한 이유를 추측하거나 사용자에게 스크린 샷 및 로그 덤프를 요청하는 대신 LogRocket을 사용하면 세션을 재생하여 무엇이 잘못되었는지 빠르게 이해할 수 있습니다.&lt;br /&gt;
프레임 워크에 관계없이 모든 앱에서 완벽하게 작동하며 Redux, Vuex 및 @ ngrx / store에서 추가 컨텍스트를 기록하는 플러그인이 있습니다.&lt;/p&gt;

&lt;p&gt;Redux 작업 및 상태 로깅 외에도 LogRocket은 콘솔 로그, JavaScript 오류, 스택 추적, 헤더 + 본문이있는 네트워크 요청 / 응답, 브라우저 메타 데이터 및 사용자 지정 로그를 기록합니다.&lt;br /&gt;
또한 DOM을 계측하여 페이지에 HTML 및 CSS를 기록하여 가장 복잡한 단일 페이지 앱에서도 픽셀 단위의 완벽한 비디오를 재현합니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Nov 2020 16:12:00 +0900</pubDate>
        <link>http://localhost:4000/git/2020/11/01/git.html</link>
        <guid isPermaLink="true">http://localhost:4000/git/2020/11/01/git.html</guid>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>Node.js 프로젝트간에 코드를 공유하는 더 나은 방법</title>
        <description>&lt;h2 id=&quot;nodejs-프로젝트간에-코드를-공유하는-더-나은-방법&quot;&gt;Node.js 프로젝트간에 코드를 공유하는 더 나은 방법&lt;/h2&gt;

&lt;h3 id=&quot;왜-어려운-방법으로-코드-모듈을-공유했는지-알아보십시오&quot;&gt;왜 어려운 방법으로 코드 모듈을 공유했는지 알아보십시오.&lt;/h3&gt;

&lt;p&gt;Node의 비동기 I/O 서비스가 개발하기 위한 사실상의 도구 중 하나가된 것은 누구나 알고 있습니다.&lt;br /&gt;
(일반적으로 REST API이지만 흔하지는 않은 다른 유형도 매우 일반적입니다).&lt;br /&gt;
또한 중간정도(또는 그 이상)의 프로젝트에 종사 한 적이 있는 경우는 기능을 개별 서비스로 분할하는 과정을 경험 한 적이 있을 것입니다.&lt;/p&gt;

&lt;p&gt;이 방법은 코드가 엉키지 않게 유지하는 데 도움이됩니다.&lt;br /&gt;
부분 배포를 허용하고 이전 코드를 업데이트 할 때 대규모 치명적인 실패의 위험을 줄이는 것이 환상적입니다&lt;br /&gt;
(손상 될 수있는 양이 특정 서비스로 제한되기 때문).&lt;/p&gt;

&lt;p&gt;즉, 위의 경험이 있다면 프로젝트 서비스간에 공유해야하는 내부 사용자 지정 라이브러리가있는 문제가있을 수 있습니다.&lt;br /&gt;
예를 들어, Winston에 대해 작성한 로깅 래퍼 또는 서비스간에 데이터를 보내기 위해 작성한 통신 라이브러리입니다.&lt;/p&gt;

&lt;p&gt;어느 쪽이든 동일한 프로젝트의 모듈간에 공통 코드를 공유하려면 약간의 물류가 필요합니다.&lt;br /&gt;
왜냐하면 수행하지 않는 작업은 동일한 코드의 세 가지 다른 버전을 세 개의 다른 모듈 내에 병렬로 유지하는 것입니다.&lt;br /&gt;
이는 최악의 시나리오이며 쉽게 피할 수있는 시나리오입니다.&lt;/p&gt;

&lt;h2 id=&quot;이-문제를-해결하는-현재-방법&quot;&gt;이 문제를 해결하는 현재 방법&lt;/h2&gt;

&lt;p&gt;누구나이 문제를 처리 할 수있는 다른 방법을 생각 해낼 수있을 것입니다.&lt;br /&gt;
하지만 이를 수행하는 매우 일반적인 두 가지 방법은 다음과 같습니다.&lt;/p&gt;

&lt;h3 id=&quot;1-npm에서-코드-공유&quot;&gt;#1 NPM에서 코드 공유&lt;/h3&gt;

&lt;p&gt;물론, 시간이 지남에 공통 코드에 대해 별도의 프로젝트를 만들고 그것을 NPM에서 공유 할 수 있습니다.&lt;br /&gt;
보기에 이것은 좋은 아이디어이고 완벽한 솔루션처럼 들릴지도 모릅니다.&lt;br /&gt;
결국, NPM의 직무 기술서에 정말 적합하고있는 것은 아닐까요.&lt;/p&gt;

&lt;p&gt;그러나 이것이 더 큰 코드베이스에서 작은 코드이라는 관점에서 갑자기 다른 사람과 공유 할 필요가있는 경우 이것이 조금 문제가있는 접근 될 수있는 몇 가지 이유가 있습니다.&lt;br /&gt;
자세히 설명하도록 하겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;개인 레지스트리를 사용하지 않을 수 있습니다.&lt;br /&gt;
결국 프로젝트의 다른 서비스를 개발하고있는 다른 동료와 사용자 지정 코드를 공유하고 있기 때문에, 
당신은 전 세계의 다른 사람들이 당신의 코드를 사용하는 것을 정말로 원하지 않습니다.&lt;br /&gt;
또한 아실 지 모르지만, NPM을 사용하면 개인 저장소를 사용하여 사용자 지정 코드를 공개하지 않고 공개 할 수 있습니다.&lt;br /&gt;
설치에는 시간과 자원이 소요되므로 이것은이 경우의 해결책이 될 수 없지만, 모듈간에 공유하고자하는 사용자 정의 라이브러리가 2 개 밖에없는 경우는 비용 효과가 높지 않을 가능성이 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이전 요점이 문제가 아니더라도 공통 코드의 코드를 별도의 프로젝트로 추출한 다음 모듈을 올바르게 만들고 게시하려면 노력이 필요합니다.&lt;br /&gt;
모듈을 공유하는 것이 지나치게 복잡하지는 않지만 규모가 크든 작든 상관없이 일부 리팩토링이 필요하며 이를 수행 할 시간이나 인력이 없을 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;추출한 코드는 더 이상 사용할 수 없습니다.&lt;br /&gt;
예, &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 폴더 안에 있습니다.&lt;br /&gt;
이 폴더는 개발자가 감히 입력하거나 볼 위치를 아는 사람이 거의없는 곳입니다.&lt;br /&gt;
여기서 요점은 코드베이스에서 코드를 말 그대로 제거하고 일반 외부 엔티티로 만들었다는 것입니다.&lt;br /&gt;
이것은 이제 자체 코드베이스를 가진 새로운 프로젝트이기 때문에 본질적으로 유지 관리를 어렵게 만듭니다.&lt;br /&gt;
그리고 그것은 우리가 하나의 라이브러리에 대해 이야기하고있는 경우에만, 세 개를 추출한다면 어떨까요?&lt;br /&gt;
아니면 4 개? 누가 그것을 유지하고 있으며 언제 업데이트를 진행합니까?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;언뜻보기에는이 솔루션이 갈 길처럼 보일 수 있지만 장기적으로 계속 유지하는 것은 번거롭고 어색 할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;-2-git를-사용하여-다루기&quot;&gt;# 2 GIT를 사용하여 다루기&lt;/h2&gt;

&lt;p&gt;GIT이 여기에서 잠재적으로 도움을 줄 수있는 두 가지 방법이 있습니다&lt;br /&gt;
(다른 버전 관리 시스템도 동일한 작업을 수행 할 수 있지만 이에 대해 잘 알지 못하므로 제가 아는 것을 고수하겠습니다).&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;범용 코드를 다른 저장소로 이동하고 기본적으로 NPM에서 한 것과 같은 일을 할 수 있지만 폴더에 서브 모듈을 포함해야합니다.&lt;br /&gt;
그것은 틀림 없겠 네요! 즉, 팀원 1 명 (또는 당신조차)가 일반 GIT 저장소를 사용하여 프로젝트의 저장소를 파괴하고 서브 모듈을 믹스에 추가하는 
문제가 발생하지 않은 경우는 손을 들어 하십시오.&lt;br /&gt;
이들은 내가 얘기하는 문제를 해결하기 위해 GIT가 제공하는 우아한 솔루션이지만, 솔직히 도구 자체는 많은 개발자들이 이에 대처하기위한 복잡성을 추가 할 생각에 너무 많은 문제가 남아있다. 접근.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;새 저장소를 추가하는 대신 모든 것을 단일 저장소로 통합 할 수 있습니다.&lt;br /&gt;
결국, 요즘 모두가하고 있습니다! 따라서 서비스를 개별 저장소로 나누고 일반 모듈을 훨씬 더 많은 저장소로 나누는 대신 단일 저장소를 만들고 여기에 모든 것을 추가합니다.&lt;br /&gt;
설정에 따라 좋은 아이디어가 될 수도 있지만 생각해보십시오.&lt;br /&gt;
유지 관리해야하는 개별 미니 프로젝트는 몇 개입니까?&lt;br /&gt;
그리고 일반 모듈을 추가하면 몇 개입니까?&lt;br /&gt;
모든 것을 단일 저장소에 저장하려면 오케스트레이션이 놀랍도록 잘 실행되어야합니다. 저를 믿으세요. 예전에 해봤지만 할 수 있지만 최후의 수단으로 만 추천하겠습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;그럼 당분간 GIT를 그림에서 제외하겠습니다. 또는 적어도 솔루션에서 제외하고 이미 작동하고 있다면 만지지 마십시오.&lt;/p&gt;

&lt;h2 id=&quot;enter-bit--구성-요소를-공유하는-새로운-방법&quot;&gt;Enter Bit : 구성 요소를 공유하는 새로운 방법&lt;/h2&gt;

&lt;p&gt;Bit는 프로젝트간에 구성 요소를 공유 할 수있는 새로운 서비스입니다.&lt;br /&gt;
언뜻보기에는 NPM과 매우 비슷합니다.&lt;br /&gt;
알아요.하지만 잠시만 있으면 돼요?&lt;/p&gt;

&lt;p&gt;컴포넌트의 개념은 기본적으로 클래스 정의가있는 단일 파일, 함수 세트 또는 일반 라이브러리로 채워진 전체 폴더 등 공유하려는 모든 것입니다.&lt;br /&gt;
작업중인 것이 무엇이든간에 공유할 수 있다는 것을 갑자기 깨달은 경우 다른 사람에게 내보낼 수 있습니다.&lt;br /&gt;
그렇다면 NPM과의 차이점은 무엇입니까?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;우선, 코드베이스에서 코드를 제거하는 것이 아닙니다.&lt;br /&gt;
갑자기 프로젝트의 나머지 부분과 분리하지 않고 공유 콘텐츠를 처리하게되므로 이것이 큰 이점이라고 생각합니다.&lt;br /&gt;
결국 생성했기 때문에 계속 유지 관리하지만 동시에 npm 모듈로 공유 할 수 있습니다 (곧 방법을 보여 드리겠습니다).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;공유하는 개별 구성 요소의 수에 관계없이 공유 코드는 코드 저장소에 남아 있습니다.&lt;br /&gt;
코드 버전 관리 솔루션의 일부를 공유하기 위해 추가 오케스트레이션을 추가 할 필요가 없습니다.&lt;br /&gt;
계속 업데이트해야하는 경우 코드를 업데이트하고 Bit의 CLI 도구가 대상 프로젝트에서 최신 버전을 가져 오도록합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;NPM과 달리 Bit는 구성 요소의 종속성 트리를 확인합니다.&lt;br /&gt;
이것이 의미하는 바는 하나의 파일 만 공유하도록 선택했지만 종속성으로 다른 로컬 파일이 필요한 경우 비트가 이를 알려주고 구성 요소의 일부로 추가 할 수 있도록합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;기본적으로 bit는 # 1과 유사한 접근 방식으로 문제를 해결할 수 있지만 실제로 올바르게 수행하는 데 필요한 리소스를 제공합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;개인 레지스트리는 Bit에서 제공하므로 해당 부분에 대해 걱정할 필요가 없습니다.&lt;/li&gt;
  &lt;li&gt;게시 할 새 npm 모듈을 설정할 필요가 없습니다. 몇 단계 만 거치면 리팩토링을 수행 할 필요없이 코드를 공유 할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;다시 말하지만, 코드가 생성 된 주 프로젝트에서 코드를 추출하지 않습니다. 동일한 위치와 동일한 저장소 내부에 남아 있습니다. 프로젝트에 미치는 영향은 거의 없습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bit를-사용하여-구성-요소-공유&quot;&gt;Bit를 사용하여 구성 요소 공유&lt;/h2&gt;

&lt;p&gt;그러면 코드를 어떻게 공유합니까?&lt;br /&gt;
여기에는 더 자세히 확인할 수있는 매우 상세한 문서 페이지가 있지만 단순성을 위해 간단한 단계를 통해 한 프로젝트에서 다른 프로젝트로 간단한 구성 요소를 공유하는 방법을 보여 드리겠습니다.&lt;/p&gt;

&lt;p&gt;제가 공유 할 구성 요소는 로거 개체로, 단순히 Winston의 인스턴스입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winston&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;winston&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;../config.json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winston&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createLogger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winston&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;transports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winston&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winston&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;winston&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;simple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logger&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-1-install-bit&quot;&gt;Step 1: Install bit&lt;/h2&gt;

&lt;p&gt;다양한 방법으로 비트를 설치할 수 있지만 가장 쉽고 일반적인 OS는 다음과 같이 npm을 사용하는 것입니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bit-bin &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-login&quot;&gt;Step 2: Login&lt;/h2&gt;

&lt;p&gt;일단 설치되면 로그인하거나 가입해야합니다. 특히 이미 Github 계정이있는 경우 매우 간단합니다. 명령 줄에서 다음을 입력하십시오.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bit login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 명령은 브라우저를 시작하고 Bit의 로그인 페이지를 엽니다.&lt;br /&gt;
일단 로그인하고 가입 / 로그인 작업을 완료하면 공유 할 항목을 설정할 수 있습니다.&lt;/p&gt;

&lt;p&gt;또한 로그인하면 NPM 구성 파일에 새 범위가 추가됩니다.&lt;br /&gt;
이제 @bit 범위에 액세스하여 기존 NPM 모듈 인 것처럼 구성 요소를 설치할 수 있습니다 (자세한 내용은 잠시 후).&lt;/p&gt;

&lt;h2 id=&quot;step-3-initializing-the-workspace&quot;&gt;Step 3: Initializing the Workspace&lt;/h2&gt;

&lt;p&gt;Bit는 작업 공간 개념을 사용하여 컬렉션 (구성 요소 그룹)을 그룹화합니다.&lt;br /&gt;
가장 먼저해야 할 일은 작업 공간을 초기화하는 것입니다.&lt;br /&gt;
다음을 입력하기 만하면됩니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bit init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그게 다입니다. 완료되면 무엇을 공유할지 결정할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;step-4-adding-file--checking-the-status-of-the-components&quot;&gt;Step 4: Adding file &amp;amp; Checking the status of the components&lt;/h2&gt;

&lt;p&gt;공유하려는 파일을 추가하는 것은 매우 간단합니다. 다음과 같은 프로젝트 구조를 가정합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image24.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파일을 추가하려면 다음을 수행하면됩니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bit add lib/logger.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 파일이 추가되고 “logger”라는 새 구성 요소가 생성됩니다.&lt;br /&gt;
기본적으로 add 명령은 파일 이름을 사용하여 구성 요소의 이름을 지정합니다.&lt;br /&gt;
이 명령에 대한 전체 문서를 확인하여이 명령으로 수행 할 수있는 모든 작업을 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;이제 필요한 모든 것이 있는지 이해하기 위해 상태 확인을 수행 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bit status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image25.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 스크린 샷은 비트별로 수행 된 검사의 출력을 보여줍니다.&lt;br /&gt;
여기에서 CLI가 모듈에 대한 종속성 트리를 만들고 확인합니다.&lt;br /&gt;
이전 코드를 보면 아직 추가하지 않은 JSON 파일이 필요하다는 것을 알 수 있습니다.&lt;br /&gt;
이것은 npm 경로를 사용하는 대신 비트를 사용하는 이점 중 하나이며 중요한 파일을 놓치는 것을 방지 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;다른 파일을 추가 한 후 새 상태 확인을 수행하면 더보기 좋은 응답을받을 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image26.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-5-versioning&quot;&gt;Step 5: Versioning&lt;/h2&gt;

&lt;p&gt;파일을 업로드하기 전에 구성 요소 버전에 태그를 지정해야합니다.&lt;br /&gt;
이렇게하면 모든 구성 요소에 태그가 지정되므로 모두 동시에 초기화하는 것이 좋습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bit tag &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; 0.0.1 &lt;span class=&quot;nt&quot;&gt;--message&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;initial version for the component&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 단계는 필수이며 첫 번째 버전에 태그를 지정할 때까지 아무것도 커밋 할 수 없습니다.&lt;/p&gt;

&lt;h2 id=&quot;step-6-exporting-the-component-구성-요소-내보내기&quot;&gt;Step 6: Exporting the component (구성 요소 내보내기)&lt;/h2&gt;

&lt;p&gt;위의 모든 것이 준비되면 구성 요소를 내보내려면 해당 구성 요소가있을 컬렉션을 만들어야합니다.&lt;br /&gt;
웹 사이트에서이 작업을 수행하고 만든 후에는 다음을 수행 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bit &lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &amp;lt;account-name&amp;gt;.&amp;lt;collection-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;제 경우에는 컬렉션을 “custom-logger”라고 부르고 내 계정 이름은 “deleteman”이므로 명령은 다음과 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bit &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;deleteman.custom-logger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 코드나 리포지토리에 아무 작업도 수행하지 않고 파일을 사용자 정의 레지스트리에 업로드합니다.&lt;/p&gt;

&lt;h2 id=&quot;7-단계--다른-곳에서-사용-선택-사항&quot;&gt;7 단계 : 다른 곳에서 사용 (선택 사항)&lt;/h2&gt;

&lt;p&gt;다른 프로젝트에서 구성 요소를 사용해야하는데 그렇지 않으면 필요하다고 생각하는 경우 여기에서 뭘하는 거죠?&lt;br /&gt;
다음과 같이 작성하여 NPM을 사용하여 설치할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; @bit/&amp;lt;account-name&amp;gt;.&amp;lt;collection-name&amp;gt;.&amp;lt;component-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;따라서 우리의 경우 :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; @bit/deleteman.custom-logger.logger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;구성 요소 중 하나를 참조하고 있지만 모든 종속성도 설치되므로 이를 사용하려면 다음과 같이 필요합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const logger &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; require&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@bit/deleteman.custom-logger.logger&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
logger.info&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Testing test!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;물론 나중에 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; 명령을 실행하는 상자는 2 단계에서 보여준 것처럼 먼저 비트에 로그인해야합니다&lt;br /&gt;
(npm에 대한 비트 범위 설정을하고 액세스 권한을 갖기 위해 개인용 일 수도 있으므로 구성 요소에 추가).&lt;/p&gt;

&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;

&lt;p&gt;이 간단한 단계를 통해 프로젝트에서 코드를 꺼내지 않고도 공유하고 최소한의 노력으로 다른 코드에서 사용할 수있었습니다.&lt;/p&gt;

&lt;p&gt;이 기사는 이미 꽤 길기 때문에 GIT와 Bit 간의 상호 작용이 어떻게 진행되는지, 
구성 요소의 내용과 해당 버전을 업데이트하는 방법 및 모든 요소로 번역 할 수있는 방법을 보여주는 등 선택적 단계를 생략하기로 결정했습니다.&lt;br /&gt;
관련 프로젝트. 이러한 기본 단계 뒤에는 훨씬 더 많은 것이 있지만, 이러한 서비스를 사용하여 최소한의 노력으로 관련 프로젝트간에 공통 코드를 공유 할 때의 이점을 보여주기에 충분합니다.&lt;/p&gt;

&lt;p&gt;이전에 Bit를 사용해 본 적이 있거나 다른 접근 방식으로 이 문제를 해결할 수 있었다면 아래에 댓글을 남겨주세요.&lt;br /&gt;
이에 대해 읽고 싶습니다!&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Nov 2020 14:15:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/11/01/javascript.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/11/01/javascript.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>Gatsby 블로그와 함께 Netlify CMS 사용</title>
        <description>&lt;h2 id=&quot;gatsby-블로그와-함께-netlify-cms-사용&quot;&gt;Gatsby 블로그와 함께 Netlify CMS 사용&lt;/h2&gt;

&lt;p&gt;이 게시물에서는 Netlify CMS에 대해 알아보고 Gatsby로 구축된 예제 JAMstack 블로그에 대한 전체 워크 플로를 설정하는 방법을 알아 봅니다.&lt;br /&gt;
JAMStack은 특히 백엔드 / 데이터베이스에 거의 의존하지 않는 무거운 프런트엔드 로드웹 사이트에서 시장에서 가장 화제의 단어입니다.&lt;/p&gt;

&lt;p&gt;JAMStack은 서버 측 구성 요소 및 데이터베이스를 사용하지 않고 웹 애플리케이션을 구축하는 최신 아키텍처입니다.&lt;br /&gt;
JAMStack 웹 사이트는 JavaScript를 사용하여 API를 사용하는 마크 업에서 동적 데이터를 가져 와서 정적 HTML / CSS 템플릿으로 렌더링합니다.&lt;br /&gt;
JAMstack 웹 사이트는 빠르고 안전하며 확장하기 쉽습니다.&lt;/p&gt;

&lt;p&gt;JAMStacks를 사용하는 조직은 일반적으로이 빌드 타임 데이터 가져 오기를 사용하여 &lt;a href=&quot;https://bit.dev/frontend-teams&quot; target=&quot;_blank&quot;&gt;논리 및 UI 구성 요소&lt;/a&gt;, 
일종의 미니 앱을 서로 다른 프로젝트간에 공유합니다&lt;br /&gt;
(이를 통해 표준화 된 “룩앤필”로 빠르고 안전하게 구성 할 수 있습니다. ”및“voice-and-tone”).&lt;br /&gt;
&lt;a href=&quot;https://bit.dev/frontend-teams&quot; target=&quot;_blank&quot;&gt;Bit&lt;/a&gt; (&lt;a href=&quot;https://github.com/teambit/bit&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;)를 
사용하는 프로젝트 간 구성 요소 공유에 대한 자세한 내용은 다음을 참조하십시오.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.bitsrc.io/publish-and-reuse-react-components-to-build-gatsby-sites-faster-7c08c63e6198&quot; target=&quot;_blank&quot;&gt;Publish and Reuse React Components to Build Gatsby Sites, Faster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;netlify-cms-란-무엇입니까&quot;&gt;Netlify CMS 란 무엇입니까?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.netlifycms.org/docs/intro/&quot; target=&quot;_blank&quot;&gt;Netlify CMS&lt;/a&gt;는 Markdown, JSON, YAML 또는 TOML 형식의 애플리케이션 
Git Repositories에서 커밋으로 콘텐츠 및 데이터를 편집 할 수있는 정적사이트 생성기를 위한 오픈 소스 콘텐츠 관리 시스템 (CMS)입니다.&lt;br /&gt;
Netlify CMS는 간단하고 친숙한 사용자 인터페이스 (UI)를 제공하는 Git 워크 플로의 래퍼 역할을하는 단일 페이지 React 애플리케이션입니다.&lt;/p&gt;

&lt;p&gt;Strapi, Contentful 및 기타 JAMStack 웹 사이트에서도 사용할 수있는 기타 헤드리스 CMS가 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;gatsby-블로그-설정&quot;&gt;Gatsby 블로그 설정&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/&quot; target=&quot;_blank&quot;&gt;Gatsby&lt;/a&gt;는 GraphQL을 사용하여 Markdown에서 데이터를 쿼리하여 React Components에서 렌더링하는 React 기반 정적 사이트 생성기입니다.&lt;br /&gt;
Gatsby 상용구에서 블로그를 만들려면 Gatsby CLI를 설치해야합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; gatsby-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;블로그 사이트 설정을 위해 &lt;a href=&quot;https://github.com/gatsbyjs/gatsby-starter-blog&quot; target=&quot;_blank&quot;&gt;Gatsby의 블로그 스타터 상용구&lt;/a&gt;를 사용할 것입니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gatsby new netlify-cms-gatsby https://github.com/gatsbyjs/gatsby-starter-blog
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;netlify-cms-gatsby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Netlify CMS와 통합하기 전에 애플리케이션을 로컬에서 실행 해 보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm start
&lt;span class=&quot;c&quot;&gt;# Output&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; gatsby-starter-blog@0.1.0 start /Users/ankitjain/project/netlify-cms-gatsby
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; npm run develop
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; gatsby-starter-blog@0.1.0 develop /Users/ankitjain/project/netlify-cms-gatsby
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; gatsby develop
Debugger listening on ws://127.0.0.1:9229/34705dba-39b8-45e8-a25d-73789f81ef07
For &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;, see: https://nodejs.org/en/docs/inspector
success open and validate gatsby-configs - 0.058s
success load plugins - 3.714s
warn The Google Analytics plugin requires a tracking ID. Did you mean to add it?
success onPreInit - 0.026s
success initialize cache - 0.010s
success copy gatsby files - 0.111s
warn gatsby-plugin-feed was initialized &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;gatsby-config.js without a feeds option.
This means that the plugin will use the internal RSS feed creation, which may not match your use &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
This behavior will be removed &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the next major release of gatsby-plugin-feed.
For more info, check out: https://gatsby.dev/adding-rss-feed
success onPreBootstrap - 0.049s
success createSchemaCustomization - 0.147s
success Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;changed pages - 0.002s
success &lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;and transform nodes - 0.123s
success building schema - 0.275s
success createPages - 0.027s
success Checking &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;changed pages - 0.002s
success createPagesStatefully - 0.090s
success update schema - 0.025s
success write out redirect data - 0.003s
success Build manifest and related icons - 0.113s
success onPostBootstrap - 0.119s
info bootstrap finished - 8.025s
success onPreExtractQueries - 0.002s
success extract queries from components - 0.330s
success write out requires - 0.031s
success run static queries - 0.096s - 2/2 20.82/s
success run page queries - 0.227s - 8/8 35.27/s
success Generating image thumbnails - 2.999s - 9/9 3.00/s
⠀
You can now view gatsby-starter-blog &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the browser.
⠀
  http://localhost:8000/
⠀
View GraphiQL, an &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-browser&lt;/span&gt; IDE, to explore your site&lt;span class=&quot;s1&quot;&gt;'s data and schema
⠀
  http://localhost:8000/___graphql
⠀
Note that the development build is not optimized.
To create a production build, use gatsby build
⠀
success Building development bundle - 5.451s
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/gatsby/gatsby01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;훌륭합니다.&lt;br /&gt;
블로그가 실행 중입니다.&lt;br /&gt;
content / blog 디렉토리에서 Markdown 형식의 블로그 게시물을 찾을 수 있습니다.&lt;/p&gt;

&lt;p&gt;Netlify CMS와 통합 해 보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;netlify-cms-통합&quot;&gt;Netlify CMS 통합&lt;/h2&gt;

&lt;p&gt;블로그 사이트에 Netlify CMS를 추가하려면 npm 패키지를 설치해야합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;gatsby-plugin-netlify-cms&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;netlify-cms-app&lt;/code&gt; 플러그인을 사용하여 React 기반 Netlify CMS &lt;code class=&quot;highlighter-rouge&quot;&gt;/admin&lt;/code&gt; 페이지를 렌더링합니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt; netlify-cms-app gatsby-plugin-netlify-cms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Gatsby는 &lt;a href=&quot;https://www.gatsbyjs.com/docs/gatsby-config/&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gatsby-config.js&lt;/code&gt;&lt;/a&gt; 파일을 사용하여 사이트 메타데이터, 
플러그인, 매핑, 프록시 등과 같은 사이트 구성 옵션을 저장합니다.&lt;br /&gt;
플러그인 옵션 아래의 &lt;code class=&quot;highlighter-rouge&quot;&gt;gatsby-config.js&lt;/code&gt;에 Netlify CMS 플러그인을 추가하겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;`gatsby-plugin-netlify-cms`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Netlify CMS는 관리 UI에 대한 백엔드, 컬렉션 및 기타 구성 가능한 설정을 정의하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;config.yml&lt;/code&gt;이라는 구성 파일을 사용합니다.&lt;br /&gt;
Gatsby는 정적 파일을 저장하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;/static&lt;/code&gt; 디렉토리를 사용합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;/static&lt;/code&gt; dir 아래에 &lt;code class=&quot;highlighter-rouge&quot;&gt;/admin/config.yml&lt;/code&gt; 파일을 만들어 보겠습니다. —&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ./static/admin
&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; ./static/admin/config.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;config.yml 파일에 다음 구성 추가 —&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;backend&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test-repo&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;media_folder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;static/img&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;public_folder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/img&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;publish_mode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;editorial_workflow&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;blog'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Blog'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;content/blog'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;index'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;media_folder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;public_folder&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/index'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Title'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;title'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;string'&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Publish&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Date'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;date'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;datetime'&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Description'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;description'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;string'&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Body'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;body'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;markdown'&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Git에 연결하지 않고도 Netlify CMS를 사용할 수있는 &lt;a href=&quot;https://www.netlifycms.org/docs/test-backend/&quot; target=&quot;_blank&quot;&gt;테스트 백엔드&lt;/a&gt;를 사용하고 있습니다.&lt;br /&gt;
Netlify CMS는 GitHub, GitLab, Git Gateway 등과 같은 다른 백엔드를 사용할 수있는 유연성을 제공합니다.&lt;br /&gt;
Netlify 또는 다른 서버에 배포하기 전에 로컬에서 테스트하려고합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고 : 프로덕션에 배포하는 동안 백엔드를 변경해야합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;컬렉션 필드에 콘텐츠 유형도 정의했습니다.&lt;br /&gt;
Netlify CMS는 컨텐츠 필드에 대한 &lt;a href=&quot;https://www.netlifycms.org/docs/widgets/#default-widgets&quot; target=&quot;_blank&quot;&gt;기본 위젯&lt;/a&gt;을 
지원하고 사용자 정의 위젯을 추가 할 수있는 유연성도 제공합니다.
Gatsby 개발 서버를 다시 실행 해 보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/gatsby/gatsby02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위에 추가 된 이미지와 유사한 출력을 볼 수 있습니다.&lt;br /&gt;
Netlify CMS가 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:54258/admin&lt;/code&gt;에서 실행되는 것을 볼 수 있습니다.&lt;br /&gt;
CMS를 살펴 보겠습니다. —&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/gatsby/gatsby03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;훌륭합니다.&lt;br /&gt;
완벽하게 작동하지만 뭔가 빠졌습니다….!&lt;br /&gt;
예, 블로그 게시물의 태그입니다. 죄송합니다.&lt;br /&gt;
태그 추가를위한 기본 위젯이 없지만 Netlify CMS는 자체 사용자 정의 위젯을 생성 할 수있는 유연성을 제공합니다.&lt;br /&gt;
블로그 게시물에 태그를 추가하기 위해 맞춤 위젯을 만들어 보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;태그-위젯-추가&quot;&gt;태그 위젯 추가&lt;/h2&gt;

&lt;p&gt;Netlify CMS는 React.js를 사용하여 사용자 정의 위젯을 추가하기 위해 registerWidget 메소드를 노출합니다.&lt;br /&gt;
위젯 이름, 컨트롤 구성 요소, 미리보기 구성 요소 및 스키마 개체 (미리보기 구성 요소 및 스키마 개체는 선택 사항)의 네 가지 인수를 허용합니다.&lt;br /&gt;
HTML과 CSS를 사용하여 Codepen에 간단한 &lt;a href=&quot;https://codepen.io/ankitjain28/pen/mdVNxpp&quot; target=&quot;_blank&quot;&gt;CSS 태그&lt;/a&gt;를 만들었습니다.&lt;br /&gt;
태그 용 React Component를 만드는 데 사용할 것입니다.&lt;/p&gt;

&lt;p&gt;태그 위젯 용 컨트롤 및 미리보기 구성 요소를 만들 &lt;code class=&quot;highlighter-rouge&quot;&gt;src/components&lt;/code&gt; 디렉터리 아래에 &lt;code class=&quot;highlighter-rouge&quot;&gt;tagWidget&lt;/code&gt;이라는 디렉터리를 만듭니다.&lt;/p&gt;

&lt;p&gt;TagControl 구성 요소 생성 TagControl.js —&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/components/tagWidget/TagControl.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagControl&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;handleChange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;separator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;separator&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;separator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;separator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;separator&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classNameWrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;separator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagControl&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;컨트롤을 렌더링하는 입력 유형 React Component를 만들 것입니다.&lt;/p&gt;

&lt;p&gt;태그를 추가하는 동안 블로그 게시물과 편집기 미리보기 창에서 실제로 CSS 태그를 렌더링하는 미리보기 구성 요소에서. 태그에 스타일을 추가해야합니다.&lt;br /&gt;
gatsby는 스타일을 추가하는 여러 방법을 지원합니다.&lt;br /&gt;
CSS 모듈을 사용하여 전역 CSS로 추가하는 대신 ReactPreview 구성 요소에만 스타일을 포함 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;src/components/tagWidget&lt;/code&gt; dir 아래에 style.module.css라는 파일을 작성하십시오.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.tags&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;list-style-type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;disc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;margin-block-start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;margin-block-end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;margin-inline-end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.tags&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;list-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.tags&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.tags&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.tag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.tag&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.2s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;crimson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.tag&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover::after&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-left-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;crimson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.tags&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;TagPreview 구성 요소를 추가하겠습니다. TagPreview.js —&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/components/tagWidget/TagPreview.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagStyles&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;./style.module.css&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagPreview&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagPreview&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;동일한 디렉토리에 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt; 파일을 추가하고 구성 요소를 내보내겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/components/tagWidget/index.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./TagControl&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./TagPreview&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;훌륭합니다.&lt;br /&gt;
커스텀 위젯을위한 React 컴포넌트를 만들었습니다.&lt;br /&gt;
NetlifyCMS에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;registerWidget&lt;/code&gt; 메소드를 사용하여 등록 해 보겠습니다.&lt;/p&gt;

&lt;p&gt;src 디렉토리에 새 파일 &lt;code class=&quot;highlighter-rouge&quot;&gt;cms/cms.js&lt;/code&gt;를 생성하고 다음 코드를 추가하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;tags&lt;/code&gt;라는 사용자 정의 위젯을 등록합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/cms/cms.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CMS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;netlify-cms-app&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagPreview&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../components/tagWidget&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;CMS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerWidget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TagPreview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;React 기반 NetlifyCMS 페이지를 렌더링하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;gatsby-plugin-netlify-cms&lt;/code&gt;라는 npm 패키지를 추가했습니다.&lt;br /&gt;
또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;gatsby-config.js&lt;/code&gt; 파일에 다음을 추가하여 사용자 정의 위젯을 편집기 미리보기 창에 렌더링하도록이 플러그인에 지시해야합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`gatsby-plugin-netlify-cms`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;modulePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/src/cms/cms.js`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/static/admin/config.yml&lt;/code&gt; 파일의 블로그 컨텐츠 유형에 사용자 정의 위젯 필드를 추가해 보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;- name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tags&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Tags&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tags&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;separator&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;,&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;좋습니다. 개발 서버를 다시 실행하고 &lt;strong&gt;CMS 편집기 창&lt;/strong&gt;을 확인하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/gatsby/gatsby04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;사용자 정의 태그 위젯이 정상적으로 작동합니다.&lt;br /&gt;
&lt;strong&gt;BlogPostTemplate&lt;/strong&gt;에 미리보기 구성 요소를 추가해 보겠습니다.&lt;br /&gt;
또한 Graphql을 사용하여 태그를 쿼리하여 블로그 게시물 템플릿의 &lt;strong&gt;TagPreview&lt;/strong&gt; 구성 요소에 값을 전달할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;src/templates/blog-post.js&lt;/code&gt;를 열고 다음 코드를 추가합니다 —&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/gatsby/gatsby05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;5 행 : TagPreview 구성 요소를 가져 왔습니다.&lt;/li&gt;
  &lt;li&gt;14 행 : 쿼리 된 태그 데이터를 tags 변수에 저장했습니다.&lt;/li&gt;
  &lt;li&gt;42 행 : TagPreview 구성 요소를 추가하고 태그 데이터를 소품으로 전달했습니다.&lt;/li&gt;
  &lt;li&gt;100 행 : graphql을 사용하여 태그를 쿼리합니다. 공식 문서에서 Gatsby의 데이터 쿼리에 대해 자세히 알아보세요.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;훌륭합니다. 파일을 저장하겠습니다. 파일을 저장하자마자 다음 오류가 발생합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/gatsby/gatsby06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cannot query field “tags” on type “MarkdownRemarkFrontmatter”&lt;/p&gt;

&lt;p&gt;이는 graphql 쿼리에 선택적 필드 태그를 정의했지만 아직 Markdown (예 : 블로그 게시물)에 정의되어 있지 않아 Gatsby가 스키마 유형을 추론 할 수 없기 때문입니다.&lt;br /&gt;
태그 필드에 스키마 유형을 추가해 보겠습니다.&lt;br /&gt;
&lt;a href=&quot;https://www.gatsbyjs.com/docs/schema-customization/&quot; target=&quot;_blank&quot;&gt;Gatsby Docs에서 스키마 사용자 정의&lt;/a&gt;에 대해 자세히 알아보십시오.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gatsby-node.js&lt;/code&gt;를 열고 다음 코드를 추가하십시오 —&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createSchemaCustomization&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;schema&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTypes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;typeDefs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;type MarkdownRemark implements Node { frontmatter: Frontmatter }&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buildObjectType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Frontmatter&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[String!]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;createTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;typeDefs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Gatsby 개발 서버를 다시 실행하고 NetlifyCMS를 사용하여 새 블로그 게시물을 쉽게 추가 할 수 있습니다.&lt;br /&gt;
Netlify에 웹 사이트를 배포하려면 공식 문서를 따르고 &lt;code class=&quot;highlighter-rouge&quot;&gt;config.yml&lt;/code&gt;의 백엔드를 다음으로 변경하십시오.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;backend&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git-gateway&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;

&lt;p&gt;이 기사에서는 먼저 JAMStack, Gatsby, Netlify CMS에 대해 알아보고 Git 워크 플로를 통해 데이터 / 콘텐츠를 관리하기 위해 
Netlify CMS를 Gatsby 웹 사이트와 쉽게 통합 할 수있는 방법을 배웠습니다.&lt;br /&gt;
내 GitHub 저장소 &lt;a href=&quot;https://github.com/ankitjain28may/netlify-cms-gatsby&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ankitjain28may/netlify-cms-gatsby&lt;/code&gt;&lt;/a&gt;에서 코드를 찾을 수 있습니다.&lt;br /&gt;
또한 여기 &lt;a href=&quot;https://netlify-cms-gatsby-2k20.netlify.app/&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://netlify-cms-gatsby-2k20.netlify.app&lt;/code&gt;&lt;/a&gt; 웹 사이트를 확인할 수 있습니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Oct 2020 09:56:00 +0900</pubDate>
        <link>http://localhost:4000/gatsby/2020/10/31/gatsby.html</link>
        <guid isPermaLink="true">http://localhost:4000/gatsby/2020/10/31/gatsby.html</guid>
        
        
        <category>gatsby</category>
        
      </item>
    
      <item>
        <title>Bonus. modal2</title>
        <description>&lt;h2 id=&quot;bonus-modal2&quot;&gt;Bonus. modal2&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hyungju-lee.github.io/hyungju-lee-interactions/interactive-web2/bonus_ui/interactive_coding_public/interactive_modal/index2.html&quot; target=&quot;_blank&quot;&gt;modal2 - only javascript, ios,aos 대비&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;팝업을 구현하다보면 다음과같은 요구사항을 종종 듣곤합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Body 스크롤 안되게 막아주세요.&lt;/li&gt;
  &lt;li&gt;PC 브라우저에서 스크롤막을때 스크롤바가 없어지고 생기고에 의해서 콘텐츠가 좌우로 왔다갔다하는 현상을 막아주세요.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;그리고 위에서 1번 요구사항을 충족시키면 또 다음과 같은 요구사항을 들을 때가 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;스크롤 위치를 원래 있던 자리에 위치하게 해주세요. (body 스크롤을 막으면서 스크롤이 위치가 문서 맨 위로 올라가기 때문입니다.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;마크업하는 입장에서 정말 귀찮은(?) 요구입니다.&lt;/p&gt;

&lt;p&gt;그러면서도 한편으론 위와 같은 요구사항들이 충족가능한 요구사항인지 궁금했습니다.&lt;/p&gt;

&lt;p&gt;그래서 시간이 남을 때 테스트해봤습니다.&lt;/p&gt;

&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;

&lt;p&gt;결론은 가능합니다.&lt;br /&gt;
자바스크립트로만 코드를 작성하고 아직 코드 정리도 안해 복잡해보일 수 있습니다.&lt;br /&gt;
하지만 개념은 그렇게 크게 복잡하지 않습니다.&lt;/p&gt;

&lt;h2 id=&quot;body-스크롤-막기&quot;&gt;body 스크롤 막기&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/interaction/image49.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;팝업이 열릴 때 html 태그와 body 태그에 위와 같은 속성들이 적용되게 했습니다.&lt;/p&gt;

&lt;p&gt;body 태그에 &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-right: 17px&lt;/code&gt; 을 주었는데, 이 값은 각 브라우저마다 scroll bar의 width값이 다르므로 자바스크립트로 계산되게 했습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getScrollWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-9999px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;overflow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;60px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;60px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollbarWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollbarWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드를 보면 body 태그에 새로 만든 가상 div 태그를 &lt;code class=&quot;highlighter-rouge&quot;&gt;appendChild&lt;/code&gt; 시키고 &lt;code class=&quot;highlighter-rouge&quot;&gt;overflow: scroll&lt;/code&gt; 을 주어 해당 브라우저의 &lt;strong&gt;scroll bar&lt;/strong&gt; 너비를 읽도록했습니다.&lt;/p&gt;

&lt;p&gt;그리고 해당 &lt;code class=&quot;highlighter-rouge&quot;&gt;document&lt;/code&gt; 의 길이가 브라우저의 &lt;code class=&quot;highlighter-rouge&quot;&gt;innerHeight&lt;/code&gt; 보다 길면 (스크롤이 있다는 뜻이므로) 해당 &lt;strong&gt;scroll bar&lt;/strong&gt; 의 너비를 body 태그에 &lt;code class=&quot;highlighter-rouge&quot;&gt;padding-right&lt;/code&gt; 값으로 주었습니다.&lt;/p&gt;

&lt;p&gt;이렇게 하면 Window PC와 Android 브라우저에선 웬만하면 정상 작동합니다.&lt;/p&gt;

&lt;p&gt;하지만 iOS에서는 상하단바(주소창)가 사라진 상태에서는 여전히 body 부분이 스크롤이 됩니다.&lt;/p&gt;

&lt;p&gt;이러한 현상을 막으려면 &lt;strong&gt;이벤트 전파&lt;/strong&gt; 를 막아야합니다.&lt;/p&gt;

&lt;p&gt;팝업에서 발생한 scroll 이벤트가 body태그로 전파되면서 body태그가 스크롤되는 것이기 때문입니다.&lt;/p&gt;

&lt;h2 id=&quot;이벤트-전파-막기&quot;&gt;이벤트 전파 막기&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preventScrollFunc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preventFunc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preventEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;touchmove&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerPopupInner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;layerPopupCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;preventEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;layerPopupInner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preventScrollFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;preventEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;layerPopupInner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preventScrollFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;resize&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isShow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;preventFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;팝업이 열렸을 때 위의 함수들로 &lt;strong&gt;팝업 컨텐츠의 길이가 브라우저 높이보다 길다면&lt;/strong&gt; 이벤트 전파를 막지 않고 스크롤이되게 하였고, &lt;strong&gt;팝업 컨텐츠의 길이가 브라우저 높이보다 짧다면&lt;/strong&gt; 이벤트 전파를 막아 body 태그에서 스크롤이 되는 현상을 막았습니다.&lt;/p&gt;

&lt;p&gt;그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;resize&lt;/code&gt; 이벤트를 통하여 팝업이 열려있을 때 폰 가로모드/세로모드가 변한걸 감지해 이벤트 전파를 막을지 말지를 결정하도록 했습니다.&lt;/p&gt;

&lt;p&gt;위와 같이하면 위의 요구사항을 모두 충족시킬 수 있습니다.&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Oct 2020 15:53:00 +0900</pubDate>
        <link>http://localhost:4000/js_interactive_web2/2020/10/30/interactive-web2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_interactive_web2/2020/10/30/interactive-web2.html</guid>
        
        
        <category>js_interactive_web2</category>
        
      </item>
    
  </channel>
</rss>
