<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 12 Aug 2020 07:29:01 +0900</pubDate>
    <lastBuildDate>Wed, 12 Aug 2020 07:29:01 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>21. Abstract Loop &amp; Lazy Execution - hoisting</title>
        <description>&lt;h2 id=&quot;hoisting&quot;&gt;hoisting&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;함수 코드를 작성할 때 함수 선언문은 사용하지 말고 표현식을 사용하라는 말을 들어본적이 있을 것이다.&lt;/strong&gt;&lt;br /&gt;
기본적으로 자바스크립트에서 함수는 ‘값’이기 때문에 함수를 선언하지 않고 &lt;strong&gt;표현식으로 사용하는 것이 맞다.&lt;/strong&gt;&lt;br /&gt;
그래야지 &lt;strong&gt;hoisting&lt;/strong&gt;에 의존하지 않고, 어느 시점에 함수가 만들어졌는지를 코드로 명확하게 인지할 수 있다.&lt;br /&gt;
이러한 이유로 선언문을 금지하고 못 쓰게하는 경우도 많다.&lt;br /&gt;
&lt;strong&gt;린트에도 그런 룰이 있다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Class도 마찬가지로 표현식으로 사용하자.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Classes&quot; target=&quot;_blank&quot;&gt;Class Mdn 설명&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;클래스는 함수와 달리 &lt;strong&gt;hoisting&lt;/strong&gt; 기능이 없다고 한다.&lt;br /&gt;
하지만 이 또한 개발자들 사이에서 편이성을 고려해 표현식으로 쓰는 곳도 있다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;보통 위와 같이 작성된 클래스를 많이 봤을 것이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 작성하는 경우도 많다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;여기서 질문 : 위의 className은 let일까 const일까?&lt;/strong&gt;&lt;br /&gt;
위의 className에 다른 값을 할당할 수 있나?&lt;br /&gt;
할 수 있다. &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;이기 때문이다.&lt;br /&gt;
&lt;strong&gt;이래서 표현식으로 사용하는 것이 좋다.&lt;/strong&gt;&lt;br /&gt;
어떤 면에서 봐도 문법적으로 변수에 할당하는 &lt;strong&gt;표현식&lt;/strong&gt;이 더 정확하기 때문에 해당 방법을 추천드린다.&lt;/p&gt;

&lt;p&gt;(정리 더 필요)&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Aug 2020 07:20:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/12/festudy21.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/12/festudy21.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
      <item>
        <title>20. Abstract Loop &amp; Lazy Execution - for ... in (hasOwnProperty)</title>
        <description>&lt;h2 id=&quot;for--in---hasownproperty&quot;&gt;for … in - hasOwnProperty&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 아래에 안전장치를 걸어줘야 한다!! max 같은!!&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// null 이 아니면서 객체인 경우&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// 여기서도 실수 하나 있다. &lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// if (v.hasOwnProperty()) 를 안 넣어준 것이 실수다.&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; 
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드에서 &lt;strong&gt;if (v.hasOwnProperty())&lt;/strong&gt;를 안 넣은 것이 실수다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;for … in 반복문은 proto type에 있는 key까지 다 나오기 때문에 
반드시 옆에 hasOwnProperty를 걸어줘야 한다.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 아래에 안전장치를 걸어줘야 한다!! max 같은!!&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하지만 위의 식은 이미 그런 기능(hasOwnProperty)을 모두 내재하고 있다.&lt;br /&gt;
자기 자신의 프로퍼티만을 가져온다.&lt;/p&gt;

&lt;h2 id=&quot;자바스크립트-특징-두가지&quot;&gt;자바스크립트 특징 두가지&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;언어 자체의 문법적인 내용으로 되어 있다.&lt;/li&gt;
  &lt;li&gt;모든 언어가 그러하듯이 class library로 되어있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;자바스크립트의 class library는 &lt;strong&gt;코어 객체&lt;/strong&gt;라고 알려져 있는데, &lt;strong&gt;코어 객체&lt;/strong&gt;는 무엇일까?&lt;br /&gt;
Math, Object, Array, Function, Date, Regular Expression… 등등&lt;br /&gt;
이들은 표준으로 제공되고 있는 언어 표준의 일부이다.&lt;br /&gt;
자바스크립트 for, while 문들이 표준인 것처럼 자바스크립트가 코어 객체로 제공하고 있는 것들은 Node가 되었건 
뭐가 되었건 갖고 있어야되는 표준 객체이다.&lt;/p&gt;

&lt;p&gt;이러한 &lt;strong&gt;코어 객체&lt;/strong&gt;도 언어 스펙의 일부이다.&lt;br /&gt;
그럼 위 코드에서 쓴 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;Object.values&lt;/span&gt;&lt;/strong&gt;도 언어 스펙의 일부겠지?&lt;br /&gt;
임의대로 이를 우리가 쓰고 싶으면 쓰고, 안 쓰고 싶으면 안 쓰고가 아니라 &lt;strong&gt;언어 스펙의 일부이기 때문에 
이 기능과 부합하면 당연히 언어 스펙에 있는 사항들을 &lt;span style=&quot;color:red&quot;&gt;우선적으로&lt;/span&gt; 써야한다.&lt;/strong&gt;&lt;br /&gt;
그래야 에러가 적고 더 올바르게 작동한다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Compx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Compx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// console을 여러번 돌려도 상관이없다.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// data가 훼손되지 않는다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1,2,3,4,'-',5,6,7,8,9&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1,2,3,4,'-',5,6,7,8,9]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;ERROR!!&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;while(v = data.shift())&lt;/strong&gt; 구문에서 undefined / null 값이면 끝나는거 아닌가?&lt;br /&gt;
위 코드에서 {} 객체 안에 어떤 키값으로 undefined가 들어가있는 경우를 제외하면 
null이나 undefined 값이 있으면 while 문으로 가지않고 바로 &lt;strong&gt;done:true&lt;/strong&gt; 리턴되면서 끝날 것이다.&lt;br /&gt;
&lt;strong&gt;그럼 이전에 while 문 안에서 null 값을 처리해주는 코드를 넣었는데 사실상 필요없는 것이다.&lt;/strong&gt;&lt;br /&gt;
이 문제는 다음에 한번 생각해보자.&lt;/p&gt;

</description>
        <pubDate>Wed, 12 Aug 2020 07:10:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/12/festudy20.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/12/festudy20.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
      <item>
        <title>19. Abstract Loop &amp; Lazy Execution - code coverage</title>
        <description>&lt;h2 id=&quot;abstract-loop--lazy-execution---code-coverage&quot;&gt;Abstract Loop &amp;amp; Lazy Execution - code coverage&lt;/h2&gt;

&lt;p&gt;우리가 코드를 작성하고 테스트를 할 때 &lt;strong&gt;단위 테스트&lt;/strong&gt;라는 개념이 있다.&lt;br /&gt;
다양한 데이터 종류를 준비하고 나눠서 테스트를 하는데 이를 &lt;strong&gt;단위 테스트&lt;/strong&gt;라고 한다.&lt;br /&gt;
&lt;strong&gt;단위 테스트&lt;/strong&gt;를 할 때 유의할 점은, 단위 테스트 케이스를 1000개를 만들고, 2000개를 만들고 이런 것들이 중요한 것이 아니라 
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;코드 커버리지&lt;/span&gt;&lt;/strong&gt;라는 개념이 굉장히 중요하다.&lt;/p&gt;

&lt;p&gt;크롬 개발자창(dev tool)을 보면 &lt;strong&gt;coverage&lt;/strong&gt;라는 탭이 있다.&lt;br /&gt;
이 창에서 보면 왼쪽 부분에 초록색과 빨강색이 표시된다.&lt;br /&gt;
내가 작성한 코드 중에서 사용된 줄과 사용되지 않은 줄들을 표시해놓은 것이다.&lt;/p&gt;

&lt;p&gt;빨강색은 사용안된 코드줄이고 초록색은 사용된 코드줄이다.&lt;br /&gt;
&lt;strong&gt;빨강색이 없고 모두 다 초록색이 되도록 한 것을 &lt;span style=&quot;color:red&quot;&gt;코드 커버리지 100%&lt;/span&gt;라고 한다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;사용되지 않는 코드를 제거하는 것은 중요하다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Aug 2020 22:38:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/11/festudy19.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/11/festudy19.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
      <item>
        <title>18. Abstract Loop &amp; Lazy Execution</title>
        <description>&lt;h2 id=&quot;abstract-loop--lazy-execution&quot;&gt;Abstract Loop &amp;amp; Lazy Execution&lt;/h2&gt;

&lt;p&gt;Generator 는 동기명령을 중간에 멈출 수 있는 기능이 있다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt;(이러한 기능을 &lt;strong&gt;suspension&lt;/strong&gt;이라 한다.)&lt;br /&gt;
그리고 다시 재진행한다.&lt;/p&gt;

&lt;p&gt;이것이 기본사항이돼서 이를 바탕으로 &lt;strong&gt;루프를 추상화(abstract loop)&lt;/strong&gt;한다.&lt;br /&gt;
그리고 &lt;strong&gt;지연실행(lazy execution)&lt;/strong&gt;을 배울 것이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;지연실행이라는 것은 함수의 특권이다.&lt;/strong&gt;&lt;br /&gt;
여러분이 어떤 제어문을 작성했는데, 그 문이 즉시실행되지 않게 하려면 원래는 함수에 담아두고 나중에 실행한다.&lt;br /&gt;
그럼 실행될 때까지 해당 ‘문’은 지연된다.&lt;/p&gt;

&lt;p&gt;기본적으로 지연실행이라는 것은 &lt;strong&gt;함수호출 지연실행&lt;/strong&gt;인데, 이걸 &lt;strong&gt;함수의 호출지연&lt;/strong&gt;말고도 &lt;strong&gt;Generator&lt;/strong&gt;를 통해서도 지연시킬 수 있다.&lt;br /&gt;
Generator 는 문이 다 실행되지 않고 빠져나올 수 있기 때문에, &lt;strong&gt;yield 밑에를 실행시키지 않고 지연시킬 수 있다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;기존 지연실행이 함수형 프로그래밍의 특징이자 함수형의 특권으로 여겨졌다면,&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;코루틴&lt;/span&gt;&lt;/strong&gt;을 지원하는 대부분의 언어에서는 &lt;strong&gt;제어문으로 지연실행을 일으킬 수 있다.&lt;/strong&gt;&lt;br /&gt;
기존의 복잡한 함수형 프로그래밍 지연 실행을 지금은 다 제어문으로 실행할 수 있는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;abstract-loop&quot;&gt;Abstract Loop&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;루프의 추상화&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;아니 루프가 루프지 루프를 추상화해? 라고 생각할지도 모르지만, 이미 지난 시간에 iterator 를 통해 루프를 추상화하는 방법을 공부했다.&lt;br /&gt;
루프문을 iterator 객체로 바꿔놓으면 루프를 위한 상태값들을 iterator 객체가 가지고 있기 때문에 언제든지 똑같은 루프를 재현할 수 있게 되고, 
루프문의 역할 또한 크게 줄어드는 것을 알 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;기존의 제어문은 많은 역할이나 책임을 갖고 있었다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;반면 iterator 를 사용한 경우는, 루프문을 더 돌릴지말지, 루프마다 무얼할지, 이런 결정권들이 iterator 객체로 넘어가기 때문에 
훨씬 더 여러번 똑같은 루프를 제어할 수 있는 객체를 만들어낼 수 있다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이러한 장점&lt;/strong&gt;을 본격적으로 이용해보려고 하는 것이다.&lt;br /&gt;
이전 시간까지는 이것이 진짜 제어문에 비해서 좋은건가?&lt;br /&gt;
이런 의문이 드는 상태였다면 이번시간에 좀 더 복잡한 루프를 해결해보자는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;complex-recursion---1-단순-배열루프&quot;&gt;Complex Recursion - 1. 단순 배열루프&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;단순한 배열 루프부터 시작하자.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;iterable 과 iterator interface 를 떠올려보자.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;iterable interface 는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Symbol.iterator&lt;/code&gt; 메서드를 가지고 있다.&lt;/li&gt;
  &lt;li&gt;iterable interface 는 iterator 를 반환한다.
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;iterator interface 조건은 반드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt; 메서드를 가지고 있어야 한다는 것이다.&lt;br /&gt;
위 예시의 객체 자체가 &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt; 메서드를 가지고 있으므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;해도 iterable 규약에 어긋나지 않는다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt;를 호출하면 &lt;strong&gt;iterator result object&lt;/strong&gt;를 반환한다.&lt;br /&gt;
&lt;strong&gt;iterator result object&lt;/strong&gt;의 조건은 &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;가 있어야 한다는 것이다.
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;complex-recursion---2-복잡한-다층형-그래프는-어떻게-iteration-할-것인가&quot;&gt;Complex Recursion - 2. 복잡한 다층형 그래프는 어떻게 iteration 할 것인가?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;복잡한 다층형 그래프는 어떻게 iteration 할 것인가?&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;???;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 생기면 어떻게 할 것인가?&lt;br /&gt;
&lt;strong&gt;ES6 이전과 이후의 객체 리터럴은 차이가 있다.&lt;/strong&gt;&lt;br /&gt;
바로 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;순서&lt;/span&gt;&lt;/strong&gt;이다.&lt;br /&gt;
ES6 이전엔 객체 리터럴에는 순서가 없다.&lt;br /&gt;
&lt;strong&gt;순서가 없다는 것은 자바로 따지면 &lt;span style=&quot;color:red&quot;&gt;해시맵&lt;/span&gt;으로 되어있다는 것이다.&lt;/strong&gt;&lt;br /&gt;
그런데 자바스크립트 ES6 이후부턴 객체 리터럴을 통해 객체를 선언하면 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;링크드 해시맵&lt;/span&gt;&lt;/strong&gt;으로 되어있다.&lt;br /&gt;
그렇기 때문에 순서가 있는 것이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for ... in&lt;/code&gt;으로 반복시키면 반드시 순서대로 나온다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;현재 목표&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;위의 객체의 &lt;strong&gt;data&lt;/strong&gt;를 해체하여 &lt;strong&gt;next&lt;/strong&gt; 메서드로 &lt;code class=&quot;highlighter-rouge&quot;&gt;1,2,3,4,-,5,6,7,8,9&lt;/code&gt; 값을 내보내게 하는 것이 목표이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// null 이 아니면서 객체인 경우&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; 
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// -&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 6&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 8&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 위 소스 풀이
1. data                             : [ {a: [1,2,3,4], b:'-'}, [5,6,7], 8,9 ]
2. v = this.data.shift()            : 위 data 에서 맨 앞에 값 추출 - {a: [1,2,3,4], b: '-'}
3. case v &amp;amp;&amp;amp; typeof v               :추출된 맨 앞의 값은 Object 이므로 두번째 case 에서 조건이 일치한다.
4. for (var k in v) n.push(v[k])    : n 변수에 [[1,2,3,4], '-'] 배열이 담기게 된다.
5. this.data.unshift()              : data 앞 부분에 [[1,2,3,4], '-'] 를 넣는다.
6. 현재 data 상태                      : [[[1,2,3,4], '-'], [5,6,7], 8,9]

7. v = this.data.shift()            : [[1,2,3,4], '-']
8. Array.isArray(v)                 : true
9. data.unshift(...v)               : data의 상태 - [[1,2,3,4], '-', [5,6,7], 8,9]

10. v = this.data.shift()           : [1,2,3,4]
11. Array.isArray(v)                : true
12. data.unshift(...v)              : [1,2,3,4, '-', [5,6,7], 8,9]

13. v = this.data.shift()           : 1 // data 상태 [2,3,4, '-', [5,6,7], 8,9]
14. return { value: v, done: false} : 1

15. v = this.data.shift()           : 2 // data 상태 [3,4, '-', [5,6,7], 8,9]
...
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아직까지 예제로 보여주고있는 iterable 객체는 내부에 data가 있어 한번 루프가 돌고나면 사라지는 형태다.&lt;br /&gt;
iterable로 data 사본을 만들 수 있는 ‘기회’가 생긴다고 했지 아직 내가 보여준 예제들은 그렇게 만들진 않았다.&lt;/p&gt;

&lt;p&gt;여튼 조금 더 어려운 형태의 루프이다.&lt;br /&gt;
기존 while, for문 처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;i=0&lt;/code&gt; 이런 조건이 아닌, &lt;strong&gt;data에 대한 판정&lt;/strong&gt;이 들어가있다.&lt;br /&gt;
그리고 이런 &lt;strong&gt;data에 대한 판정&lt;/strong&gt;이 &lt;strong&gt;Run Time&lt;/strong&gt;에서 계속 바뀐다.&lt;/p&gt;

&lt;p&gt;왜?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;data의 삽입&lt;/strong&gt;이 일어나기 때문이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;data의 삽입이란 위 루프문으로 data가 들어간다는 뜻이다.&lt;br /&gt;
위의 예제는 객체 안에 data를 넣어놨지만 실제로는 위 iterable 객체를 돌릴 때마다 &lt;strong&gt;새로운 data가 삽입&lt;/strong&gt;된다.&lt;br /&gt;
그렇기 때문에 &lt;strong&gt;Run Time&lt;/strong&gt;에서 &lt;strong&gt;data에 대한 판정&lt;/strong&gt;이 계속 바뀐다는 것이다.&lt;/p&gt;

  &lt;p&gt;이렇기 때문에 &lt;strong&gt;max 조건같은 안전장치를 하나 걸어야된다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;어떤 data 값이 삽입될지 모르기 때문이다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;어떤 data 값이 삽입될지 모르기 때문에 Run Time 평가를 하면 루프문이 무한히 돌 가능성이 있다.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;여튼 위와 같이 소스를 만들면 data 형태가 어떻게 들어오든 &lt;strong&gt;전부 해체&lt;/strong&gt;해버린다.&lt;br /&gt;
그런데 이런식으로 소스를 구성하면 컴퓨터가 느리지 않을까? 라는 걱정은 안해도된다.&lt;br /&gt;
컴퓨터는 반복의 제왕이다.&lt;br /&gt;
우리는 컴퓨터의 반복을 이길 수 없다.&lt;br /&gt;
여러분들이 어지간히 코드를 개선해도 10만번 돌려서 1/1000 밀리초 땡기기도 쉽지 않다.&lt;br /&gt;
컴퓨터는 원래 너무 빠르다.&lt;br /&gt;
&lt;strong&gt;여러분들의 비효율성을 흡수할 수 있을 정도로 빠르다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이러한 이유로 &lt;strong&gt;알고리즘에 너무 욕심을 안내도된다.&lt;/strong&gt;&lt;br /&gt;
컴퓨터 프로그래머 초보가 가장 많이 하는 실수가 바로 어떻게하면 로직을 하나라도 더 줄일 수 있을까에 대한 노력을 많이 하는 것이다.&lt;br /&gt;
알고리즘 퀴즈에선 중요할지몰라도 실무에서는 문제를 더 정확하게 해결하는 것이 중요하다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;코드스피츠 73 확인 필요&lt;/strong&gt;&lt;br /&gt;
위의 식에 오류가 있다고 한다.&lt;br /&gt;
그 오류를 알아내서 수정하는 것이 과제다.&lt;br /&gt;
힌트 : data의 a의 값을 3 또는 7과 같은 값으로 바꾸면 알 수 있다고 한다.&lt;br /&gt;
…이 다음 강의 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;if (v.hasOwnProperty())&lt;/code&gt;를 안 넣어준 것이 실수라고…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;위의 코드는 복잡한 것들 중에선 가장 단순한 것이다.&lt;br /&gt;
위의 코드가 조금만 더 복잡해지면 문제가 발생한다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;디버깅&lt;/span&gt;&lt;/strong&gt;이 안된다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;디버깅&lt;/span&gt;&lt;/strong&gt;을 해도 루프를 조금 돌다가 걸린다.&lt;br /&gt;
또한 생각할 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;조건&lt;/span&gt;&lt;/strong&gt;이 더 많아지면 조건문은 어떻게 처리할 것인가?&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;case&lt;/span&gt;&lt;/strong&gt;가 더 많아진다면 어떻게 처리할 것인가?&lt;br /&gt;
사람이 감당할 수 있을까?&lt;br /&gt;
아무도 감당 못한다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;즉, 코드를 위와 같이 짤 수는 없다는 것이다.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;위의-복잡한-코드를-정리하자&quot;&gt;위의 복잡한 코드를 정리하자&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 아래에 안전장치를 걸어줘야 한다!! max 같은!!&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Object의 instance가 아닌 애들 : Number, String, Boolean, NaN, undefined 즉, primitive value 원시값(기본값)&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// null은 안타깝게도 Object - ES6에서도 과거와의 호환성 때문에 수정 안함&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 그렇기 때문에 앞에 !v &amp;amp;&amp;amp; 조건을 더 붙인 것 - falsy 인 값들은 Object일리가 없기 때문에 이렇게만 적으면 된다.&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 첫줄 if문의 return값에 done 키 안 넣음 -&amp;gt; undefined. done은 truthy, falsy 값이면 된다.&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 첫줄에서 원시값(기본값) 처리&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 두번째 줄에서 배열인지 아닌지를 판정&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 배열이 아닌 애들을 먼저 솎아낸다. &lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 왜? 보다 추상 계층인 애를 먼저 보는 것이다. 구상 계층은 밑에 내릴려고..&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 배열이 아닌 애들은 Object.values라는 ES6 이후 도입된 메서드를 사용해 Object에서 value만 모아서 배열로 만들어준다.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 배열이 아닌것도 위에서 Object.values 메서드로인해 다 배열로 바뀌었으므로 &lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 아래 식에서 다시 해체 할당된다.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 아래에 안전장치를 걸어줘야 한다!! max 같은!!&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. data                                 : [{a:[1,2,3,4], b:'-'}, [5,6,7], 8,9]
2. v = this.data.shift()                : {a:[1,2,3,4], b:'-'}
3. !Array.isArray(v)                    : true
4. v = Object.values(v)                 : v 상태 - [[1,2,3,4], '-']
5. this.data.unshift(...v)              : data 상태 - [[[1,2,3,4], '-'], [5,6,7], 8,9]

6. v = this.data.shift()                : [[1,2,3,4], '-']
7. this.data.unshift(...v)              : data 상태 - [[1,2,3,4], '-', [5,6,7], 8,9]

8. v = this.data.shift()                : [1,2,3,4]
9. this.data.unshift(...v)              : data 상태 - [1,2,3,4, '-', [5,6,7], 8,9]

10. v = this.data.shift()               : 1 // data 상태 - [2,3,4, '-', [5,6,7], 8,9]
11 !v &amp;amp;&amp;amp; !(v instanceof Object)         : true
12. return { value : v }                : 1 // done 은 falsy 값으로 전달했기 때문에 false

13. v = this.data.shift()               : 2 // data 상태 - [3,4, '-', [5,6,7], 8,9]
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 11 Aug 2020 02:16:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/11/festudy18.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/11/festudy18.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
      <item>
        <title>17. iterable 객체 연습 - Generator2</title>
        <description>&lt;h2 id=&quot;iterator의-구현을-돕는-generator&quot;&gt;iterator의 구현을 돕는 Generator&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;N2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Generator 를 복잡하게 짰을 때 iterator 로 번역은 할 수 있지만.. 번역할 엄두가 안나게 된다.&lt;br /&gt;
iterator 로 작성하려면 훨씬 복잡해지기 때문이다.&lt;br /&gt;
하지만 이를 도와주는 것이 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;babel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Generator 를 짜서 &lt;strong&gt;babel&lt;/strong&gt;을 돌려보면 가공할만한 일이 일어난다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;done과 value는 yield가 한번에 처리한다.&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt;가 value를 리턴함으로써 yield하는 동안엔 done이 다 false이다.&lt;br /&gt;
더 이상 &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt;하지 않고 generator를 빠져나올 때 done이 true가 된다.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [0, 1, 4, 9, 16]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0, 1, 4, 9, 16&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;Generator 를 호출하면 iterator 이자 iterable 객체를 return 한다.&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
그래서 iterable 과 똑같은 결과가 나오게 된다.&lt;/p&gt;

&lt;p&gt;Generator 는 계속 호출해도 똑같이 반복한다.&lt;br /&gt;
iterable 이자 iterator 객체이기 때문이다.
iterator 객체이기만하면 한번 돌고 끝일 것이다.&lt;br /&gt;
iterable이자 iterator 객체이기 때문에 계속 반복할 수 있는 것이다.&lt;/p&gt;

&lt;p&gt;배열도 마찬가지로 iterable이자 iterator 객체이기 때문에 반복을 계속해도 계속 반복할 수 있는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;정리&quot;&gt;정리&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;iterator&lt;/strong&gt; - 상태에 대한 관리요소 : 스코프를 활용해서 자율변수 사용 or 인스턴스를 만들어 필드에서 next가 관리&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;generator&lt;/strong&gt; - 상태에 대한 관리 : 상태를 인자, 지역변수 갱신으로 관리한다. 훨씬 간편하게, 그리고 이해하기 쉽게 관리할 수 있다.
그리고 반복시키는 것도 제어문으로 돌리면되고 yield만 해주면 된다. 코드를 작성하는 부담이 확 줄어든다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 11 Aug 2020 01:32:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/11/festudy17.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/11/festudy17.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
      <item>
        <title>16. iterable 객체 연습 - Generator</title>
        <description>&lt;h2 id=&quot;iterable-객체-연습---generator&quot;&gt;iterable 객체 연습 - Generator&lt;/h2&gt;

&lt;p&gt;iterable, iterator interface 소스를 줄여쓰는 방법, 그것이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Generator&lt;/code&gt;의 &lt;strong&gt;첫번째 임무&lt;/strong&gt;이다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Generator&lt;/code&gt;는 세가지 용법이 있다.&lt;br /&gt;
이번 시간에 배울 용법은 제일 쉬운 &lt;strong&gt;iterator Generator&lt;/strong&gt; 용법이다.&lt;/p&gt;

&lt;h2 id=&quot;iterator-generator-용법&quot;&gt;iterator Generator 용법&lt;/h2&gt;

&lt;p&gt;iterator가 너무 기니깐 그걸 좀 더 짧고 쉽게 만드는 기능을 제공해준다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;N2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// max 설정 이유 : 이 배열이 무한배열이 되는걸 막아주기 위해 만든 것&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// next 함수 태어나는 시점&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 태어나는 시점에서 위의 curser, max같은 자율변수를 캡쳐에 가둘 수 있다.&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 우리가 흔히 아는 클로져라는 개념이다.&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;   
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드를 &lt;strong&gt;Generator&lt;/strong&gt;를 활용하면 아래처럼 짧게 만들 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;function 뒤에 공간없이 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;를 붙여아 Generator로 인식&lt;/strong&gt;한다.&lt;br /&gt;
&lt;strong&gt;Generator를 만드는 리터럴이라고 생각하면된다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Generator&lt;/strong&gt;는 &lt;strong&gt;Generator&lt;/strong&gt; 함수를 호출할 때마다 &lt;strong&gt;iterator&lt;/strong&gt;가 만들어진다.&lt;br /&gt;
그런데 &lt;strong&gt;Generator&lt;/strong&gt;가 만드는 &lt;strong&gt;iterator&lt;/strong&gt;는 동시에 &lt;strong&gt;iterable&lt;/strong&gt;이기도 하다.&lt;/p&gt;

&lt;p&gt;배열을 for … of 문으로 돌리면 돌아간다.&lt;br /&gt;
여기서 알 수 있는 것은 배열은 iterable 이라는 것이다.&lt;br /&gt;
배열은 iterable 이면서 동시에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Symbor.iterator&lt;/code&gt;를 호출해보면 배열이 나온다.&lt;br /&gt;
배열 자체가 동시에 iterator 이기도 한 것이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Array Iterator{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;iterator 이자 iterator result object, 배열은 iterable 이자 iterator result object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Generator 를 for … of 문으로 돌릴 수는 없다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;Generator 안에 반복문이 들어가있기 때문..이라고 추측&lt;/strong&gt;&lt;br /&gt;
이전에 말했던 &lt;strong&gt;언어적 혜택&lt;/strong&gt;은 iterable 만을 받아주기로 했다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Generator 가 하는 일 - iterator 객체 만들기&lt;/li&gt;
  &lt;li&gt;Iterable 이 하는 일 - iterator 객체 만들기&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그런데 for … of 뒤에 iterable 은 와도 Generator 는 못온다.&lt;br /&gt;
iterable 이자 iterator 객체여야 for … of 로 돌릴 수 있다는 거다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Generator&lt;/strong&gt; 자체는 for … of 문으로 못돌리지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt;를 반환한 iterable 객체는 돌릴 수 있다.&lt;br /&gt;
&lt;strong&gt;Generator&lt;/strong&gt; 함수 안에서만 쓸 수 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; 키워드란?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; 효과 = &lt;strong&gt;iterable&lt;/strong&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;next()&lt;/code&gt; 반환효과&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;suspension&quot;&gt;Suspension&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt;에서 &lt;strong&gt;Suspension&lt;/strong&gt; 이라는 일이 생긴다.&lt;br /&gt;
&lt;strong&gt;Suspension&lt;/strong&gt; 이라는 일이 생기면서 이때 잠깐 &lt;strong&gt;iterator result object&lt;/strong&gt;를 반환하게 된다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;yield cursor * cursor&lt;/code&gt; 값과 &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt; 까지 객체형태로 바깥으로 내보내고 정지한다.&lt;br /&gt;
**바깥쪽에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt;를 호출할 때까지 정지한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;이것이 얼마나 대단한 일인지 아직 감이 안올 것이다.&lt;br /&gt;
우리가 여지껏 배웠던 폰노이만 구조에서 while 문을 정지시킬 수 있는 방법이 있었나?&lt;br /&gt;
없었다.&lt;br /&gt;
그런데 &lt;strong&gt;Generator&lt;/strong&gt;는 while 문이 돌다가 &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; 부분에서 멈춘다.&lt;br /&gt;
그리고 그 다음에 그 아래에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;cursor++&lt;/code&gt;부터 다시 실행된다.&lt;br /&gt;
이것이 바로 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;suspension&lt;/code&gt;&lt;/strong&gt; 기능이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;자바스크립트는 문을 만들 때 문 하나를 Record로 만들고 Special Record를 이용해서 제어문을 반환한다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;그럼 위의 Generator 함수 안의 while 문도 다 Record로 이루어져 있겠지?&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
따라서 자바스크립트 엔진 실행기는 원래 레코드를 돌리고 있고 진짜 노이만 머신이 아니라 노이만 머신을 &lt;strong&gt;에뮬레이팅(모방)&lt;/strong&gt;하고 있다는 것이다.&lt;/p&gt;

&lt;p&gt;노이만 머신은 이들을 진짜 메모리에 적재시켜서 돌아가게 하지만 자바스크립트 엔진은 얘네들을 전부 Record 로 만들었기 때문에 
Record 를 돌려주고 있는 &lt;strong&gt;가상머신을 돌리고 있다.&lt;/strong&gt;&lt;br /&gt;
그런데 여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt;를 하면 가상머신을 돌리다가 Record 를 더 이상 실행 안하고 멈춘다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이것을 &lt;span style=&quot;color:red&quot;&gt;suspension&lt;/span&gt; 이라고 한다.&lt;/strong&gt;&lt;br /&gt;
요즘은 &lt;code class=&quot;highlighter-rouge&quot;&gt;suspension&lt;/code&gt;을 제공해주는 언어가 꽤 많다.&lt;br /&gt;
자바는 안되지만 코틀린은 되고 C#과 파이썬도 된다.&lt;/p&gt;

&lt;h2 id=&quot;suspension-을-알기-전까지-상식&quot;&gt;Suspension 을 알기 전까지 상식&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;suspension&lt;/code&gt;을 알기 전까지는 ‘문’은 절대로 멈출 수 없는 존재였다.&lt;br /&gt;
그런데 멈출 수 있게 되었다.&lt;br /&gt;
멈출 때마다 바깥에 iterator result object를 return한다.&lt;br /&gt;
&lt;strong&gt;cursor * cursor&lt;/strong&gt;를 &lt;strong&gt;value&lt;/strong&gt;로 삼고 &lt;strong&gt;done&lt;/strong&gt;을 &lt;strong&gt;false&lt;/strong&gt;로 삼아 바깥으로 계속 return해준다는 것이다.&lt;/p&gt;

&lt;h2 id=&quot;코루틴&quot;&gt;코루틴&lt;/h2&gt;

&lt;p&gt;우리는 똑같은 문장을 여러번 시킬 수 있는 함수 블록을 전문적인 용어로 &lt;strong&gt;루틴&lt;/strong&gt;이라고 부른다.&lt;br /&gt;
여러번 반복하기 때문에 &lt;strong&gt;루틴&lt;/strong&gt;이다.&lt;br /&gt;
&lt;strong&gt;그런데 Generator는 루틴이 아니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;루틴은 한번 들어와서 한번에 쭉- 실행되고 끝나는데, Generator는 한번 들어가고 여러번 나갔다가 여러번 다시 들어갈 수 있다.&lt;br /&gt;
이걸 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;코루틴&lt;/span&gt;&lt;/strong&gt;이라고 부른다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Generator 학술적 용어 : 코루틴&lt;/li&gt;
  &lt;li&gt;함수 학술적 용어 : 루틴&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {value: 0, done: false}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {value: 1, done: false}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {value: 4, done: false}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {value: 9, done: false}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {value: 16, done: false}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {value: undefined, done: true}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 22:32:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/10/festudy16.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/10/festudy16.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
      <item>
        <title>15. iterable 객체 연습 - 브라우저의 동기적 명령처리 허용시간</title>
        <description>&lt;h2 id=&quot;iterable-객체-연습---브라우저의-동기적-명령처리-허용시간&quot;&gt;iterable 객체 연습 - 브라우저의 동기적 명령처리 허용시간&lt;/h2&gt;

&lt;p&gt;허용시간에 대한 개념이 없으면 루프를 과도하게 돌려 블로킹을 엄청 일으키는 소스를 짜게될 것이다.&lt;br /&gt;
브라우저는 과연 어느정도까지 여러분들의 소스가 블로킹하는걸 봐주고 있을까?&lt;br /&gt;
PC용 브라우저는 보통 30초 정도 봐준다고 알려져있지만,&lt;br /&gt;
계속된 브라우저 업데이트로 요즘은 20초도 안봐준다.&lt;/p&gt;

&lt;p&gt;모바일에선 어떨까?&lt;br /&gt;
크롬 같은 경우는 크로니움 소스가 안드로이드와 완전히 동일하기 때문에 안드로이드에 있는 크롬과 
PC에 있는 크롬 소스가 완전히 똑같다.&lt;br /&gt;
그렇기 때문에 모바일도 똑같이 20초 정도 적용을 받을 것이다.&lt;/p&gt;

&lt;p&gt;그러나 안드로이드 OS는 &lt;strong&gt;5초 이상의 블로킹이 일어나면&lt;/strong&gt; 앱을 중지시키는 경향이 있다.&lt;br /&gt;
브라우저에서 20초를 허용해도 소용없는 것이다.&lt;/p&gt;

&lt;p&gt;마찬가지로 &lt;strong&gt;window 10은 제어퀀을 window OS&lt;/strong&gt;가 들고 있다.&lt;br /&gt;
윈도우 OS도 15초를 넘기면 마음에 안든다고 중지시키는 기능이 있다.&lt;br /&gt;
여러분들이 &lt;strong&gt;블로킹을 걸 수 있는 범위는 5초 이내&lt;/strong&gt;라고 보는 것이 정상이다.&lt;/p&gt;

&lt;p&gt;문제는 5초동안 블로킹 당하는 시간동안 얼만큼 많이 일할 수 있느냐이다.&lt;br /&gt;
그건 CPU 클럭에 달려있다.&lt;br /&gt;
클럭이 많으면 더 많은 일을, 적으면 더 적은 일을 한다.&lt;br /&gt;
또한 CPU 비트 수에 달려있다.&lt;br /&gt;
64비트는 8바이트씩 처리해서 더 많은 일을, 32비트는 4바이트씩 처리해서 더 적은 일을 하게된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;즉, 우리가 루프를 몇번 걸었냐에 따라 시간이 얼마나 걸릴지를 알 수 없다는 것&lt;/strong&gt;이다.&lt;br /&gt;
머신마다 처리능력이 다르기 때문이다.&lt;br /&gt;
1억번 루프를 하더라도 어떤건 0.5초만에 어떤 CPU는 5분만에 처리할 수도 있다.&lt;br /&gt;
그렇기 때문에 루프가 길어지면 블로킹으로 작동하게 하면 안된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;블로킹을 주기적으로 풀어줘야한다.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;어떻게&quot;&gt;어떻게?&lt;/h2&gt;

&lt;p&gt;총 1억번 루프라면 1000번 루프를 10만번 실행하는 것이다.&lt;br /&gt;
하지만 루프가 끝나고 다시 실행한다면 여전히 &lt;strong&gt;블로킹&lt;/strong&gt;이다.&lt;br /&gt;
그렇기 때문에 사이사이마다 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;슬립&lt;/span&gt;&lt;/strong&gt;을 걸어줘야된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;슬립&lt;/span&gt;&lt;/strong&gt;이란 CPU를 다른 애들이 사용할 수 있게 풀어준다는 개념이다.&lt;br /&gt;
자바스크립트는 이런 행위를 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;프레임&lt;/span&gt;&lt;/strong&gt;이란 개념으로 할 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;노드 - nextTick&lt;/li&gt;
  &lt;li&gt;브라우저 - requestAnimationFrame, setTimeout&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;자바스크립트만 이런 긴 블로킹을 못 갖는게 아니다.&lt;br /&gt;
자바, C 등등 다 마찬가지이다.&lt;br /&gt;
어떤 프로그래밍 언어로 만들어진 명령어든 OS가 더 강하기 때문에 OS가 바로 중지시켜버린다.&lt;/p&gt;

&lt;p&gt;“이렇게 블로킹 일으키면 안돼!”&lt;/p&gt;

&lt;h2 id=&quot;왜-이런식으로-바뀌어가는-걸까&quot;&gt;왜 이런식으로 바뀌어가는 걸까?&lt;/h2&gt;

&lt;p&gt;안드로이드 게임을 개발했는데, 이 게임이 데이터처리한다고 5분을 붙잡고 있다고 해보자.&lt;br /&gt;
그런데 그 사이에 전화가 왔다고 해보자.&lt;br /&gt;
그런데 데이터 처리한다고 전화를 못받는 상황이라면?&lt;br /&gt;
이런 경우를 허용할 수 있느냐는 거다.&lt;br /&gt;
전화오면 OS가 해당 앱을 중지시켜야된다는 뜻이다.&lt;br /&gt;
그래서 OS의 힘이 커지는 것이다.&lt;/p&gt;

&lt;p&gt;이러한 이유로 요즘엔 프로세스의 권한을 축소해 마음대로 할 수 있는 OS가 탄생하는 것이다.&lt;/p&gt;

&lt;p&gt;옛날 바이너리 C코드들은 거의 머신 자원을 자기네들이 독점했다.&lt;br /&gt;
해당 프로세스들이 중지되면?&lt;br /&gt;
바로 블루스크린이 뜨는 것이다.&lt;br /&gt;
이렇듯 예전엔 OS를 중지시킬 정도로 앱이 강력한 권한을 가졌었다.&lt;br /&gt;
하지만 지금은 앱만 중지되지 안드로이드 OS가 통채로 뻗진 않는다.&lt;br /&gt;
OS가 더 많은 권한을 가지고 있어서 그렇다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이러한 기저에 있어서 우리는 루프를 함부로 길게 만들 수 없다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;그런데-그정도로-긴-루프가-있나요-이런-걱정을-할-정도로&quot;&gt;그런데 그정도로 긴 루프가 있나요? 이런 걱정을 할 정도로?&lt;/h2&gt;

&lt;p&gt;canvas tag를 생각하면 된다.&lt;br /&gt;
100 X 100 이미지를 그레이스케일 씌워주려고 canvas tag를 활용해 반복문만 돌려도 벌써 
10000번이다.&lt;br /&gt;
100 X 100이면 그리 크지도 않은 아이콘 사이즈이다.&lt;br /&gt;
1920 X 1000 이런 이미지는?&lt;br /&gt;
이런 이미지를 반복문으로 돌리면 브라우저가 중지시키는 것이다.&lt;br /&gt;
성능이 나쁜 PC에서하면 OS가 브라우저채로 중지시킨다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;그렇기 때문에 루프를 분산해서 거는 스킬이 필요하다.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;루프-만들-때-좋은-팁---무조건-limit를-걸어라&quot;&gt;루프 만들 때 좋은 팁 - 무조건 limit를 걸어라&lt;/h2&gt;

&lt;p&gt;while(true)가 아닌 while(true &amp;amp;&amp;amp; i&amp;lt;7) 이렇게 정의해야된다.&lt;br /&gt;
i는 바깥에다 정의하고..&lt;br /&gt;
우리가 만드는 루프에는 이런 안전장치가 무조건 있어야 된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iterable iterator pattern을 쓸 때 중요한 점&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt;이 무한히 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;가 되지 않게 하는 것&lt;br /&gt;
이걸 못하면 여러분들의 앱이나 웹사이트는 수시로 죽게된다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;N2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// max 설정 이유 : 이 배열이 무한배열이 되는걸 막아주기 위해 만든 것&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Symbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// next 함수 태어나는 시점&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 태어나는 시점에서 위의 curser, max같은 자율변수를 캡쳐에 가둘 수 있다.&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 우리가 흔히 아는 클로져라는 개념이다.&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;   
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;N2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0 1 4 9 16 25&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;N2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 16&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;함수는 함수가 만들어질 때 함수의 바깥에 있는 변수들을 캡쳐하는 기능이 있다.&lt;br /&gt;
캡쳐해서 마치 자기들의 지역변수처럼 사용하는 것이다.&lt;br /&gt;
이를 &lt;strong&gt;free variable&lt;/strong&gt;이라 부른다.&lt;/p&gt;

&lt;p&gt;자기들의 인자 값도 아니고, 지역변수도 아닌데 사용할 수 있는 변수를 &lt;strong&gt;자율변수(free variable)&lt;/strong&gt;이라한다.&lt;br /&gt;
이런 자율변수가 잡혀서 함수가 해당 자율변수를 사용할 수 있는 닫혀진 공간을 &lt;strong&gt;클로저&lt;/strong&gt;라고 부른다.&lt;br /&gt;
&lt;strong&gt;즉, 함수 = 클로저이기도 하다. 자율변수를 가둬둘 수 있기 때문이다.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;함수라는 것은 원래 인자와 지역변수만을 쓸 수 있는데, 
그게 아닌 뭔가를 쓸 수 있으면 그건 모두 자율변수고 
그 자율변수가 갇히면 그게 클로저라는 것이다.&lt;br /&gt;
바깥쪽 레벨도 인식 가능하다.&lt;br /&gt;
위의 소스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Symbol.iterator&lt;/code&gt;라던지 &lt;code class=&quot;highlighter-rouge&quot;&gt;N2&lt;/code&gt;도 인식 가능하다. - &lt;strong&gt;스코프 체인&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;그런데 iterable, iterator interface 좋긴한데 소스가 너무 길다.&lt;br /&gt;
이걸 좀 더 줄여서 쓸 수는 없나?&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 21:42:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/10/festudy15.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/10/festudy15.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
      <item>
        <title>14. iterable 객체 연습 - 동기, 비동기, 블록, 논블록</title>
        <description>&lt;h2 id=&quot;iterable-객체-연습---동기-비동기-블록-논블록&quot;&gt;iterable 객체 연습 - 동기, 비동기, 블록, 논블록&lt;/h2&gt;

&lt;p&gt;이제까지는 iterable 객체 안에 정적의 Array가 있는 상태였다.&lt;br /&gt;
이제는 그것이 아닌 가상의 Array를 다루는 알고리즘을 만들어 보자.&lt;/p&gt;

&lt;p&gt;클래스 구문을 만들 땐 생성자를 &lt;code class=&quot;highlighter-rouge&quot;&gt;constructor&lt;/code&gt;라는 특별한 키로 선언하게 되어있다.&lt;br /&gt;
이 키는 예약어이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;N2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// max 설정 이유 : 이 배열이 무한배열이 되는 걸 막아주기 위해 만든 것&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;프로그램은 노이만 머신 모델에 의하면 메모리에 적재되면 쉴틈없이 실행되고 그 사이에 우리는 
간섭하지 못한다는 것을 알고 있다.&lt;br /&gt;
쉴틈없이 일하는 동안 우리가 아무 간섭도 하지 못하는 이 상태를 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;동기 명령&lt;/span&gt;&lt;/strong&gt;이라고 부른다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;동기 명령&lt;/span&gt;&lt;/strong&gt;이란 한번에 적재된 명령이 한번에 쭉- 실행되는 것을 말한다.&lt;br /&gt;
이런 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;동기 명령&lt;/span&gt;&lt;/strong&gt;이 실행되는 걸 관찰하는 것이 &lt;strong&gt;Flow&lt;/strong&gt;이다.&lt;/p&gt;

&lt;p&gt;동기 명령이 실행되는 동안엔 우리가 간섭할 수 없다.&lt;br /&gt;
CPU를 건들 수 없다는 뜻이다.&lt;br /&gt;
그래서 우리가 이 CPU를 못 건드리는 이 현상을 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;블로킹&lt;/span&gt;&lt;/strong&gt;이라고 부른다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;블록, 논블록은 바로 여기서 오는 말이다.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;동기적인 명령어가 실행되는 동안에 우리가 꼼짝도 못하는 걸 &lt;strong&gt;블로킹당했다&lt;/strong&gt;라고 말한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;그러면 블로킹을 당한 동안엔 해당 적재된 프로그램들이 CPU를 독점적으로 사용하고 있는 상황이다.&lt;br /&gt;
그럼 그 동안 그래픽처리, 네트워크 처리 등등 아무것도 못한다는 소리다.&lt;br /&gt;
&lt;strong&gt;그럼 브라우저는 몇초동안 동기적인 명령 처리를 허용해줄까?&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 21:32:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/10/festudy14.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/10/festudy14.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
      <item>
        <title>Jekyll 버전오류 window</title>
        <description>&lt;p&gt;&lt;img src=&quot;/static/img/jekyll/img11.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이런오류가 뜬다면 아래 방법으로 해결하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/jekyll/img12.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 17:09:00 +0900</pubDate>
        <link>http://localhost:4000/jekyll/2020/08/10/jekyll4.html</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2020/08/10/jekyll4.html</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>13. 자바스크립트 내장 객체 중 iterable 객체는?</title>
        <description>&lt;h2 id=&quot;자바스크립트-내장-객체-중-iterable-객체&quot;&gt;자바스크립트 내장 객체 중 iterable 객체&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Array&lt;/li&gt;
  &lt;li&gt;string&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;string 은 for … of 문에 사용할 수 있다.&lt;br /&gt;
string 스펙을 읽어보면 iterable 객체라고 되어있다.&lt;br /&gt;
때문에 for … of 문이나 위에서 말한 해체 할당 등을 할 수 있다.&lt;br /&gt;
&lt;strong&gt;그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;substr&lt;/code&gt; 같은 메서드를 안써도 쉽게 분해할 수 있다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;과거엔 &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt;을 사용해서 쪼갰지만, 지금은 그냥 분할해도 된다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 's'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 't'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'r'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ['i', 'n', 'g']&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ['s', 't', 'r', 'i', 'n', 'g']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;신규로 출시되는 많은 API 들도 iterable 을 끼고 태어나기 때문에 iterable interface 는 
ES6+ 세계에선 반드시 이해하고 외우고 있어야 하는 내용이다.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 02:18:00 +0900</pubDate>
        <link>http://localhost:4000/festudy/2020/08/10/festudy13.html</link>
        <guid isPermaLink="true">http://localhost:4000/festudy/2020/08/10/festudy13.html</guid>
        
        
        <category>festudy</category>
        
      </item>
    
  </channel>
</rss>
