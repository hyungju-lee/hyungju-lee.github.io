<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 01 Sep 2020 14:53:20 +0900</pubDate>
    <lastBuildDate>Tue, 01 Sep 2020 14:53:20 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>svg 로딩 애니메이션 효과 적용하기</title>
        <description>&lt;h2 id=&quot;svg-로딩-애니메이션-효과-적용하기&quot;&gt;svg 로딩 애니메이션 효과 적용하기&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;body tag&lt;/strong&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;before-load&lt;/code&gt; 클래스가 ‘기본적으로’ 문서 로딩 전까지 붙어있다가 문서가 로딩되고나면 제거하는 방식으로 한다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.loading&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.before-load&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.loading&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그런데 이렇게만 하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt;는 0이 될지 몰라도 해당 영역은 사라지지 않았다.&lt;br /&gt;
때문에 이 영역 밑에 깔려있는 영역을 클릭할 수 없다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt;가 0이된 후에 이 요소도 제거해줘야된다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 13:50:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice13.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice13.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>svg 로딩 애니메이션 만들기</title>
        <description>&lt;h2 id=&quot;svg-로딩-애니메이션-만들기&quot;&gt;svg 로딩 애니메이션 만들기&lt;/h2&gt;

&lt;p&gt;svg 태그를 활용하면 역동적인 애니메이션을 만들기 쉽다.&lt;br /&gt;
svg 태그로 원을 그리고 css로 애니메이션을 주는 원리이다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loading&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- viewBox - 해당 svg를 어느크기로 볼 것인지를 정한다.  --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- viewBox 를 540px로 하고 circle 크기가 54px, 해당 div 크기도 54px이라면 circle이 1/10 크기로 작게 보인다.  --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;svg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loading-circle&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;viewBox=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- cx, cy 좌표이동, r 반지름 --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;circle&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cx=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cy=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;50%&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;r=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;25&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/circle&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loading-circle-ani&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;stroke-dashoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;157&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;stroke-dashoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-147&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;stroke-dashoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-157&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.loading&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.loading-circle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;54px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;54px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.loading-circle&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;circle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;stroke-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* getTotalLength()로 stroke의 길이를 얻어올 수 있음 */&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;stroke-dasharray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;157&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;stroke-dashoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;py&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loading-circle-ani&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infinite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* transition: 1s; */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;stroke-width-4px-이면-전체-넓이는-58px이어야-되는거-아니야&quot;&gt;stroke-width: 4px; 이면 전체 넓이는 58px이어야 되는거 아니야?&lt;/h3&gt;

&lt;p&gt;stroke-width는 border와 달리 안팎으로 반반씩 생긴다.&lt;br /&gt;
즉 &lt;code class=&quot;highlighter-rouge&quot;&gt;stroke-width&lt;/code&gt;가 4px이라면 안쪽에 2px, 바깥쪽에 2px씩 생긴다.&lt;/p&gt;

&lt;h3 id=&quot;stroke-dasharray&quot;&gt;stroke-dasharray&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/practice1/image20.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;stroke-dashoffset&quot;&gt;stroke-dashoffset&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stroke-dashoffset&lt;/code&gt; 속성으로 선들을 이동시킬 수 있다.(부호로 방향설정 가능)&lt;br /&gt;
위 두 개의 속성을 활용하여 애니메이션을 만들 것이다.&lt;/p&gt;

&lt;p&gt;처음 그려진 선을 &lt;code class=&quot;highlighter-rouge&quot;&gt;stroke-dashoffset&lt;/code&gt;으로 이동시켜서 처음 그려진 선 바깥쪽으로 벗어나게하면 벗어난 부분은 눈에 안보이게된다.&lt;br /&gt;
이렇게 안 보이게하고 다시 원래위치로 돌려놓으면 선이 그어지는 것처럼 보이게 된다.&lt;/p&gt;

&lt;p&gt;이런 원리로 애니메이션을 만들 것이다.&lt;/p&gt;

&lt;h3 id=&quot;원둘레-구하는-방법&quot;&gt;원둘레 구하는 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;지름 X 3.14&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 예제에선 지름 50이므로 원둘레가 대략 157이 나온다.&lt;/p&gt;

&lt;h3 id=&quot;원둘레-구하는-다른-방법&quot;&gt;원둘레 구하는 다른 방법&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.loading-circle circle&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTotalLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;원둘레-알아서-어디다-써&quot;&gt;원둘레 알아서 어디다 써?&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stroke-dashoffset&lt;/code&gt;으로 원둘레 안보이게 할 때 사용한다.&lt;br /&gt;
알아낸 원둘레로 다음과 같이 애니메이션을 적용한다.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loading-circle-ani&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;stroke-dashoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;157&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;stroke-dashoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-147&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;stroke-dashoffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-157&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;원둘레만 돌아가면 재미없으니 원 자체도 돌려주자.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@keyframes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loading-spin&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;360deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 12:03:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice12.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice12.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>3번째 섹션 인터렉션 구현 - 부드러운 감속의 원리</title>
        <description>&lt;h2 id=&quot;3번째-섹션-인터렉션-구현---부드러운-감속의-원리&quot;&gt;3번째 섹션 인터렉션 구현 - 부드러운 감속의 원리&lt;/h2&gt;

&lt;p&gt;딱딱 끊김없이 애니메이션이 진행되게끔 하는 기술이다.&lt;br /&gt;
이 기술을 활용하면 맥북에서 윈도우 마우스휠 + 키보드 대응도 가능하다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;원리&lt;/strong&gt;&lt;br /&gt;
시작지점(a)에서 끝지점(b)으로 이동하는 애니메이션이 있다.&lt;br /&gt;
이동할 때 이동해야될 거리의 1/10 만큼 계속 이동시킨다.&lt;br /&gt;
&lt;strong&gt;(b-a) / 10&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;(b-(b-a)/10)/10&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;(b- (b-(b-a)/10)/10) / 10&lt;/strong&gt;&lt;br /&gt;
…
…
&lt;code class=&quot;highlighter-rouge&quot;&gt;requestAnimationFrame&lt;/code&gt;은 &lt;strong&gt;반복적인 재귀함수&lt;/strong&gt;로 짜고, + &lt;code class=&quot;highlighter-rouge&quot;&gt;requestAnimationFrame&lt;/code&gt;는 60 프레임을 목표로한다.&lt;br /&gt;
이러면 엄청 부드러워 보인다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 해당 애니메이션 시작점&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 해당 애니메이션 끝점&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rafId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`translate3d(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;px, 0, 0)`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rafId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cancelAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rafId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 식을 스크롤 이벤트에 걸어준다.&lt;/p&gt;

&lt;h3 id=&quot;섹션이-넘어갈-때-순간적인-버그가-발생한다-그-이유는&quot;&gt;섹션이 넘어갈 때 순간적인 버그가 발생한다. 그 이유는?&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;enterNewScene&lt;/code&gt; 변수의미 기억남?&lt;br /&gt;
해당 변수를 적용할 때와 같은 이유이다.&lt;br /&gt;
넘어갈 때 한템포 늦게 계산되도록 true/false를 적용하자.&lt;/p&gt;

&lt;p&gt;위의 a, b가 간단히 써서 그렇지 원래는 스크롤 위치에 따른 이전 값 ‘a’, 스크롤 마지막 위치에 따른 값 ‘b’ 이다.&lt;br /&gt;
즉 위와 같이 1/10으로 쪼개서 계산해서 &lt;strong&gt;스크롤 위치를 활용하는 다른 곳에도 에러가 발생할지 모른다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;즉 현재 스크롤 위치 값으로 체크하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;scollLoop&lt;/code&gt; 함수의 yOffset을 delayedOffset으로 교체한 이유가 이것이다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 11:42:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice11.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice11.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>3번째 섹션 인터렉션 구현 - requestAnimationFrame</title>
        <description>&lt;h2 id=&quot;3번째-섹션-인터렉션-구현---requestanimationframe&quot;&gt;3번째 섹션 인터렉션 구현 - requestAnimationFrame&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;requestAnimationFrame&lt;/code&gt;은 애니메이션 효과를 최적화하는 방법이다.&lt;br /&gt;
특히 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt;에서 많이 쓰인다.&lt;br /&gt;
브라우저에게 수행하기 원하는 애니메이션을 알리고 다음 리페인트가 진행되기 전에 해당 애니메이션을 업데이트하는 함수를 호출하게 합니다.&lt;br /&gt;
이 메서드는 리페인트하기 전에 실행할 &lt;strong&gt;콜백&lt;/strong&gt;을 &lt;strong&gt;인자로 받습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;예전에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;로 이러한 작업을 했었습니다.&lt;br /&gt;
하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;로 하면,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Frame 유실&lt;/li&gt;
  &lt;li&gt;모바일 배터리 손실&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이란 문제점이 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;equestAnimationFrame&lt;/code&gt;은 위에서 보신바와 같이 &lt;strong&gt;비동기적&lt;/strong&gt;으로 실행된다.&lt;br /&gt;
그리고 &lt;strong&gt;한 번&lt;/strong&gt; 실행된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;requestAnimationFrame&lt;/code&gt;은 기본적으로 재귀함수 방식(반복호출)으로 실행한다.&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;requestAnimationFrame&lt;/code&gt; 메서드는 호출속도를 초당 60번을 목표로 한다. (60 프레임)&lt;br /&gt;
컴퓨터 사양에 따라 좀 느려질 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;requestAnimationFrame&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt; 처럼 실행을 취소할 수도 있다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rafId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;cancelAnimationFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rafId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 11:35:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice10.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice10.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>3번째 섹션 인터렉션 구현 - 스크롤에 반응하는 메뉴</title>
        <description>&lt;h2 id=&quot;3번째-섹션-인터렉션-구현---스크롤에-반응하는-메뉴&quot;&gt;3번째 섹션 인터렉션 구현 - 스크롤에 반응하는 메뉴&lt;/h2&gt;

&lt;p&gt;현재 예제에선 상단 메뉴가 2구간으로 나뉘어져있다.&lt;br /&gt;
제일 위에 구간 &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;45px&lt;/code&gt;이다.&lt;/p&gt;

&lt;p&gt;스크롤 위치가 45px보다 클 때, 메뉴에 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: fixed;&lt;/code&gt; 속성이 있는 &lt;strong&gt;class&lt;/strong&gt;를 부여하면 된다.&lt;br /&gt;
반대일 땐 제거하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageYOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 11:31:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice9.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice9.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>3번째 섹션 인터렉션 구현 - 의문</title>
        <description>&lt;h2 id=&quot;3번째-섹션-인터렉션-구현---의문&quot;&gt;3번째 섹션 인터렉션 구현 - 의문&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;예제 코드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;objs.canvas.height&lt;/code&gt;의 값은 &lt;strong&gt;1080&lt;/strong&gt;?
    &lt;ul&gt;
      &lt;li&gt;html에서 canvas 태그에 선언한 width , height 값이 각각 1920 / 1080 이므로 1080 값이 출력된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fillRect&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;drawImage&lt;/code&gt;를 활용하여 canvas 태그에 그림을 그리고 &lt;strong&gt;애니메이션을 구현&lt;/strong&gt;할 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;clearRect&lt;/code&gt; 메서드를 활용해 canvas 태그에 있는 그림을 지우는 작업을 했다.&lt;br /&gt;
위 예제에선 왜 canvas 태그에 그려진 그림을 지우는 작업을 안할까?
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drawImage&lt;/code&gt;로 canvas 태그 전체를 다시 덮으면서 그림을 그리기 때문에 굳이 지울 필요가 없다.&lt;/li&gt;
      &lt;li&gt;안 지워도 애니메이션 처럼 보이는 이유이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Tue, 01 Sep 2020 11:26:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice8.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice8.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>3번째 섹션 인터렉션 구현 - Blending 처리</title>
        <description>&lt;h2 id=&quot;3번째-섹션-인터렉션-구현---blending-처리&quot;&gt;3번째 섹션 인터렉션 구현 - Blending 처리&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/HTML/Canvas/Tutorial/Using_images&quot; target=&quot;_blank&quot;&gt;canvas drawImage 설명&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/API/CanvasRenderingContext2D/drawImage&quot; target=&quot;_blank&quot;&gt;canvas drawImage - 이미지 자르기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blending 처리를 위해 위 MDN 설명에서 우리가 주목해야될 내용은 &lt;strong&gt;‘이미지 자르기’&lt;/strong&gt; 내용이다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;2d&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/practice1/image18.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;원본 이미지에서 &lt;strong&gt;(sx, sy)&lt;/strong&gt; 좌표에서 &lt;strong&gt;(sWidth, sHeight)&lt;/strong&gt; 크기만큼 잘라내어&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소의 &lt;strong&gt;(dx, dy)&lt;/strong&gt; 좌표에 &lt;strong&gt;(dWidth, dHeight)&lt;/strong&gt; 크기로 그린다.&lt;/p&gt;

&lt;p&gt;이미지를 밑부분 부터 그려야되는 &lt;strong&gt;블랜딩 효과&lt;/strong&gt;를 위해 꼭 알아둬야되는 지식이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/practice1/image19.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;스크롤 위치에 따라 sHeight 값을 늘려주면된다.&lt;/p&gt;

&lt;h3 id=&quot;만약-image-원본-크기와-canvas-크기가-같지-않다면&quot;&gt;만약 image 원본 크기와 canvas 크기가 같지 않다면?&lt;/h3&gt;

&lt;p&gt;위 예제는 image 원본 크기 1920 / 1080, canvas 크기 1920 / 1080으로 같다.&lt;br /&gt;
같지 않다면 image 원본 크기를 알 수 있는 &lt;strong&gt;image 객체&lt;/strong&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;naturalWidth&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;naturalHeight&lt;/code&gt; 값을 사용한다.&lt;br /&gt;
이미지 크기와 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 크기가 같은 것이 개발할 때 편하다.&lt;/p&gt;

</description>
        <pubDate>Tue, 01 Sep 2020 11:06:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice7.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice7.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>3번째 섹션 인터렉션 구현 - 2번째 섹션에서 3번째 섹션으로 넘어갈 때</title>
        <description>&lt;h2 id=&quot;3번째-섹션-인터렉션-구현---2번째-섹션에서-3번째-섹션으로-넘어갈-때&quot;&gt;3번째 섹션 인터렉션 구현 - 2번째 섹션에서 3번째 섹션으로 넘어갈 때&lt;/h2&gt;

&lt;p&gt;2번째 섹션에서 3번째 섹션으로 넘어갈 때 canvas 태그에 그린 그림이 ‘팟’ 하고 나타난다.&lt;br /&gt;
이는 3번째 섹션 진입 후에 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 태그에 그림을 그리기 시작해서이다.&lt;br /&gt;
즉 2번재 섹션에서 그림을 미리 그려놓으면 좋다.&lt;/p&gt;

&lt;p&gt;2번째 &lt;code class=&quot;highlighter-rouge&quot;&gt;scrollHeight&lt;/code&gt;의 &lt;strong&gt;0.9 ~ 1.0&lt;/strong&gt; 구간에서 미리 그림을 그리도록 하겠다.&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 10:59:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice6.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice6.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>3번째 섹션 인터렉션 구현 - window.innerWidth</title>
        <description>&lt;h2 id=&quot;3번째-섹션-인터렉션-구현---windowinnerwidth&quot;&gt;3번째 섹션 인터렉션 구현 - window.innerWidth&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;window.innerWidth&lt;/code&gt;는 &lt;strong&gt;scroll bar width&lt;/strong&gt; 까지 포함된 값을 반환한다.&lt;/p&gt;

&lt;h3 id=&quot;scroll-bar-width가-포함-안된-width-값을-구하려면&quot;&gt;scroll bar width가 포함 ‘안된’ width 값을 구하려면?&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Mac chrome scroll bar width : 15px&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// window scroll bar width : 17px&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;getboundingclientrect-말고-offsettop&quot;&gt;getBoundingClientRect 말고 offsetTop?&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getBoundingClientRect().top&lt;/code&gt;은 스크롤 속도에 따라 부정확한 값이 찍힌다.&lt;br /&gt;
이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;offsetTop&lt;/code&gt; 을 활용해 수정한다.&lt;br /&gt;
그러면 진작 이렇게하지!?&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;offsetTop&lt;/code&gt;을 활용한 방법은 좀 복잡해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;getBoundingClientRect().top&lt;/code&gt;을 활용한 쉬운 방법을 보여준 것이다.&lt;br /&gt;
쉽지만 &lt;strong&gt;부정확하고 정교하지 않다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;offsetTop&lt;/code&gt; : 최상단에서 얼마나 떨어져 있는지를 확인한다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;offsetTop&lt;/code&gt;은 &lt;strong&gt;기준점이 변경가능하다.&lt;/strong&gt;&lt;br /&gt;
CSS로 &lt;code class=&quot;highlighter-rouge&quot;&gt;offsetTop&lt;/code&gt; 값을 알고싶은 요소의 부모요소에 position 속성을 &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;relative&lt;/code&gt;로 변경한다.&lt;br /&gt;
그러면 원하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;offsetTop&lt;/code&gt; 값을 알 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;실제 적용 : css로 부모 요소에 &lt;code class=&quot;highlighter-rouge&quot;&gt;position: relative&lt;/code&gt; 값만 줬는데, 해당 요소의 &lt;code class=&quot;highlighter-rouge&quot;&gt;offsetTop&lt;/code&gt; 값이 10003에서 &lt;strong&gt;612&lt;/strong&gt;로 바뀌었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그런데 이 &lt;strong&gt;612&lt;/strong&gt; 값도 이상하다.&lt;br /&gt;
원래라면 &lt;strong&gt;751&lt;/strong&gt;이 찍혀야된다.&lt;/p&gt;

&lt;h3 id=&quot;transform--scale&quot;&gt;transform : scale()&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;왜 값이 줄었을까?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소에 &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale()&lt;/code&gt;이 적용되어 있기 때문이다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; 속성에 1080px 값을 부여했는데, 이를 &lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale()&lt;/code&gt;로 줄였다.&lt;br /&gt;
&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt; 속성으로 해당 요소의 크기를 조절한건, 해당 요소의 원래 영역에 영향을 미치지 않는다.&lt;/strong&gt;&lt;br /&gt;
즉, &lt;strong&gt;geometric&lt;/strong&gt; 상에서 원래 차지하고 있는 영역은 그대로라는 것이다.&lt;/p&gt;

&lt;p&gt;즉, 612에 &lt;strong&gt;줄어든 만큼 값&lt;/strong&gt;을 다시 구해 더해줘야된다.&lt;br /&gt;
&lt;strong&gt;이래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;getBoundingClientRect()&lt;/code&gt; 메서드를 활용하는 것보다 복잡하다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/practice1/image17.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 인터렉션 구현할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소에 &lt;code class=&quot;highlighter-rouge&quot;&gt;position:fixed; top: 0;&lt;/code&gt; 적용할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;top: 0;&lt;/code&gt;도 위와 같은 이유로 브라우저 상단에 딱 붙지 않는다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;transform: scale()&lt;/code&gt;로 축소되기 이전 영역으로 잡히기 때문이다.&lt;br /&gt;
이도 계산해서 넣어줘야 한다.&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 09:54:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice5.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice5.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
      <item>
        <title>3번째 섹션 인터렉션 구현 - getBoundingClientRect</title>
        <description>&lt;h2 id=&quot;3번째-섹션-인터렉션-구현---getboundingclientrect&quot;&gt;3번째 섹션 인터렉션 구현 - getBoundingClientRect&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/practice1/image16.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3번째 인터렉션 구역은 3번째 섹션이 시작하는 시점 ~ &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소가 &lt;strong&gt;상단에 위치&lt;/strong&gt;하는 시점까지를 계산해야 된다.&lt;br /&gt;
이를 계산하려면 아래와 같이 하면 된다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// scrollHeight 엔 각 섹션의 height 값이 담긴다.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// rectStartY 엔 3번째 섹션의 시작지점과 canvas 요소의 시작지점 사이의 거리 값이 담긴다.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rectStartY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 애니메이션 끝나는 시점&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrollHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rectStartY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;위 값을 간단히 구할 수 있는 방법?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getBoundingClientRect()&lt;/code&gt; : 화면상 해당 요소(object)의 크기와 위치 정보를 가져올 수 있는 메서드&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 메서드로 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소의 정보를 가져오게한다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; 값을 한 번만 가져오게 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;하지만 위 메서드로 &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; 값을 가져올 때 오류가 있다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;스크롤하는 속도&lt;/strong&gt;가 빠르다면 정확한 &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; 값을 가져오기 힘들다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이를 해결하기 위해선?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;offsetTop&lt;/code&gt;을 활용하여 수정한다.&lt;br /&gt;
자세한 해결 방법은 다음 포스팅에서..&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Sep 2020 09:34:00 +0900</pubDate>
        <link>http://localhost:4000/js_practice1/2020/09/01/practice4.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_practice1/2020/09/01/practice4.html</guid>
        
        
        <category>js_practice1</category>
        
      </item>
    
  </channel>
</rss>
