<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 24 May 2020 16:48:52 +0900</pubDate>
    <lastBuildDate>Sun, 24 May 2020 16:48:52 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>17.9 자주 쓰는 문자셋</title>
        <description>&lt;h2 id=&quot;179-자주-쓰는-문자셋&quot;&gt;17.9 자주 쓰는 문자셋&lt;/h2&gt;

&lt;p&gt;매우 자주 쓰이는 일부 문자셋은 단축 표기가 따로 있습니다.&lt;br /&gt;
이들을 클래스라고 부르기도 합니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 16:41:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript249.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript249.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17.8 문자셋</title>
        <description>&lt;h2 id=&quot;178-문자셋&quot;&gt;17.8 문자셋&lt;/h2&gt;

&lt;p&gt;문자셋은 &lt;strong&gt;글자 하나&lt;/strong&gt;를 다른 것으로 &lt;strong&gt;대체(alternation)&lt;/strong&gt;하는 방법을 간단하게 줄인 겁니다.&lt;br /&gt;
예를 들어 문자열에 있는 숫자를 모두 찾고 싶다고 합시다.&lt;br /&gt;
대체를 사용한다면 다음과 같이 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;beer99&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;99 bottles of beer on the wall &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;take 1 down and pass it around -- &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;98 bottles of beer on the wall.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;beer99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/0|1|2|3|4|5|6|7|8|9/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image159.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;좋은 방법은 아닌 것 같군요.&lt;br /&gt;
만약 숫자가 아니라 글자를 찾아야 한다면 다시 만들어야 합니다.&lt;br /&gt;
&lt;strong&gt;숫자&lt;/strong&gt;와 &lt;strong&gt;글자&lt;/strong&gt;를 모두 찾아야 할 때도 다시 만들어야 합니다.&lt;br /&gt;
숫자가 아닌 것을 모두 찾아야 할 때도요.&lt;br /&gt;
지겹죠?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;문자셋은 이런 경우에 편리하게 쓸 수 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;문자셋은 이러이러한 문자들이 들어갈 수 있다는 것을 간략하게 표시할 수 있습니다.&lt;br /&gt;
&lt;strong&gt;범위&lt;/strong&gt;를 지원하므로 더 간략하게 표시하는 것도 가능합니다.&lt;br /&gt;
위 예제를 다음과 같이 고쳐 쓸 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;beer99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/0|1|2|3|4|5|6|7|8|9/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 가능합니다.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;beer99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// 더 좋군요.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;범위를 결합하는 것도 가능합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;범위-결합&quot;&gt;범위 결합&lt;/h3&gt;

&lt;p&gt;다음 정규식은 문자열에서 글자와 숫자, 기타 구두점을 찾습니다(사실 공백만 빼고 다 찾습니다).&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;beer99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[\-&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9a-z.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image160.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;순서는 중요하지 않습니다.&lt;br /&gt;
즉 &lt;code class=&quot;highlighter-rouge&quot;&gt;/[.a-z0-9\-]/&lt;/code&gt;도 똑같습니다.&lt;br /&gt;
&lt;strong&gt;하이픈은 &lt;span style=&quot;color:red&quot;&gt;이스케이프&lt;/span&gt;해야 합니다.&lt;/strong&gt;&lt;br /&gt;
이스케이프하지 않으면 정규식은 하이픈을 범위를 표시하는 메티 문자라고 간주합니다(닫는 대괄호 바로 
앞에 쓰는 하이픈은 이스케이프하지 않아도 됩니다).&lt;/p&gt;

&lt;p&gt;문자셋은 특정 문자, 또는 범위를 &lt;strong&gt;제외(negate)&lt;/strong&gt;하고 찾을 수도 있습니다.&lt;br /&gt;
문자셋을 제외할 때는 다음과 같이 캐럿(^)을 맨 앞에 쓰면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;beer99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[^\-&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;0-9a-z.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image161.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/learningjs/image162.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 정규식은 원래 문자열에서 공백만 찾습니다.&lt;br /&gt;
처음부터 공백만 찾으려고 했다면 더 나은 방법이 있는데, 곧 알게 됩니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 16:23:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript248.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript248.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17.7 HTML 찾기</title>
        <description>&lt;h2 id=&quot;177-html-찾기&quot;&gt;17.7 HTML 찾기&lt;/h2&gt;

&lt;p&gt;이전 예제에서는 HTML 태그를 찾았는데, 이건 정규식으로 매우 자주 하는 일 중 하나입니다.&lt;br /&gt;
자주 하는 일이긴 하지만 반드시 짚고 넘어가야 할 것이 있습니다.&lt;br /&gt;
정규식으로는 HTML을 &lt;strong&gt;분석(parse)&lt;/strong&gt; 할 수 없습니다.&lt;br /&gt;
무언가를 분석하려면 각 부분을 구성 요소로 완전히 분해할 수 있어야 합니다.&lt;br /&gt;
정규식은 아주 간단한 언어만 분석할 수 있습니다.&lt;br /&gt;
물론 정규식을 써서 복잡한 언어를 분석하는 사례가 자주 있지만, 정규식의 한계를 이해하고 상황에 
따라 더 알맞은 방법을 찾아야 합니다.&lt;br /&gt;
&lt;strong&gt;정규식을 HTML에 유용하게 쓸 수 있는 것은 사실이지만 완벽하게 분석하는 것은 불가능합니다.&lt;/strong&gt;&lt;br /&gt;
정규식을 어떻게 만들든 분석할 수 없는 HTML이 항상 존재합니다.&lt;br /&gt;
100% 동작하는 것이 필요하다면 전용 파서를 찾아야 할 겁니다.&lt;br /&gt;
다음 예제를 보십시오.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;br&amp;gt; [!CDATA[[&amp;lt;br&amp;gt; ]]&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;lt;br&amp;gt;/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image158.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 정규식은 두 번 일치하지만, 이 예제에서 진짜 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 태그는 하나뿐입니다.&lt;br /&gt;
다른 하나는 HTML이 아닌 &lt;strong&gt;글자 데이터(CDATA)&lt;/strong&gt;입니다.&lt;br /&gt;
정규식은 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 태그 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 태그가 존재하는 것 같은 계층적 구조에 매우 취약합니다.&lt;br /&gt;
이런 한계를 이론적으로 설명하는 건 이 책의 범위를 벗어납니다.&lt;br /&gt;
&lt;strong&gt;다시 말하지만, 정규식은 HTML 처럼 매우 복잡한 것을 검색하기에는 알맞지 않습니다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 16:11:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript247.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript247.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17.6 대체</title>
        <description>&lt;h2 id=&quot;176-대체&quot;&gt;17.6 대체&lt;/h2&gt;

&lt;p&gt;HTML 페이지를 문자열에 담았다고 합시다.&lt;br /&gt;
이 문자열에서 외부 자원을 가리키는 태그, 즉 &lt;a&gt;, &lt;area /&gt;, &lt;link /&gt;, &lt;script&gt;, &lt;source /&gt;, &lt;meta /&gt;를 
모두 찾고 싶습니다.  
이 문자열에는 태그의 대소문자가 통일되지 않아서 &lt;area /&gt;, &lt;link /&gt; 같은 태그도 있습니다.  
어떻게 찾아야 할까요?  
정규식에서는 **&lt;span style=&quot;color:red&quot;&gt;대체(alternation)&lt;/span&gt;**를 통해 이런 문제를 해결합니다.&lt;/script&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;HTML with &amp;lt;a href=&quot;/one&quot;&amp;gt;one link&amp;lt;/a&amp;gt;, and some JavaScript.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;script src=&quot;stuff.js&quot;&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/area|a|link|script|source/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 첫 시도&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image157.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;위 예제의 파이프(|)는 대체를 뜻하는 &lt;span style=&quot;color:red&quot;&gt;메타 문자&lt;/span&gt;입니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;ig는 대소문자를 가리지 않고(i) 전체(g)를 건색하라는 뜻입니다.&lt;/strong&gt;&lt;br /&gt;
g 플래그가 없으면 일치하는 것 중 첫번째만 반환합니다.&lt;br /&gt;
즉, 위의 정규식을 풀어 읽으면 ‘텍스트에서 area, a, link, script, source를 대소문자를 가리지 않고
모두 찾으라’라는 뜻입니다.&lt;/p&gt;

&lt;h3 id=&quot;area를-a보다-먼저-쓴-이유&quot;&gt;area를 a보다 먼저 쓴 이유&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;그런데 area를 a보다 먼저 쓴 이유는 무엇일까요?&lt;/strong&gt;&lt;br /&gt;
그건 정규식이 왼쪽에서 오른쪽으로 평가하기 때문입니다.&lt;br /&gt;
a를 area보다 먼저 썼다면, 텍스트 안에 area가 있더라도 a를 먼저 소비하므로 남는 rea는 어느 것에도 
일치하지 않습니다.&lt;br /&gt;
&lt;strong&gt;따라서 이렇게 겹치는 것이 있을 때는 더 큰 것을 먼저 써야 합니다.&lt;/strong&gt;&lt;br /&gt;
작은 것을 먼저 쓰면 큰 것은 절대 찾을 수 없습니다.&lt;/p&gt;

&lt;h3 id=&quot;의도하지-않은-결과들&quot;&gt;의도하지 않은 결과들&lt;/h3&gt;

&lt;p&gt;이 예제를 실행하면 의도하지 않은 것들이 많이 나옵니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 안의 link도 나오고, &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML 태그가 아닌 a&lt;/code&gt;도 나옵니다.&lt;br /&gt;
&amp;lt;는 정규식 메타 문자가 아니므로 &lt;strong&gt;/&amp;lt;area|&amp;lt;a|&amp;lt;link|&amp;lt;script|&amp;lt;source/&lt;/strong&gt;을 써서 해결할 수도 있지만, 
더 좋은 방법이 있습니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 15:58:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript246.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript246.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17.5 입력 소비</title>
        <description>&lt;h2 id=&quot;175-입력-소비&quot;&gt;17.5 입력 소비&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;정규식을 ‘큰 문자열에서 부분 문자열을 찾는 방법’이라고만 생각해서는 안 됩니다.&lt;/strong&gt;&lt;br /&gt;
물론 원하는 것이 그것일 수도 있겠지만, 그런 사고방식이 굳어지면 정규식의 근본적인 성격을 이해하지 
못하게 되고 할 수 있는 일도 제한됩니다.&lt;/p&gt;

&lt;p&gt;좀 더 나은 개념은 정규식이 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;입력 문자열을 소비하는 패턴&lt;/code&gt;&lt;/strong&gt;이라고 생각하는 겁니다.&lt;br /&gt;
찾아낸 부분 문자열은 그렇게 소비한 결과 만들어지는 부산물입니다.&lt;/p&gt;

&lt;p&gt;어린이들이 글을 배울 때 자주 하는 게임인, 글자를 바둑판 모양으로 늘어놓고 그중에서 단어를 찾는 
게임을 떠올리면 정규식이 어떻게 동작하는지 좀 더 쉽게 이해할 수 있습니다.&lt;br /&gt;
세로나 대각선은 무시하고, 바둑판의 맨 윗줄에서만 단어를 찾아봅시다.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;X J A N L I O N A T U R E J X E E L N P
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사람은 이런 게임을 아주 쉽게 할 수 있습니다.&lt;br /&gt;
쓱 훑어보기만 해도 LION, ION, NATURE, EEL을 찾을 수 있겠죠.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;역주_&lt;/strong&gt;&lt;br /&gt;
eel은 장어입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;컴퓨터, 그러니까 정규식은 사람 만큼 똑똑하지 않습니다.&lt;br /&gt;
정규식의 입장에서 이 게임을 풀어보면, 정규식이 어떻게 동작하는지 알 수 있고 우리가 주의해야 할
정규식의 한계도 알 수 있습니다.&lt;/p&gt;

&lt;p&gt;단순하게 갑시다.&lt;br /&gt;
정규식으로 LION, ION, NATURE, EEL을 찾는 겁니다.&lt;br /&gt;
달리 말해, 답을 알려주고 그 답을 검증할 수 있는지 보는 겁니다.&lt;/p&gt;

&lt;p&gt;정규식은 첫 번째 글자 X에서 시작합니다.&lt;br /&gt;
찾으려는 단어 중에서 X로 시작하는 단어가 없으니 일치하는 것이 없다고 판단합니다.&lt;br /&gt;
정규식은 거기서 멈추지 않고 다음 글자 J로 이동합니다.&lt;br /&gt;
J로 시작하는 단어도 없죠.&lt;br /&gt;
A로 이동합니다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;이렇게 이동하는 과정에서, 정규식 엔진이 지나간 글자를 소비했다(consume)고 표현합니다.&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
자, L에 도착했습니다.&lt;br /&gt;
정규식 엔진은 &lt;strong&gt;“L? LION이 될 수 있겠군”&lt;/strong&gt;하고 생각할 겁니다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;L은 일치할 가능성이 있으므로 정규식은 L을 소비하지 않습니다.&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
이건 꼭 기억해야 할 중요한 점입니다.&lt;br /&gt;
계속해서 I, O, N을 만납니다.&lt;br /&gt;
&lt;strong&gt;이제 일치하는 단어를 찾았습니다!&lt;/strong&gt;&lt;br /&gt;
일치하는 단어를 찾았으니 L, I, O, N은 소비됩니다.&lt;/p&gt;

&lt;p&gt;그런데 LION과 NATURE가 겹치는군요.&lt;br /&gt;
사람은 여기서 문제를 느끼지 않지만, 정규식은 이미 소비한 것은 절대로 보지 않습니다.&lt;br /&gt;
&lt;strong&gt;다시 말해, 이미 소비한 것을 가지고 일치하는 것을 찾으려고 ‘뒤로 가는’ 일은 없습니다.&lt;/strong&gt;&lt;br /&gt;
N을 이미 소비했으므로 정규식은 NATURE를 찾지 못합니다.&lt;br /&gt;
A T U R E를 확인히지만, 이것으로는 우리가 원하는 단어를 만들 수 없습니다.&lt;br /&gt;
&lt;strong&gt;하지만 EEL은 찾아냅니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;다시 돌아가서, 예제의 LION에서 O를 X로 바꿔봅시다.&lt;br /&gt;
무슨 일이 일어날까요?&lt;br /&gt;
정규식이 L에 도달하면 LION에 일치할 가능성이 있다고 판단하고 L을 소비하지 않습니다.&lt;br /&gt;
I도 마찬가지로 소비하지 않고 미뤄둡니다.&lt;br /&gt;
다음에는 X를 만납니다.&lt;br /&gt;
이 시점에서 정규직은 일치하는 단어를 찾을 수 없다고 판단합니다.&lt;br /&gt;
LIX로 시작하는 단어는 없으니까요.&lt;br /&gt;
그러면 정규식은 일치할 가능성이 있다고 판단했던 곳, 즉 L로 돌아가서 L을 소비한 후 계속 진행합니다.&lt;br /&gt;
이제는 NATURE를 찾습니다.&lt;br /&gt;
LION을 찾지 못했으니 N을 소비하지 않았기 때문입니다.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;X J A N L I X N A T U R E J X E E L N P
ㄴ X 가능한게 있나? 없군. X를 소비한다.

X J A N L I X N A T U R E J X E E L N P
  ㄴ 가능한게 있나? 없군. J를 소비한다.

X J A N L I X N A T U R E J X E E L N P
    ㄴ 가능한게 있나? 없군. A를 소비한다.

X J A N L I X N A T U R E J X E E L N P
      ㄴ 가능한게 있나? 없군. N를 소비한다.

X J A N L I X N A T U R E J X E E L N P
        ㄴ 가능한게 있나? 있다! L은 소비하지 않는다.

X J A N L I X N A T U R E J X E E L N P
          ㄴ 가능한게 있나? 있다! I는 소비하지 않는다.

X J A N L I X N A T U R E J X E E L N P
            ㄴ 가능한게 있나? 음.. 없네!? 앞에 L I X 모두 소비한다.

X J A N L I X N A T U R E J X E E L N P
              ㄴ 가능한게 있나? 있다! N은 소비하지 않는다.

...
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 과정을 다음과 같은 정규식 예제로 묘사했습니다.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;X J A N L I O N A T U R E J X E E L N P
ㄴ X 가능한게 있나? 없군. X를 소비한다.

X J A N L I O N A T U R E J X E E L N P
  ㄴ 가능한게 있나? 없군. J를 소비한다.

X J A N L I O N A T U R E J X E E L N P
    ㄴ 가능한게 있나? 없군. A를 소비한다.

X J A N L I O N A T U R E J X E E L N P
      ㄴ 가능한게 있나? 없군. N를 소비한다.

X J A N L I O N A T U R E J X E E L N P
        ㄴ 가능한게 있나? 있다! L은 소비하지 않는다.

X J A N L I O N A T U R E J X E E L N P
          ㄴ 가능한게 있나? 있다! I는 소비하지 않는다.

X J A N L I O N A T U R E J X E E L N P
            ㄴ 가능한게 있나? 있다! O는 소비하지 않는다.

X J A N L I O N A T U R E J X E E L N P
              ㄴ 일치하는 것을 찾았다! 찾은 것을 전부 소비한다. (L I O N)

X J A N L I O N A T U R E J X E E L N P
                ㄴ 가능한게 있나? 없군. A를 소비한다.

... input 전체를 소비할 때까지 계속한다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정규식 메타 언어에 대해 살펴보기 전에, 정규식이 문자열을 &lt;strong&gt;‘소비’&lt;/strong&gt;할 때 사용하는 알고리즘을
간단히 살펴봅시다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;문자열 왼쪽에서 오른쪽으로 진행합니다.&lt;/li&gt;
  &lt;li&gt;일단 소비한 글자에 다시 돌아오는 일은 없습니다.&lt;/li&gt;
  &lt;li&gt;한 번에 한 글자씩 움직이며 일치하는 것이 있는지 확인합니다.&lt;/li&gt;
  &lt;li&gt;일치하는 것을 찾으면 해당하는 글자를 한꺼번에 소비한 후 다음 글자로 진행합니다(정규식에 /g 플래그를 써서 전역으로 검색할 때에 해당합니다. 다시 설명합니다).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이것은 일반적인 부분만 훑어본 것이고, 당연히 &lt;strong&gt;이것보다 세밀한 알고리즘이 존재&lt;/strong&gt;합니다.&lt;br /&gt;
예를 들어 일치하는 것이 없다고 판단하고 일찍 포기하는 알고리즘도 있습니다(성능이 개선됩니다).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;정규식 메타 언어에 대해 설명할 때도 이 알고리즘을 계속 염두에 두십시오.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;왼쪽에서 오른쪽으로 진행하면서 한 번에 한 글자씩 소비하고, 일치하는 것을 찾으면 그 전체를 즉시 소비합니다.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 15:20:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript245.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript245.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17.4 정규식을 사용한 문자열 교체</title>
        <description>&lt;h2 id=&quot;174-정규식을-사용한-문자열-교체&quot;&gt;17.4 정규식을 사용한 문자열 교체&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;String.prototype.replace&lt;/code&gt; 메서드에도 정규식을 쓸 수 있습니다.&lt;br /&gt;
정규식을 쓰면 더 여러 가지 일을 할 수 있습니다.&lt;br /&gt;
간단한 것부터 시작합시다.&lt;br /&gt;
네 글자 이상으로 이루어진 단으러르 모두 교체하겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;As I was going to Saint Ives&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w{4,}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;****&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;As I was **** to **** ****&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image156.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;나중에 훨씬 더 다재다능한 교체 방법을 설명할 겁니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 15:17:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript244.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript244.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17.3 정규식 검색</title>
        <description>&lt;h2 id=&quot;173-정규식-검색&quot;&gt;17.3 정규식 검색&lt;/h2&gt;

&lt;p&gt;정규식이 만들어지면 다양한 옵션으로 문자열을 검색할 수 있습니다.&lt;/p&gt;

&lt;p&gt;정규식의 문자열 교체 옵션에 대해 이해하려면 정규식 메타 언어에 대해 좀 알아야 하는데, 
정적인 문자열을 예제로 사용한다면 좀 지루할 겁니다.&lt;br /&gt;
예제로 사용할 정규식은 &lt;code class=&quot;highlighter-rouge&quot;&gt;/\w{3,}/ig&lt;/code&gt;입니다.&lt;br /&gt;
&lt;strong&gt;이 정규식은 세 글자 이상인 단어에 모두 일치하고, 대소문자는 가리지 않습니다.&lt;/strong&gt;&lt;br /&gt;
당장 이해되지 않아도 괜찮습니다.&lt;br /&gt;
이 장을 진행하다 보면 자연히 알게 될 겁니다.&lt;br /&gt;
먼저 검색하는 방법을 알아봅시다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;As I was going to Saint Ives&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w{3,}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 문자열(input)의 메서드를 사용할 때&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// [&quot;was&quot;, &quot;going&quot;, &quot;Saint&quot;, &quot;Ives&quot;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// 5 (세 글자 이상으로 이루어진 첫 단어의 인덱스는 5입니다.)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 정규식(re)의 메서드를 사용할 때&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// [&quot;was&quot;] (처음 일치하는 것)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// [&quot;going&quot;] (exec는 마지막 위치를 '기억'합니다.)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// [&quot;Saint&quot;] (exec는 마지막 위치를 '기억'합니다.)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// [&quot;Ives&quot;] (exec는 마지막 위치를 '기억'합니다.)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// null -- 일치하는 것이 더는 없습니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// true (input에는 세 글자 이상으로 이루어진 단어가 한 개 이상 있습니다.)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 위 예제는 모두 정규식 리터럴을 그대로 써도 됩니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w{3,}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w{3,}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w{3,}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w{3,}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이중 가장 많은 정보를 제공하는 것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;RegExp.prototype.exec&lt;/code&gt; 메서드지만, 현실적으로는 
아마 가장 적게 쓰는 메서드일 겁니다.&lt;br /&gt;
필자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;String.prototype.match&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;RegExp.prototype.test&lt;/code&gt;를 가장 자주 쓰는 편입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image155.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 14:04:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript243.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript243.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17.2 정규식 만들기</title>
        <description>&lt;h2 id=&quot;172-정규식-만들기&quot;&gt;17.2 정규식 만들기&lt;/h2&gt;

&lt;p&gt;복잡한 정규식 메타 언어를 공부하기 전에 먼저 자바스크립트에서 정규식을 어떻게 만들고 사용하는지부터 
알아봅시다.&lt;br /&gt;
바로 앞 예제처럼 특정 문자열을 검색하는 것부터 시작합시다.&lt;br /&gt;
소잡는 칼로 닭 잡는 격이 되겠지만, 정규식을 좀 더 쉽게 이해할 수 있을 겁니다.&lt;/p&gt;

&lt;p&gt;자바스크립트의 정규식은 &lt;code class=&quot;highlighter-rouge&quot;&gt;RegExp&lt;/code&gt; 클래스입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;RegExp&lt;/code&gt; 생성자로도 정규식을 만들 수 있지만 간편한 리터럴 문법도 있습니다.&lt;br /&gt;
&lt;strong&gt;정규식 리터럴은 &lt;span style=&quot;color:red&quot;&gt;슬래시&lt;/span&gt;로 감싼 형태입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;re1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/going/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// 단어 &quot;going&quot;을 찾을 수 있는 정규식&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;re2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;going&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 생성자를 사용했지만 결과는 같습니다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RegExp&lt;/code&gt; 생성자를 써야할 때가 있는데, 그 경우는 이 장 후반에서 알아볼 겁니다.&lt;/strong&gt;&lt;br /&gt;
그런 특수한 경우를 제외하면 더 간편한 리터럴 문법을 써야 합니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 13:59:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript242.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript242.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17.1 부분 문자열 검색과 대체</title>
        <description>&lt;h2 id=&quot;171-부분-문자열-검색과-대체&quot;&gt;17.1 부분 문자열 검색과 대체&lt;/h2&gt;

&lt;p&gt;정규식으로 하는 일은 결국 문자열 속에서 부분 문자열을 찾는 일이며 찾은 부분을 교체할 때도 있습니다.&lt;br /&gt;
정규식이 제공하는 기능은 대단히 유연하고 강력하지만 그 만큼 방대합니다.&lt;br /&gt;
따라서 본격적으로 시작하기 전에, 정규식을 쓰지 않고 검색하고 교체하는 방법을 간단히 살펴봅시다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;String.prototype&lt;/code&gt; 메서드의 검색과 교체 기능에는 한계가 있지만, 그 한계 안에서는 충분히 쓸만합니다.&lt;/p&gt;

&lt;p&gt;큰 문자열 안에 원하는 부분 문자열이 존재하는지 찾기만 하면 될 때는 다음 &lt;code class=&quot;highlighter-rouge&quot;&gt;String.prototype&lt;/code&gt; 메서드로 충분합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;As I was going to Saint Ives&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;As&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Ives&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;going&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// true -- 인덱스 9에서 시작합니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;going&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// true -- 인덱스 14를 문자열의 끝으로 간주합니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;going&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;going&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// false -- 인덱스 10에서 시작하면 going이 없습니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;going&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;going&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// -1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;nope&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// -1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image153.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;이들 메서드는 모두 대소문자를 구분합니다.&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;input.startsWith(&quot;as&quot;)&lt;/code&gt;는 &lt;strong&gt;false&lt;/strong&gt;입니다.&lt;br /&gt;
대소문자를 구분하지 않고 비교하려면 소문자로 바꿔서 비교하면 됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;String.prototype.toLowerCase&lt;/code&gt;는 원래 문자열은 그대로 두고 새 문자열을 반환합니다.&lt;br /&gt;
자바스크립트의 문자열은 항상 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;불변&lt;/span&gt;&lt;/strong&gt;입니다.&lt;/p&gt;

&lt;p&gt;한 단계 더 나가서 부분 문자열을 찾아 교체하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;String.prototype.replace&lt;/code&gt;를 사용합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;As I was going to Satint Ives&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;going&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;walking&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/learningjs/image154.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;다시 말하지만, 원래 문자열 input은 바뀌지 않습니다.&lt;/strong&gt;&lt;br /&gt;
going을 walking으로 교체한 새 문자열은 output에 할당됩니다.&lt;br /&gt;
물론 input을 바꾸고 싶다면 새 문자열을 input에 할당하면 됩니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 13:24:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript241.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript241.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
      <item>
        <title>17. 정규표현식</title>
        <description>&lt;h2 id=&quot;17-정규표현식&quot;&gt;17. 정규표현식&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;정규표현식(regular expression)&lt;/strong&gt;은 정교한 문자열 매칭 기능을 제공합니다.&lt;br /&gt;
이메일 주소나 URL, 전화번호처럼 보이는 문자열을 찾고 싶다면 정규표현식에 익숙해져야 합니다.&lt;br /&gt;
문자열 매칭을 하다보면 자연스레 문자열 교체도 자주 하게 되는데, 정규표현식에는 문자열 교체에 필요한 
기능도 들어 있습니다.&lt;br /&gt;
&lt;strong&gt;예를 들어 이메일 주소처럼 보이는 문자열을 찾아 그 주소를 가리키는 하이퍼링크로 바꿀 수 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;정규표현식을 소개한 책이나 문서를 보면 “aaaba와 abaaba에 일치하지만 abba에는 일치하지 않는 문자열”
같은 이상 야릇한 예제가 많이 보입니다.&lt;br /&gt;
물론 이런 예제는 정규표현식의 복잡함을 이해하기 쉬운 덩어리로 나눈다는 장점이 있긴 하지만, 
그만큼 현실성이 없다는 단점도 있습니다.&lt;br /&gt;
대관절 aaaba에 일치하는 문자열을 찾아서 어디 쓴단 말입니까?&lt;br /&gt;
필자는 정규표현식의 기능을 설명하면서 바로 쓸 수 있는 현실적인 예제를 사용하려고 합니다.&lt;/p&gt;

&lt;p&gt;정규표현식은 정규식이라고 부르기도 합니다.&lt;br /&gt;
앞으로는 정규식이라고 간단하게 쓰겠습니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 24 May 2020 13:18:00 +0900</pubDate>
        <link>http://localhost:4000/lj/2020/05/24/javascript240.html</link>
        <guid isPermaLink="true">http://localhost:4000/lj/2020/05/24/javascript240.html</guid>
        
        
        <category>lj</category>
        
      </item>
    
  </channel>
</rss>
