<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 10 Nov 2020 14:41:54 +0900</pubDate>
    <lastBuildDate>Tue, 10 Nov 2020 14:41:54 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>mustache 템플릿 문법</title>
        <description>&lt;h2 id=&quot;mustache-템플릿-문법&quot;&gt;mustache 템플릿 문법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mustache.github.io/mustache.5.html&quot; target=&quot;_blank&quot;&gt;참고 : 공식문서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unlimitedcoding.tistory.com/5&quot; target=&quot;_blank&quot;&gt;참고 : 블로그&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mustache 템플릿 문법을 기반으로 사용되는 모듈들이 있습니다.&lt;br /&gt;
최근에 확인한 바로는 &lt;strong&gt;grunt, gulp, handlebars&lt;/strong&gt; 등에서 해당 문법들을 쓰는 경우가 있습니다.&lt;br /&gt;
&lt;strong&gt;grunt-include-replace-mustache&lt;/strong&gt;에서 html을 include할 때 사용하는 경우도 있고, gulp에도 sprite handlebar로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Mustache&lt;/code&gt; 템플릿 문법을 사용하는 경우도 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;br /&gt;
이런 mustache 문법을 정리할 때, 지킬과 같은 블로그에선 문법으로 인식하고 컴파일하려는 경향이 있다.&lt;br /&gt;
우리는 단순히 string 값으로 입력한건데 멋대로 출력을 바꿔버린다.&lt;br /&gt;
이럴 경우 mustache 문법으로 적혀있는 부분을 앞뒤로&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;/static/img/mustache/image00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;이렇게 감싸면된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문법&quot;&gt;문법&lt;/h2&gt;

&lt;h3 id=&quot;1-일반적으로-객체-속성에-접근할-때&quot;&gt;1. 일반적으로 객체 속성에 접근할 때&lt;/h3&gt;

&lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 데이터
{
  &quot;name&quot; : &quot;Chris&quot;,
  &quot;company&quot; : &quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Github&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;&quot;
}

// 템플릿과 결과

&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt; // Chris
&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt; // 아무것도 표시 되지 않음 
&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt; // &lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;b&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt;Github&lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;/b&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;{{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}}&lt;/span&gt; // &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Github&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;age 처럼 데이터에 선언되지 않은 변수를 호출하면 아무것도 출력되지 않습니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; {{ 괄호 2개 }} &lt;/code&gt; 를 사용하면 HTML 이스케이프가 되어서 문자열을 출력합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; {{{ 괄호 3개 }}} &lt;/code&gt; 를 사용하면 이스케이프가 되지 않은 문자열을 그대로 출력합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;2-복잡한-객체-속성에-접근할-때&quot;&gt;2. 복잡한 객체 속성에 접근할 때&lt;/h3&gt;

&lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 데이터
{
  &quot;name&quot; : &quot;Chris&quot;,
  &quot;company&quot; : {
    &quot;name&quot; : &quot;Github&quot;,
    &quot;address&quot; : {
      &quot;country&quot; : &quot;USA&quot;
    }
  }
}

// 템플릿과 결과

Country : &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;country&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt; // Country : USA

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-조건문&quot;&gt;3. 조건문&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;변수가 값일 경우&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 데이터
 {
   &quot;person&quot; : false
 }
    
 // 템플릿
 출력이 됩니다.
    
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   출력이 안됩니다.
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 출력이 됩니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변수가 객체일 경우&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 데이터
 {
   &quot;person&quot; : {&quot;name&quot; : &quot;Jo&quot;}
 }
    
 // 템플릿
    
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 Jo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;섹션 내에서 다른 루트 변수에 접근할 때&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 문제) person과 같은 수준에 있는 다른 변수가 있고 Google을 출력하려면?
    
 // 데이터
 {
   &quot;person&quot; : {&quot;name&quot; : &quot;Jo&quot;},
   &quot;company&quot; : {&quot;name&quot; : &quot;Google&quot;}
 }
    
 // 템플릿
    
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;의 회사는 &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;입니다.
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
 // 템플릿(Mustache의 확장 구현체인 Handlebars에서 쓸 경우)
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;의 회사는 &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;입니다.
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 Jo의 회사는 Google입니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주석을 사용할 때&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    
 // &lt;span class=&quot;c&quot;&gt;{{! 주석내용 }}&lt;/span&gt;
    
 // 템플릿
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;문자문자문자문자&lt;span class=&quot;c&quot;&gt;{{! 여기는 안 나와요 }}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    
    
 // 결과
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;문자문자문자문자&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반복문 - 변수의 값이 배열이면 반복문이 됩니다. 빈 배열의 거짓 조건문으로 취급됩니다.&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 데이터
 {
   &quot;repo&quot; : [
     { &quot;name&quot; : &quot;resque&quot; },
     { &quot;name&quot; : &quot;hub&quot; },
     { &quot;name&quot; : &quot;rip&quot; }
   ]
 }
    
    
 // 템플릿
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;resque&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;hub&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;rip&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반전 섹션 - 반대되는 조건에서만 출력됩니다.&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 데이터
 {
   &quot;repo&quot;: []
 }
    
    
 // 템플릿
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;{{^&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   저장소가 없습니다
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 저장소가 없습니다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 10 Nov 2020 14:20:00 +0900</pubDate>
        <link>http://localhost:4000/mustache/2020/11/10/mustache.html</link>
        <guid isPermaLink="true">http://localhost:4000/mustache/2020/11/10/mustache.html</guid>
        
        
        <category>mustache</category>
        
      </item>
    
      <item>
        <title>4. 자바스크립트 키워드</title>
        <description>&lt;h2 id=&quot;4-자바스크립트-키워드&quot;&gt;4. 자바스크립트 키워드&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image18.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트 키워드, 핵심은 &lt;strong&gt;융합&lt;/strong&gt;, &lt;strong&gt;통합&lt;/strong&gt;, &lt;strong&gt;컨트롤&lt;/strong&gt;입니다.&lt;br /&gt;
위의 왼쪽 이미지는 2015년에 모질라에서 작성한 이미지입니다.&lt;/p&gt;

&lt;p&gt;자바스크립트가 있고, HTML5, CSS가 있습니다.&lt;br /&gt;
다소 다른 것들에 비해 크게 그려진 감도 없지않아 있습니다만, 자바스크립트로 위의 수많은 기술들을 &lt;strong&gt;융합&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;왼쪽 아래에 보시면 &lt;code class=&quot;highlighter-rouge&quot;&gt;svg&lt;/code&gt;가 있습니다.&lt;br /&gt;
그래프 그리는데 많이 활용되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;svg&lt;/code&gt;입니다.&lt;/p&gt;

&lt;p&gt;조금 오른쪽을 보시면 &lt;code class=&quot;highlighter-rouge&quot;&gt;indexed DB&lt;/code&gt;가 있습니다.&lt;br /&gt;
&lt;strong&gt;브라우저에 탑재되어있는 데이터 베이스입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;File&lt;/strong&gt;을 처리하는 부분도 있고, 머신러닝, 딥러닝의 &lt;code class=&quot;highlighter-rouge&quot;&gt;GPU&lt;/code&gt;를 지원하는 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;WebGL&lt;/span&gt;&lt;/strong&gt;도 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;asm.js&lt;/code&gt;는 &lt;strong&gt;Web Assembly&lt;/strong&gt;입니다.&lt;br /&gt;
&lt;strong&gt;브라우저에서 실행 파일을 연결시키겠다라는 목적을 가지고 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WebRTC&lt;/strong&gt;입니다.&lt;br /&gt;
이를 주축으로한 스타트업도 꽤 많습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML Components&lt;/strong&gt; 그리고 &lt;strong&gt;DOM&lt;/strong&gt; .. 필수라고 할 수 있죠?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이와 같이 HTML, CSS, DOM, HTML5 API 등등등의 기술들을 융합하는 것이 자바스크립트입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;또한 디바이스를 연결하고 통합합니다.&lt;br /&gt;
이전에 서버(Node.js)와 라즈베리파이를 연결한 것을 설명드렸었습니다.&lt;br /&gt;
이처럼 자바스크립트는 디바이스를 연결하고 통합합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이러한 &lt;strong&gt;융합&lt;/strong&gt;과 &lt;strong&gt;통합&lt;/strong&gt;을 자바스크립트로 컨트롤합니다.&lt;br /&gt;
위의 수많은 기술들을 자바스크립트로 연결하고 융합합니다.&lt;/p&gt;

&lt;p&gt;위의 이미지엔 &lt;strong&gt;Node.js&lt;/strong&gt;가 그려지지 않았습니다만, 브라우저에서, 클라이언트에서 서버(노드js)까지 하나의 언어로 처리하는 것이 바로 자바스크립트입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;단일언어(자바스크립트)로 처리&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;브라우저(클라이언트)에서 서버까지, 한 사람이 다 처리하는 것을 풀 스텍 개발자라고 합니다.&lt;br /&gt;
여러분도 풀스택 개발자에 도전해보시는 것은 어떠십니까?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image19.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트의 궁극적인 목적은 &lt;strong&gt;사용자와 만나는 접점&lt;/strong&gt;입니다.&lt;br /&gt;
사용자와 만나는 접점에서 위의 수많은 기술들을 융합하고 통합하고 컨트롤하여 사용자에게 컨텐츠를 제공하는 것이 자바스크립트의 궁극적인 목적입니다.&lt;br /&gt;
따라서 우선 먼저 사용자를 생각해야 됩니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;1순위는 무조건 사용자입니다.&lt;/li&gt;
  &lt;li&gt;요소, 기술은 2순위입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;서버 개발자는 서버가 1순위이겠지만 자바스크립트 개발자는 사용자와 만나는 접점에 있기 때문에, 사용자에게 컨텐츠를 제공하기 때문에 우선 사용자를 먼저 생각해야됩니다.&lt;br /&gt;
이러한 마인드를 갖고 자바스크립트를 배우신다면, 훗날 틀림없이 다른사람들과 차이가 크게 날것입니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Nov 2020 00:03:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/10/beginner.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/10/beginner.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>3. 디바이스 연결, 딥러닝, 머신러닝</title>
        <description>&lt;h2 id=&quot;3-디바이스-연결-딥러닝-머신러닝&quot;&gt;3. 디바이스 연결, 딥러닝, 머신러닝&lt;/h2&gt;

&lt;p&gt;이번에는 디바이스 연결과 딥러닝, 머신러닝입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image13.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;디바이스 연결입니다.&lt;br /&gt;
위 이미지는 디바이스 연결 이미지입니다.&lt;br /&gt;
왼쪽에 있는 것이 &lt;strong&gt;Raspberry Pi&lt;/strong&gt; 환경이고요, 오른쪽이 &lt;strong&gt;서버&lt;/strong&gt;환경 입니다.&lt;/p&gt;

&lt;p&gt;통신을 활용했습니다.&lt;br /&gt;
&lt;strong&gt;Raspberry Pi&lt;/strong&gt;와 &lt;strong&gt;서버&lt;/strong&gt;가 주기적으로 데이터를 송수신하므로 &lt;strong&gt;WebSocket&lt;/strong&gt;이 더 효율적입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Raspberry Pi&lt;/strong&gt;와 &lt;strong&gt;서버&lt;/strong&gt;는 Node.js 환경입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Raspberry Pi&lt;/strong&gt;와 &lt;strong&gt;Node.js&lt;/strong&gt;에서 센서 데이터 발생을 인식합니다.&lt;br /&gt;
이렇게 인식한 데이터를&lt;/li&gt;
  &lt;li&gt;서버로 전송합니다.&lt;/li&gt;
  &lt;li&gt;그럼 서버는 수신한 데이터를 MongoDB에 저장합니다.&lt;/li&gt;
  &lt;li&gt;그리고 MongoDB 데이터로 통계를 작성합니다.&lt;/li&gt;
  &lt;li&gt;해당 통계 값으로 브라우저에 그래프를 표현합니다.&lt;/li&gt;
  &lt;li&gt;그리고 통계 값을 &lt;strong&gt;Raspberry Pi&lt;/strong&gt;의 &lt;strong&gt;Node.js&lt;/strong&gt;로 전송합니다.&lt;br /&gt;
해당 값이 평균값이라고 한다면 평균값보다 작은 값이면 LED를 off시키고 평균값보다 크면 LED를 on 시킵니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이러한 기능을 모두 자바스크립트로 컨트롤 할 수 있습니다.&lt;br /&gt;
&lt;strong&gt;Raspberry Pi&lt;/strong&gt;와 &lt;strong&gt;Node.js&lt;/strong&gt;에서 발생한 데이터를 인식하고 LED를 on/off 시키는 것도 자바스크립트로 구현하고, 
MongoDB에 기록하게 하는 것도 자바스크립트로 하고, 
그래프 그리는 것도 자바스크립트로 합니다.&lt;/p&gt;

&lt;p&gt;이 모든 것을 자바스크립트로 컨트롤할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;머신러닝&quot;&gt;머신러닝&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image14.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 이미지와 같이 손으로 쓴 글씨를 추론해서 숫자를 인식하는 것을 &lt;strong&gt;손글씨 추론&lt;/strong&gt;이라고 합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;MNIST&lt;/code&gt;라고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image15.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;왼쪽위에 보시면 데이터를 로드하고 있고, 해당 예제는 &lt;code class=&quot;highlighter-rouge&quot;&gt;TensorFlow.js&lt;/code&gt;를 사용했습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;TensorFlow.js&lt;/code&gt;는&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image16.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/js1/image17.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;구글이 개발한 머신러닝, 딥러닝을 위한 자바스크립트 라이브러리입니다.&lt;/strong&gt;&lt;br /&gt;
처리시간도 그렇게 오래걸리지 않습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위와 같은 손글씨 이미지를 65,000개를 사용했고,&lt;/li&gt;
  &lt;li&gt;이 중에서 52,000개를 학습 데이터로 사용했고&lt;/li&gt;
  &lt;li&gt;13,000개를 테스트 데이터로 사용했습니다.&lt;/li&gt;
  &lt;li&gt;배치 사이즈 520개 - 배치 사이즈는 한번 반복할 때마다 처리하는 이미지 수입니다.&lt;br /&gt;
즉 배치 사이즈(520)를 100번 반복하면 52,000개를 사용하게 됩니다.&lt;br /&gt;
그런데 현재 우리는 500번(왼쪽 위)을 사용했으니 26만개를 사용한 것입니다.&lt;br /&gt;
&lt;strong&gt;지금 26만개 이미지를 읽은겁니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;엄청 빠르죠?&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
또한 이 이미지 하나의 크기가 28 X 28 입니다.&lt;br /&gt;
즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;784&lt;/code&gt; 픽셀이거든요?&lt;br /&gt;
이 픽셀을 전부 읽어야됩니다.&lt;br /&gt;
그래야 흑백을 구분할 수 있으니까요.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;GPU&lt;/code&gt;를 사용했습니다만, 자바스크립트가 이젠 속도가 느리다고 하기에는 아니다라고 말할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;테스트 50개 - 이렇게 학습을 시키고난 후에 13,000개 중에서 50개를 렌덤으로 추출합니다.&lt;br /&gt;
그것이 바로 위에 나타난 이미지들입니다.&lt;br /&gt;
위에 나타난 이미지들이 50개입니다.&lt;br /&gt;
그래서 학습이 잘 되었는지 안되었는지 테스트하게 됩니다.&lt;br /&gt;
&lt;strong&gt;현재 위에 보시면 5인데 8로 인식을 한 결과가 있습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;4인데 8로 인식한 것도 보입니다.&lt;/strong&gt;&lt;br /&gt;
하지만 2가지 경우를 제외하면 글씨가 좀 엉망이어도 제대로 인식하는 것을 볼 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위에 책은 &lt;code class=&quot;highlighter-rouge&quot;&gt;TensorFlow.js&lt;/code&gt;로 머신러닝을 구현하기 위한 책입니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 23:39:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/09/beginner3.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/09/beginner3.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>2. 애플리케이션으로 (그래프, 서킷 디자인)</title>
        <description>&lt;h2 id=&quot;2-애플리케이션으로-그래프-서킷-디자인&quot;&gt;2. 애플리케이션으로 (그래프, 서킷 디자인)&lt;/h2&gt;

&lt;p&gt;이번엔 애플리케이션입니다.&lt;/p&gt;

&lt;h2 id=&quot;그래프-차트&quot;&gt;그래프 (차트)&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image04.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/js1/image05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;바차트입니다.&lt;br /&gt;
위와 같이 자바스크립트로 그래프를 그릴 수 있습니다.&lt;br /&gt;
위 바차트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;svg&lt;/code&gt;를 사용했습니다만은, &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt;로도 그릴 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다음은 도너츠 차트입니다.&lt;br /&gt;
일부 몇개를 추려서 개재했습니다만, 전체 소스 코드가 50000줄이 넘습니다.&lt;br /&gt;
2009년도에 개발한 도너츠 차트입니다.&lt;/p&gt;

&lt;h2 id=&quot;서킷-디자인&quot;&gt;서킷 디자인&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 이미지를 드래그해서 왔다갔다해도 잘 따라다닙니다.&lt;br /&gt;
이제는 자바스크립트를 처리하는 속도가 그렇게 큰 문제는 아닙니다.&lt;br /&gt;
자바스크립트 관점에서 잠깐 살펴보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image08.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래 부분에 표시된게 서킷인데, 100개가 넘습니다.&lt;br /&gt;
빠르죠?&lt;br /&gt;
금방 표시되었습니다.&lt;br /&gt;
서버에서 가져와서 표시한 것입니다.&lt;/p&gt;

&lt;p&gt;이런 관점에서 본다면 이제 속도는 그렇게 크리티컬한 문제가 되진 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image09.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 화면은 이미지가 아닙니다.&lt;br /&gt;
저런 구멍들 하나하나 다 처리함에도 불구하고 속도가 느리지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image10.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트로 위와 같이 원하는 부품들로 조립시현을 해보는 기능을 구현할 수 있습니다.&lt;/p&gt;

&lt;p&gt;그런데 현재 위 프로그램은 개발을 잠시 멈춘 상태입니다.&lt;br /&gt;
그 이유는 위의 화면을 이미지로 제공하려고 하는데, 이미지로 제공하는 거에서 멈추면 뭐합니까.&lt;br /&gt;
그 이미지를 다시 읽었을 때, 위 화면처럼 다시 편집이 되도록 해야되지 않겠어요?&lt;/p&gt;

&lt;p&gt;그런데 이를 프로그램으로 개발하는 것은 불가능하고, &lt;strong&gt;머신러닝, 딥러닝&lt;/strong&gt;으론 가능할 것 같습니다.&lt;br /&gt;
하지만 제가 아직 구현을 완료한 것은 아니기 때문에, 됩니다 라고 확실하게 얘기할 순 없지만, 그렇다고 불가능하진 않을 것 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image11.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 문제는 이러한 ‘선’ 부분들입니다.&lt;br /&gt;
다른 부분들은 형태가 있으니 가능성이 높습니다.&lt;br /&gt;
선을 추론해서 인식한다는 것 자체가 쉽지만은 않을 것 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image12.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 위에 처럼 텍스트 기능도 제공합니다.&lt;br /&gt;
텍스트트 크기가 다 다릅니다.&lt;br /&gt;
그리고 해당 텍스트에 한글, 영어, 중국어 등등이 들어가겠죠?&lt;br /&gt;
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;font-weight&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;font-style&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;font-family&lt;/code&gt; 등등이 있을 겁니다.&lt;/p&gt;

&lt;p&gt;이러한 점들 때문에 어려움이 많이 예상됩니다.&lt;br /&gt;
하지만 그렇다고 안된다라고 할 수는 없고 또한 가능성이 있습니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 23:14:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/09/beginner2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/09/beginner2.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>1. 자바스크립트로 할 수 있는 것</title>
        <description>&lt;h2 id=&quot;1-자바스크립트로-할-수-있는-것&quot;&gt;1. 자바스크립트로 할 수 있는 것&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;버튼 클릭을 인식시키기 위해 &lt;strong&gt;DOM&lt;/strong&gt; 과 &lt;strong&gt;JavaScript&lt;/strong&gt; 를 사용합니다.&lt;br /&gt;
서버로 입력값을 전송하기에 앞서 입력 여부를 체크해야되는데, 이때도 &lt;strong&gt;DOM&lt;/strong&gt;과 &lt;strong&gt;JavaScript&lt;/strong&gt;를 사용합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;브라우저에는 이메일 데이터가 없으므로 이메일 등록 여부는 체크할 수 없습니다.&lt;br /&gt;
그래서 입력한 값을 추출해서 서버로 전송해야하는데, 이때도 &lt;strong&gt;DOM&lt;/strong&gt;과 &lt;strong&gt;JavaScript&lt;/strong&gt;를 사용합니다.&lt;/p&gt;

&lt;p&gt;서버에서 브라우저로 전송한 값으로 이메일을 체크하게 됩니다.&lt;br /&gt;
그리고 그 결과를 다시 브라우저로 전송합니다.&lt;/p&gt;

&lt;p&gt;브라우저에서는 서버에서 보낸 결과값을 수신해야되는데 이때도 &lt;strong&gt;JavaScript&lt;/strong&gt;를 사용합니다.&lt;br /&gt;
서버의 결과값에 따라 유저 인터페이스를 제공해야되는데, 이땐 &lt;strong&gt;HTML, CSS, DOM, JavaScript&lt;/strong&gt;를 사용합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2005년도 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ajax&lt;/code&gt;가 나오기 전까지는 앞에서 설명했던 방법으로 처리하지 않았습니다.&lt;br /&gt;
사용자가 가입하기 버튼을 클릭하면, &lt;strong&gt;폼 전체를 서버로 전송했습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;그럼 폼에서 입력값을 추출하고 입력여부도 체크하고 이메일 등록여부도 체크하고 심지어 그 결과까지도 서버에서 처리했습니다.&lt;br /&gt;
그리고 그 결과를 브라우저에 전송하면 &lt;strong&gt;브라우저는 단지 표시만 할 뿐이었습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;서버가 혼자 북치고 장구치고 다 할동안 브라우저는 표시만 했던 것입니다.&lt;/p&gt;

&lt;p&gt;그런데 문제가 되죠?&lt;br /&gt;
서버는 혼자서 바쁜데 브라우저는 널널한겁니다.&lt;/p&gt;

&lt;p&gt;한편, &lt;code class=&quot;highlighter-rouge&quot;&gt;Ajax&lt;/code&gt;에서 비동기 통신 방법을 제공하게 되는데, 이 방법으로 &lt;strong&gt;분산 처리를 구현할 수 있게 되었습니다.&lt;/strong&gt;&lt;br /&gt;
즉, 아까 위에서 설명한 처리 방법으로 처리를 하게 된 것입니다.&lt;br /&gt;
그렇게 됨으로써 브라우저의 기술을 활용할 수 있게 되었고 서버는 서버나름대로의 기능만 처리하면 되게 되었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이때부터 브라우저의 중심에 자바스크립트가 서게되고, 자바스크립트 사용이 확산됩니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러나 자바스크립트로 할 수 있는 것이 브라우저에 컨텐츠 표현만 있는 것은 아닙니다.&lt;br /&gt;
자바스크립트로 할 수 있는 것들은 굉장히 많습니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 22:58:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/09/beginner.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/09/beginner.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>nvm 강점, gulp 옛날버전레포2</title>
        <description>&lt;h2 id=&quot;nvm-강점-gulp-옛날버전레포2&quot;&gt;nvm 강점, gulp 옛날버전레포2&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;gulp 버전 확인 -&amp;gt; 3.9.1 버전이면 -&amp;gt; node version 8.9.0 사용&lt;/li&gt;
  &lt;li&gt;scss handlebar 확인 -&amp;gt; 1배수 2배수 이미지를 같이 넣어야 오류가 안나는 그런 경우있음 옛날 레포중에&lt;/li&gt;
  &lt;li&gt;image watch가 없어서 image 추가 삭제 변경할 경우 gulp 껐다켜야됨&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 18:50:00 +0900</pubDate>
        <link>http://localhost:4000/node_gulp/2020/11/09/gulp2.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_gulp/2020/11/09/gulp2.html</guid>
        
        
        <category>node_gulp</category>
        
      </item>
    
      <item>
        <title>nvm 강점, gulp 옛날버전</title>
        <description>&lt;h2 id=&quot;nvm-강점-gulp-옛날버전&quot;&gt;nvm 강점, gulp 옛날버전&lt;/h2&gt;

&lt;p&gt;nvm을 쓰면 좋은 이유&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;레포별로 gulp나 grunt 버전이 어떻게 되어있을지 모른다.&lt;br /&gt;
&lt;img src=&quot;/static/img/node/image02.jpg&quot; alt=&quot;&quot; /&gt;
Ex) gulp 3.9.1 버전으로 되어있는 특정 레포&lt;br /&gt;
이럴 경우엔 node 버전을 8.9.0으로 내리고 &lt;br /&gt;
npm i -g gulp@3.9.1&lt;br /&gt;
을 실행해 3.9.1 버전을 node 8.9.0버전에서 전역적으로 설치
    &lt;ul&gt;
      &lt;li&gt;그러면 gulp cli 버전이 3.9.1이 된다.&lt;br /&gt;
다시 노드 버전을 다른 버전으로 바꿔주면 다른 gulp 버전도 사용할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;nvm으로 각 node 버전별로 gulp, gulp-cli 버전을 달리해서 사용할 수 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 18:49:00 +0900</pubDate>
        <link>http://localhost:4000/node_gulp/2020/11/09/gulp.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_gulp/2020/11/09/gulp.html</guid>
        
        
        <category>node_gulp</category>
        
      </item>
    
      <item>
        <title>scrollbar 플러그인</title>
        <description>&lt;h2 id=&quot;scrollbar-플러그인&quot;&gt;scrollbar 플러그인&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gromo.github.io/jquery.scrollbar/demo/advanced.html&quot; target=&quot;_blank&quot;&gt;괜찮은 scrollbar 플러그인&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 18:15:00 +0900</pubDate>
        <link>http://localhost:4000/css/2020/11/09/css.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2020/11/09/css.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>2. 도움될만한 sass 사이트</title>
        <description>&lt;h2 id=&quot;도움될만한-sass-사이트&quot;&gt;도움될만한 sass 사이트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sassmeister.com/&quot; target=&quot;_blank&quot;&gt;sass compiler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sass-guidelin.es/ko/&quot; target=&quot;_blank&quot;&gt;sass korean&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sass-lang.com/&quot; target=&quot;_blank&quot;&gt;sass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 08 Nov 2020 14:37:00 +0900</pubDate>
        <link>http://localhost:4000/sass/2020/11/08/sass.html</link>
        <guid isPermaLink="true">http://localhost:4000/sass/2020/11/08/sass.html</guid>
        
        
        <category>sass</category>
        
      </item>
    
      <item>
        <title>terser-webpack-plugin 에러 해결 방법</title>
        <description>&lt;h2 id=&quot;terser-webpack-plugin-에러-해결-방법&quot;&gt;terser-webpack-plugin 에러 해결 방법&lt;/h2&gt;

&lt;p&gt;이 강의는 웹팩 4 버전을 사용하는데요 최근 5 버전으로 매이저 업데이트를 했습니다.&lt;br /&gt;
웹팩과 관련되 플러그인들도 호완성을 위해 업데이트 버전을 내 놓는데요, 그중에 수업에서 사용하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;terser-webpack-plugin&lt;/code&gt;도 4에서 5로 업데이트 되었습니다.&lt;br /&gt;
이로 인해 오류 메세지를 마주하신 분들이 계실텐데요, 아래 “쭁”님이 공유해 주신 방법을 참고해 주시기 바랍니다.&lt;/p&gt;

&lt;h3 id=&quot;오류메세지&quot;&gt;오류메세지&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“TypeError: Cannot read property ‘javascript’ of undefined”&lt;/li&gt;
  &lt;li&gt;Hi you are using Webpack 4 and Terser ^5.0.0. This version of Terser is for Webpack 5, you need to set version “terser-webpack-plugin”: “^4.2.3”, in package.json file&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;해결-방법&quot;&gt;해결 방법&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;terser-webpack-plugin&lt;/code&gt;버전을 &lt;strong&gt;5점대에서 ^4.2.3 로 바꿈&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Nov 2020 13:19:00 +0900</pubDate>
        <link>http://localhost:4000/node_webpack2/2020/11/08/webpack9.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_webpack2/2020/11/08/webpack9.html</guid>
        
        
        <category>node_webpack2</category>
        
      </item>
    
  </channel>
</rss>
