<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 13 Nov 2020 01:27:59 +0900</pubDate>
    <lastBuildDate>Fri, 13 Nov 2020 01:27:59 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>직접 작성한 gulp 및 grunt, gulp, webpack 관련</title>
        <description>&lt;h2 id=&quot;직접-작성한-gulp-및-grunt-gulp-webpack-관련&quot;&gt;직접 작성한 gulp 및 grunt, gulp, webpack 관련&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hyungju-lee/private-hj/tree/master/private/20201106_lifeshoppine&quot; target=&quot;_blank&quot;&gt;링크&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;N 업무에서 새로운 페이지를 만들어야되는 작업이 있었습니다.&lt;br /&gt;
그래서 gulp로 N 업무를 진행해봤습니다.&lt;/p&gt;

&lt;h2 id=&quot;n-업무용-걸프&quot;&gt;N 업무용 걸프&lt;/h2&gt;

&lt;p&gt;N 업무용 걸프를 위해 지켜야할 사항을 다음과 같이 정했습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;CSS 컴파일 결과는 한줄 \n 한줄 \n &amp;lt;- 이런 형식으로 나와야됩니다.&lt;/li&gt;
  &lt;li&gt;CSS 컴파일될 때 sourcemaps 기능이 적용되어선 안됩니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;그리고 추가 규칙도 정했습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;JS도 컴파일될 때 sourcemaps 기능이 적용되어선 안됩니다.&lt;/li&gt;
  &lt;li&gt;JS는 min 파일로 압축 및 난독화해서 내보냅니다.&lt;/li&gt;
  &lt;li&gt;최신 문법으로 작성해도 최소 IE9~10 버전까지 적용될 수 있도록 컴파일되게 합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;위와 같은 규칙을 정해놓고 Gulp를 구성했습니다.&lt;br /&gt;
이전에도 공유드린 적이 있지만, Gulp를 실행할 때 &lt;strong&gt;환경변수&lt;/strong&gt;를 전달해 현재 ‘개발중’인지 아니면 고객에게 전달해줄 빌드중(Production)인지를 구분하였습니다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gulp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NODE_ENV=production gulp build&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;에 위와 같이 &lt;strong&gt;Custom&lt;/strong&gt; 명령어를 작성합니다.&lt;br /&gt;
환경변수 인식 오류를 대비해&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm i &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; win-node-env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;win-node-env&lt;/code&gt; 모듈도 설치해줍니다.&lt;br /&gt;
위와 같이 작성한 후에 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm start&lt;/code&gt; 명령어를 입력하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp&lt;/code&gt; 명령어가 실행되고, 
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; 명령어를 입력하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;NODE_ENV=production gulp build&lt;/code&gt; 명령어가 실행됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;start는 npm start이고 build는 npm run build인 이유는&lt;br /&gt;
start는 npm에 기본 내재되어있는 명령어이고 build는 사용자가 추가한 명령어이기 때문입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;npm-start---scss&quot;&gt;npm start - SCSS&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm start&lt;/code&gt;로 해당 걸프를 실행하면 위와 같이 (개발용)이란 메시지가 붙습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 위와같이 &lt;strong&gt;sourcemaps&lt;/strong&gt; 기능이 활성화되도록 했습니다.&lt;br /&gt;
그 이유는 개발중일 때는 &lt;strong&gt;sourcemaps&lt;/strong&gt; 기능이 켜져있어야 어디 sass 파일에 작성된 내용인지를 쉽게 알 수 있기 때문입니다.&lt;/p&gt;

&lt;h2 id=&quot;npm-run-build---scss&quot;&gt;npm run build - SCSS&lt;/h2&gt;

&lt;p&gt;반대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; 명령어를 통해 &lt;strong&gt;build&lt;/strong&gt;를 하면 다음과 같이 결과물이 출력됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아까완 다르게 (개발용) 텍스트가 붙어있지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 &lt;strong&gt;sourcemaps&lt;/strong&gt; 기능도 없어진 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;npm-start---javascript&quot;&gt;npm start - JavaScript&lt;/h2&gt;

&lt;p&gt;JavaScript도 마찬가지입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm start&lt;/code&gt;로 실행하면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image04.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;어느 파일에서 작성된 코드인지를 보여줍니다.&lt;/p&gt;

&lt;h2 id=&quot;npm-run-build---javascript&quot;&gt;npm run build - JavaScript&lt;/h2&gt;

&lt;p&gt;하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; 명령어를 통해 빌드하면,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 &lt;strong&gt;sourcemaps&lt;/strong&gt; 기능이 없어져 컴파일된 결과물을 가리키고 어디서 작성되어있는지 알 수 없게됩니다.&lt;br /&gt;
또한 1줄로 min 파일화되었고 난독화되었음도 확인할 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;원리&quot;&gt;원리&lt;/h2&gt;

&lt;p&gt;아까 위에서 말씀드렸듯이 &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;에 커스텀한 명령어를 통해 각 명령어마다 다른 환경변수를 전달한다고 했습니다.&lt;br /&gt;
해당 환경변수는 다음과 같이 gulp 코드에 전달됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 코드를 보시면 상수 &lt;code class=&quot;highlighter-rouge&quot;&gt;sourcemaps&lt;/code&gt;에 &lt;strong&gt;process.env.NODE_ENV === “production” ? false : true;&lt;/strong&gt; 이런 코드로 값을 부여하는 것을 알 수 있습니다.&lt;br /&gt;
위 코드로 현재 개발용 실행인지 아니면 빌드하는 것인지를 구분하는 것입니다.&lt;br /&gt;
그렇게 구분되어진 값이 &lt;code class=&quot;highlighter-rouge&quot;&gt;sourcemaps&lt;/code&gt; 상수에 담기게되고,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 값을 위와 같이 전달함으로써 상황에 맞게 on/off 할 수 있는 것입니다.
JavaScript 컴파일도 마찬가지 원리입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image08.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;환경변수를 받아와 &lt;strong&gt;gulp-if&lt;/strong&gt; 모듈로 true인지 false인지를 구분해 &lt;code class=&quot;highlighter-rouge&quot;&gt;terser()&lt;/code&gt; 메서드를 실행할지 말지를 결정했습니다.&lt;/p&gt;

&lt;h2 id=&quot;css-한줄-컴파일&quot;&gt;CSS 한줄 컴파일&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sass&lt;/code&gt; 컴파일할 때 &lt;strong&gt;outputStyle&lt;/strong&gt; 옵션으로는 4가지가 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;nested : 기본값입니다. 옵션을 적용하지 않았을 때 해당 스타일로 컴파일 됩니다.&lt;/p&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;/* 컴파일 결과물 */&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;expanded&lt;/p&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;/* 컴파일 결과물 */&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;compact&lt;/p&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;/* 컴파일 결과물 */&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;compressed&lt;/p&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;N 업무용 스타일은 3번 &lt;strong&gt;compact&lt;/strong&gt;입니다.&lt;br /&gt;
하지만 gulp-sass 컴파일할때 &lt;strong&gt;compact&lt;/strong&gt; 옵션을 줘서 컴파일하면&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 컴파일 결과물 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 한줄씩 더 개행되어 컴파일됩니다.&lt;br /&gt;
위와 같이 컴파일되면 곤란합니다.&lt;br /&gt;
그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp-clean-css&lt;/code&gt; 라이브러리의 도움을 받았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image09.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;compact 형식으로 컴파일되게하고 gulp-clean-css 라이브러리의 도움을 받아 한번더 개행처리된 부분을 제거했습니다.&lt;/p&gt;

&lt;h2 id=&quot;javascript-polyfill&quot;&gt;JavaScript Polyfill&lt;/h2&gt;

&lt;p&gt;자바스크립트 폴리필도 적용했습니다.&lt;br /&gt;
폴리필이란 쉽게 말해 &lt;strong&gt;코드조각&lt;/strong&gt;입니다.&lt;br /&gt;
스니펫과 비슷한 개념이라고 생각하시면 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 스니팻과는 차이점이 있습니다.&lt;br /&gt;
스니팻은 개발자가 개발을 편하게 하기위해 자주 쓰는 코드조각 모음입니다.&lt;br /&gt;
젠코딩에 주로 많이 사용됩니다.&lt;/p&gt;

&lt;p&gt;폴리필은 크로스브라우징을 위한 코드조각이라고 보시면 됩니다.&lt;br /&gt;
예를 들면 &lt;strong&gt;Promise&lt;/strong&gt;와 같은 ES6 이후에 생긴 새로운 객체는 IE에서는 전혀 지원이 안됩니다.&lt;br /&gt;
&lt;strong&gt;이를 IE에서도 작동하게끔 만들어주는 코드 조각들이 바로 폴리필입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;프로젝트를 진행하시다보면, 혹은 작업하시다보면 특정 플러그인을 사용했을시 IE10에서 확인해보면&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;indexOf가 정의되어있지 않습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 에러메시지를 접할때가 있습니다.&lt;br /&gt;
이런 경우에 &lt;strong&gt;특정 코드를 추가하면&lt;/strong&gt; 해결되는 경험을 해보셨을 수도 있습니다.&lt;br /&gt;
그 특정 코드를 바로 &lt;strong&gt;폴리필&lt;/strong&gt;이라고 부릅니다.&lt;/p&gt;

&lt;p&gt;하지만 이렇게 에러가 생길때마다 직접 폴리필을 찾아 추가하는 것은 개발자에게 아주 귀찮은 일입니다.&lt;br /&gt;
이러한 일을 자동으로 해주는 라이브러리가 있습니다.&lt;/p&gt;

&lt;p&gt;Gulp에선 바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;browserify&lt;/code&gt; 라이브러리가 이 역할을 해줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image10.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 자바스크립트 파일을 컴파일 합니다.&lt;br /&gt;
위와 같이 하면 자바스크립트를 작성할 때 최신 문법과 최신 개념을 사용해서 작업해도 알아서 브라우저 저버전에서도 작동하도록 컴파일해줍니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;grunt-gulp-webpack-parcel--자동화툴-역사&quot;&gt;Grunt, Gulp, Webpack, parcel .. 자동화툴 역사&lt;/h2&gt;

&lt;p&gt;FE 개발자들은 Grunt, Gulp, Webpack, parcel 등 많은 종류의 자동화 툴을 사용합니다.&lt;/p&gt;

&lt;p&gt;이 중에서 Grunt와 Gulp는 웹 테스크 매니저 또는 웹 테스크 러너라 불리고 Webpack, parcel 등은 모듈 번들러라고 불립니다.&lt;br /&gt;
등장 순서로보면 Grunt가 2011년, Gulp가 2013년에 나왔고 Webpack과 parcel는 그 이후에 나왔습니다.&lt;/p&gt;

&lt;p&gt;이러한 자동화 도구는 같은 철학을 가지고 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;개발자 편의성&lt;/li&gt;
  &lt;li&gt;사용자 접근성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이러한 자동화 툴은 공통적으로 귀찮고 반복적이고 번거로운 일이면서도 개발자의 실수를 유발하기 쉬운 작업들을 자동화했습니다.&lt;br /&gt;
개발자가 그러한 일들을 직접 처리하는 것이 아닌 컴퓨터가 자동으로 처리해 개발자의 실수를 최소화하고 작업시간을 단축시켰습니다.&lt;/p&gt;

&lt;p&gt;그리고 결과물을 최적화해 사용자의 접근성을 높였습니다.&lt;br /&gt;
최적화엔 압축, min 파일화, 번들링 등 많은 방법이 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;개발자들이-grunt에서-gulp로-옮겨간-이유&quot;&gt;개발자들이 Grunt에서 Gulp로 옮겨간 이유&lt;/h2&gt;

&lt;p&gt;저희 회사만 보더라도 대부분 작업에서 Gulp를 더 많이 사용합니다.&lt;br /&gt;
라인만해도 옛날 레포에서만 Grunt를 가끔 볼 수 있고 대부분 Gulp를 사용합니다.&lt;br /&gt;
왜 Grunt에서 Gulp로 옮겨갔는지 이유를 알아보기 전에 Grunt와 Gulp의 차이점을 짚고 넘어가는 게 좋을 것 같습니다.&lt;/p&gt;

&lt;p&gt;겉으로만 보면 Grunt와 Gulp는 같은 작업을 수행합니다.&lt;/p&gt;

&lt;h3 id=&quot;grunt-gulp-수행방법&quot;&gt;Grunt, Gulp 수행방법&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;하지만 수행하는 방법에서 차이가 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Grunt는 아래와 같이 설정하는 형태로 작성합니다.&lt;br /&gt;
특정 기능을 구현하기 위해 미리 정해져있는 규칙에 의해 설정파일을 작성하면 되는 방식입니다.&lt;br /&gt;
프레임워크와 라이브러리 개념으로 보자면 프레임워크에 더 가깝다고 볼수도 있을 것 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Grunt는 JSON 형태의 config를 구성하는 방식으로 구현됩니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;imagemin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;jpgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
		&lt;span class=&quot;nl&quot;&gt;progressive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;src/img&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;*.jpg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;images/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;반대로 Gulp는 아래와 같이 JavaScript 코드를 다룰 줄 안다면 JavaScript로 쉽게 작성할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Gulp는 Javascript를 사용합니다.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jpgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imagemin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;progressive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;optimized_images&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;속도&quot;&gt;속도&lt;/h3&gt;

&lt;p&gt;Grunt와 Gulp는 속도면에서도 차이가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gulp는 스트림을 기반으로하는 빌드 시스템입니다.&lt;/strong&gt;&lt;br /&gt;
스트림을 이용해서 데이터를 읽고 출력하며 작업들을 ‘메모리’에서 처리합니다.&lt;br /&gt;
즉, 요청 후 한번에 결과를 받는 것이 아니라 이벤트 중간중간 전달받아 작업을 하기 때문에 비교적 작업속도가 빠릅니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;스트림이란?&lt;/strong&gt;&lt;br /&gt;
데이터 입,출력시 비동기적으로 처리될 수 있는 데이터의 연속적 흐름으로써, NodeJS에서는 이 스트림을 읽고 쓸 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;…이건 다른 카테고리에서 정리했으므로 여기까지.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Nov 2020 23:40:00 +0900</pubDate>
        <link>http://localhost:4000/node_gulp/2020/11/12/gulp.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_gulp/2020/11/12/gulp.html</guid>
        
        
        <category>node_gulp</category>
        
      </item>
    
      <item>
        <title>자바스크립트 초보로서 배운 10가지</title>
        <description>&lt;h2 id=&quot;자바스크립트-초보로서-배운-10가지&quot;&gt;자바스크립트 초보로서 배운 10가지&lt;/h2&gt;

&lt;h3 id=&quot;1&quot;&gt;1&lt;/h3&gt;
&lt;p&gt;자바스크립트에는 숫자에 대한 다른 데이터 유형이 없습니다.&lt;br /&gt;
기본적으로 모든 숫자는 이중으로 간주됩니다.&lt;br /&gt;
정수가 없습니다.&lt;br /&gt;
예를 들어, 변수 두 개를 선언했다고 가정합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;a = 7&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;b = 2&lt;/code&gt;는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;입니다.&lt;br /&gt;
c와 같은 다른 프로그래밍 언어에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;c++&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;a / b = 3&lt;/code&gt;을 제공하지만 JavaScript에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;3.5&lt;/code&gt;를 얻습니다.&lt;br /&gt;
기본적으로 JavaScript는 모든 숫자에 대해 &lt;strong&gt;부동 소수점 나누기&lt;/strong&gt;를 수행합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;3.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2&quot;&gt;2&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=== vs ==&lt;/code&gt; 비교 연산자.&lt;br /&gt;
다른 프로그래밍 언어에 익숙하고 JavaScript를 처음 사용하는 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;에 눈살을 찌푸 릴 수 있습니다.  &lt;br /&gt;
double equal 연산자는 다소 잊고 있습니다.  &lt;br /&gt;
데이터 유형이 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 양쪽에서 동일하지 않으면 변수를 강제 변환하려고합니다.&lt;/p&gt;

&lt;p&gt;두 개의 변수 &lt;code class=&quot;highlighter-rouge&quot;&gt;num1 = 5&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;num2 = &quot;5&quot;&lt;/code&gt;가 있으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 같음을 사용하면 결과가 참이됩니다.&lt;br /&gt;
숫자 5와 문자열 5가 같지 않다는 것을 알고 있지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;는 비교를 위해 데이터유형을 강제 변환합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;반면에 &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;는 양쪽 변수 / 값의 데이터 유형이 동일하지 않으면 작동하지 않습니다.&lt;/p&gt;

&lt;p&gt;두 개의 변수 &lt;code class=&quot;highlighter-rouge&quot;&gt;num1 = 5&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;num2 = &quot;5&quot;&lt;/code&gt;가있는 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt; 같음을 사용하면 결과가 false가됩니다.&lt;br /&gt;
우리는 숫자 5와 문자열 5가 같지 않다는 것을 알고 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt; 는 값과 데이터 유형을 모두 확인합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;!==&lt;/code&gt; 연산자에도 비슷한 것이 적용됩니다.&lt;/p&gt;

&lt;h3 id=&quot;3&quot;&gt;3&lt;/h3&gt;

&lt;p&gt;JavaScript의 대문자 소문자 문자열 구분.&lt;br /&gt;
두 개의 문자열 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bangladesh&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;bangladesh&lt;/code&gt;가 있다고 가정하면 자바스크립트는 이를 어떻게 비교할까요.&lt;br /&gt;
이 비교를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 연산자가 있습니다.&lt;br /&gt;
지금은 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 연산자에 초점을 맞출 것입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;는 대소 문자를 구분하는 방식으로 두 문자열을 비교합니다.&lt;br /&gt;
대소 문자를 구분하는 방식은 조건 결과가 참이 되려면 두 문자열의 동일한 위치에있는 각 문자가 동일한 대소 문자 여야 함을 의미합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bangladesh&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bangladesh&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// results false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;country1&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;country2&lt;/code&gt; 변수를 동일하게 고려하려면 둘 다 동일한 대소 문자 (소문자 또는 대문자)로 만들어야합니다.&lt;br /&gt;
JavaScript에는 문자열 대소 문자 변환을위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;toLowerCase()&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;toUpperCase()&lt;/code&gt; 두 가지 메서드가 있습니다.&lt;br /&gt;
다음 예에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;country1.toLowerCase()&lt;/code&gt;를 사용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;country1&lt;/code&gt; 변수를 소문자로 변환했습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bangladesh&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bangladesh&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4&quot;&gt;4&lt;/h3&gt;

&lt;p&gt;JavaScript에서 배열을 만드는 양방향.&lt;br /&gt;
다른 프로그래밍 언어에서 볼 수있는 전통적인 &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt; 사용 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt; 클래스 사용.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;를 사용하여,로 구분 된 값으로 배열을 선언합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Array()&lt;/code&gt;를 사용할 때 빈 배열을 선언하고 인덱스와 값을 사용하여 배열의 값을 할당합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// first way&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [1, 3, 4, 5] // output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// using Array Class()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;apple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;] // output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5&quot;&gt;5&lt;/h3&gt;

&lt;p&gt;배열을 스택 및 대기열로 사용.&lt;br /&gt;
JavaScript 배열을 Stack 및 Queue로 사용할 수 있습니다.&lt;br /&gt;
이제 스택을 살펴 보겠습니다.&lt;/p&gt;

&lt;p&gt;스택은 선입 선출 데이터 구조입니다.&lt;br /&gt;
먼저 스택을 선언 한 다음 배열 푸시 및 팝 메서드를 사용하여 스택 항목을 삽입하고 팝할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [] // output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// insert a&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;// insert b&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// insert c&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// print the stack&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// (3) [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// poping gives the top element c&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// popping gives next the top element b&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6&quot;&gt;6&lt;/h3&gt;

&lt;p&gt;변수 선언 var, let 및 coast를위한 JavaScript의 3 개의 키워드.&lt;br /&gt;
const를 사용하면 값이 변경되지 않는 JavaScript에서 변수를 선언 할 수 있습니다.&lt;br /&gt;
상수 변수를 선언하는 일반적인 규칙은 이름 지정에 모두 대문자를 사용하는 것입니다.&lt;br /&gt;
const PI = 3.14159처럼.&lt;/p&gt;

&lt;p&gt;var는 다시 초기화 할 수있는 변수를 선언하는 데 사용되며 현재 컨텍스트 범위와 그 클로저를 포함합니다.&lt;br /&gt;
let은 선언 된 코드 블록 내에서 범위가있는 변수를 선언하는 데 사용됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14159&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 5 // output&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Hello //output&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello World!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Hello World! // output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;7&quot;&gt;7&lt;/h3&gt;

&lt;p&gt;forEach () 배열 반복.&lt;/p&gt;

&lt;p&gt;과일 배열을 선언했다고 가정 해 보겠습니다.&lt;br /&gt;
배열 항목을 반복하기 위해 배열 이름을 입력 한 다음 .과 forEach를 입력합니다.&lt;br /&gt;
이렇게하면 forEach 내부에 fruits.forEach () 함수를 제공해야합니다.&lt;br /&gt;
이 함수는 &lt;strong&gt;3 개의 매개 변수&lt;/strong&gt;를 사용합니다.&lt;br /&gt;
항목을 얻기 위해 첫 번째 매개 변수를 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;여기에서 과일이라는 이름을 지정했습니다.&lt;br /&gt;
루프 내에서이 이름을 사용하여 배열 항목을 인쇄했습니다.&lt;/p&gt;

&lt;p&gt;항목의 색인을 얻기 위해 두 번째 매개 변수를 사용할 수 있습니다.&lt;br /&gt;
여기서는 아래 13 행의 두 번째 함수 매개 변수에 대한 색인 이름을 사용하고 루프 내부에 색인과 항목을 인쇄했습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;// declare an array&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;apple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;pineapple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// loop over with items&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// apple&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// orange&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// banana&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// pineapple&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// loop over with item and index&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// index: 0 apple&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// index: 1 orange&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// index: 2 banana&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// index: 3 pineapple&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;8&quot;&gt;8&lt;/h1&gt;

&lt;p&gt;문자열에서 공백 제거.&lt;/p&gt;

&lt;p&gt;웹 개발에서 사람들이 입력에 텍스트를 입력 할 때 문자열의 시작 또는 끝에 불필요한 공백이 자주 발생합니다.&lt;/p&gt;

&lt;p&gt;이러한 것들을 없애기 위해 JavaScript 문자열에는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;문자열 양쪽에서 공백을 제거하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;trim()&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;처음에 제거하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;trimStart()&lt;/code&gt; 및&lt;/li&gt;
  &lt;li&gt;끝에서 제거하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;trimEnd()&lt;/code&gt;와 같은 메서드가 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  JavaScript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  JavaScript   &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   JavaScript   &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;languageBoth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;languageBoth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// JavaScript&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;languageStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trimStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;languageStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// JavaScript   &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;languageEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trimEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;languageEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   JavaScript&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;9&quot;&gt;9&lt;/h3&gt;

&lt;p&gt;삼항 연산자.&lt;br /&gt;
&lt;strong&gt;JavaScript의 &lt;code class=&quot;highlighter-rouge&quot;&gt;if-else&lt;/code&gt; 조건에 익숙하다면 삼항 연산자를 사용하는 동일한 논리를 사용하여 더 읽기 쉽고 간결한 코드를 작성할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Yes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;No&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Yes&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Yes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;No&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;10&quot;&gt;10&lt;/h3&gt;

&lt;p&gt;수학 함수 및 상수를 위한 수학 함수.&lt;/p&gt;

&lt;p&gt;프로그래밍에서 우리는 종종 수학 함수와 상수를 사용해야 할 때를 접합니다.&lt;br /&gt;
JavaScript에는 수학 마법사가 되는 데 사용할 수있는 편리한 클래스 수학이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Math.PI&lt;/code&gt;는 상수 값 파이를 제공하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.LN2&lt;/code&gt;는 2의 자연 로그를 제공합니다.&lt;br /&gt;
sqrt를 계산하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.sqrt(value)&lt;/code&gt;를 사용할 수 있으며, 값의 거듭 제곱을 계산하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.pow(value, exponent)&lt;/code&gt;를 사용할 수 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Math.abs()&lt;/code&gt;를 사용하여 절대 값을 계산할 수 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Math.ceil(value)&lt;/code&gt;를 값의 상한으로 사용할 수 있습니다.&lt;br /&gt;
마지막으로 바닥 계산 &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.floor(value)&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// constants&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3.141592653589793&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LN2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 0.6931471805599453&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 10&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 12 Nov 2020 17:54:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/11/12/javascript.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/11/12/javascript.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>white-space pre 관련 속성을 사용하지 않는 이유</title>
        <description>&lt;h2 id=&quot;white-space-pre-관련-속성을-사용하지-않는-이유&quot;&gt;white-space pre 관련 속성을 사용하지 않는 이유&lt;/h2&gt;

&lt;p&gt;보통 html 안으로 데이터를 넣어서 컴파일하는 과정에서 html을 현재 그대로 (띄워쓰기, 탭들여쓰기 등등) 유지한채로 반영하는것이 아니라 
min파일로 압축해서 내보내다보니 white-space:pre-wrap 같은 속성은 무용지물이다.&lt;/p&gt;

&lt;p&gt;html파일을 min파일화 시켜 내보내는 것이아니면 사용해도 될것같지만 그런 경우가 많이 있을까?&lt;br /&gt;
추후 유지보수를 위해서라도 &lt;code class=&quot;highlighter-rouge&quot;&gt;white-space: pre&lt;/code&gt; 관련 속성은 사용 안하는 것이 좋을 것 같다.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Nov 2020 17:49:00 +0900</pubDate>
        <link>http://localhost:4000/css/2020/11/12/css.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2020/11/12/css.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Webpack에 대해서 알아봅시다</title>
        <description>&lt;h2 id=&quot;webpack에-대해서-알아봅시다&quot;&gt;Webpack에 대해서 알아봅시다&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/webpack2/image00.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Webpack&lt;/strong&gt;을 알아보기 전에 &lt;strong&gt;Grunt&lt;/strong&gt;와 &lt;strong&gt;Gulp&lt;/strong&gt;를 알아보면서 공부를 하면 좋습니다.&lt;br /&gt;
&lt;strong&gt;Webpack&lt;/strong&gt;이 나오게 된 이유를 &lt;strong&gt;Grunt&lt;/strong&gt;와 &lt;strong&gt;Gulp&lt;/strong&gt;에 대한 이해에서 찾아볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grunt&lt;/strong&gt;와 &lt;strong&gt;Gulp&lt;/strong&gt;는 사람의 실수나 반복적인 작업을 줄이기 위한 자동화 툴입니다.&lt;/p&gt;

&lt;p&gt;보통 &lt;strong&gt;CSS&lt;/strong&gt;와 &lt;strong&gt;JavaScript&lt;/strong&gt; 파일을 &lt;code class=&quot;highlighter-rouge&quot;&gt;concat&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;minify&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;compress&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;uglify&lt;/code&gt;를 하는데 많이 사용합니다.&lt;br /&gt;
즉 사전에 필요한 반복적인 작업들을 간단한 작업만으로도 진행할 수 있습니다.&lt;/p&gt;

&lt;p&gt;또한, 이들은 &lt;strong&gt;Node.js&lt;/strong&gt;에서 사용할 수 있으며 여러 &lt;strong&gt;Plugin&lt;/strong&gt;을 활용할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;grunt-vs-gulp&quot;&gt;Grunt VS Gulp&lt;/h2&gt;

&lt;p&gt;위처럼 둘은 같은 작업을 수행하지만, &lt;strong&gt;수행하는 방법에서 차이가 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Grunt는 JSON 형태의 config를 구성하는 방식으로 구현됩낟.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;imagemin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;jpgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
		&lt;span class=&quot;nl&quot;&gt;progressive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;src/img&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;*.jpg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;images/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설정 파일 기반의 Grunt와 달리 Gulp는 JavaScript 코드를 다를 줄 아는 사람이면 쉽게 다룰 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Gulp는 Javascript를 사용합니다.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jpgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imagemin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;progressive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;optimized_images&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;속도&quot;&gt;속도&lt;/h2&gt;

&lt;p&gt;Gulp와 Grunt의 속도 차이를 이해하기 위해서는 처리방식의 차이점을 알아야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gulp는 스트림을 기반으로 하는 빌드 시스템입니다.&lt;/strong&gt;&lt;br /&gt;
스트림을 이용해서 데이터를 읽고 출력하며 작업들을 메모리에서 처리합니다.&lt;br /&gt;
즉, 요청 후 한번에 결과를 받는 것이 아니라 이벤트 중간중간 전달받아 작업을 하기 때문에 비교적 작업속도가 빠릅니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;스트림이란?&lt;br /&gt;
데이터 입, 출력시 비동기적으로 처리될 수 있는 데이터의 연속적 흐름으로써, NodeJS 에서는 이 스트림을 읽고 쓸 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;또는 Gulp는 동시에 여러 작업을 처리할 수 있지만 Grunt는 일반적으로 한번에 하나의 작업만 처리합니다.&lt;/p&gt;

&lt;p&gt;Grunt는 2011년 후반부터 개발이 시작됐는데 현재 5000여개의 플러그인이 존재할 정도로 JavaScript 관련 테스크는 대부분 Grunt 플러그인으로 만들어졌&lt;strong&gt;었&lt;/strong&gt;습니다.&lt;br /&gt;
JSON을 통해서 선언적인 설정을 통해 테스크를 정의하고 이를 간단한 명령어를 통해 실행합니다.&lt;br /&gt;
본격적으로 인기를 얻기 시작한 것은 &lt;strong&gt;0.4 버전이 릴리즈된 2013.2 이후입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gulp는 2013년 여름부터 개발이 시작되고 Grunt를 대체해갔습니다.&lt;br /&gt;
하는일은 거의 같지만 &lt;strong&gt;NodeJS를 통해 테스크를 선언하는 메리트로 Grunt에서 Gulp로 갈아타는 개발자들이 많았습니다.&lt;/strong&gt;&lt;br /&gt;
현재 2000여개의 플러그인이 존재합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;하지만 많은 개발자들이 Gulp로 갈아타게된 결정적인 이유는 Grunt는 첫번째 릴리즈가 너무 느리기 때문이었습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;0.4.5 버전이(2014.05) 릴리즈가 된 이후 약 2년 이후에야 1.0.0 버전(2016.02)이 릴리즈 되었습니다.&lt;br /&gt;
그리고 1.3.0 버전이 가장 최근 릴리즈인데 2018.08에 됨으로써 Grunt의 관리가 소홀해졌고 &lt;strong&gt;새로 Grunt의 개발을 도와줄 사람을 공식적으로 찾기 시작했습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;이는 Grunt의 개발팀이 없어졌거나 유지보수할 능력이 없다는 것을 공식적으로 인정하는 것이나 다름이 없었습니다.&lt;/strong&gt;&lt;br /&gt;
지금 당장 문제는 없을 수도 있지만 버그는 발생할 것이고 언제 없어질지 모르는 이 도구를 계속해서 사용해야될지 개발자들은 의문이 들었습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;개발자들이 Gulp로 갈아타게된 두번째 이유&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gulp는 Grunt에 비해 코드가 직관적입니다.&lt;br /&gt;
설정을 하지않고 직접 코드로 작성해 Gulp를 작성합니다.&lt;br /&gt;
그리고 작성한 테스크들은 기본적으로 &lt;strong&gt;스트림을 이용해서&lt;/strong&gt; 플러그인을 만들도록 하므로 플러그인을 서로 연결시킬 수도 있습니다.&lt;br /&gt;
&lt;strong&gt;Grunt였다면 concat 플러그인, uglify 플러그인을 설치해서 각각 처리한 뒤에 alias로 연결해야 했을 것입니다.&lt;/strong&gt;&lt;br /&gt;
**반면 Gulp는 &lt;code class=&quot;highlighter-rouge&quot;&gt;src().pipe(concat()).pipe(uglify()).des()&lt;/code&gt; 식으로 이어붙일 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;개발자들이 Gulp로 갈아타게된 세번째 이유&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gulp는 Node스럽습니다.&lt;br /&gt;
NodeJS에서 항상 얘기하는 것이 “Write programs that do one thing and do it well. (한 가지 일을 잘하는 프로그램 작성)”이라는 Unix 철학인데, 
Grunt는 all-in-one 느낌이라면 Gulp는 Node처럼 작은 모듈들이 많이 있고 이를 조합해서 테스크를 만듭니다.&lt;/p&gt;

&lt;h2 id=&quot;webpack&quot;&gt;Webpack&lt;/h2&gt;

&lt;p&gt;Gulp와 Grunt와 같은 자동화 도구 덕분에 많은 작업의 양이 줄었는데도 불구하고 &lt;strong&gt;Webpack&lt;/strong&gt;이 나왔습니다.&lt;br /&gt;
우선 &lt;strong&gt;Webpack은 모듈 번들러이고 Gulp와 Grunt는 task runners입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;결론부터 말하자면 Webpack이 이들을 대체된다기 보다 이 기능이 포함되어 있고 더 많은 작업을 할 수 있기 때문에 이 도구를 사용하는 것입니다.&lt;br /&gt;
Webpack은 Browserify와 같은 의존성 관리 기능까지 포함하고 있으니 &lt;code class=&quot;highlighter-rouge&quot;&gt;webpack = (Grunt||Gulp) + Browserify&lt;/code&gt; 이게 되는 것입니다.&lt;br /&gt;
게다가 속도도 빠른 편입니다.&lt;/p&gt;

&lt;h2 id=&quot;우선-browserify&quot;&gt;우선 Browserify?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Browserify&lt;/strong&gt;는 Node.js기반 javascript code를 브라우저 환경에서도 실행 가능하도록 해줍니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./helpers/foo&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;즉, 브라우저와 Node.js의 코드를 동일하게 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 브라우저에서 작업 결과를 봐야하기 때문에 매번 코드를 컴파일 해야하는데, 코드의 양이 많아지면 하나 수정하는데도 엄청 오래걸릴 수 있다는 얘기가 됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Webpack에 들어가기전 Babel과 Polyfil 개념도 간단하게 정리해보면&lt;br /&gt;
Babel은 JavaScript 컴파일러로써 ES6 이후의 코드를 구형 브라우저 환경에 맞게 변환해주는 데 주로 사용을 합니다.&lt;/p&gt;

  &lt;p&gt;polyfill은 개발자가 특정 기능이 지원되지 않는 브라우저를 위해 사용할 수 있는 코드 조각이나 플러그인을 말합니다.&lt;br /&gt;
폴리필은 HTML5 및 CSS3와 오래된 브라우저 사이의 간격을 메꾸는 역할을 담당합니다.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Polyfill을 써야하는 상황과 babel을 사용해야 하는 에러 상황 비교&lt;/strong&gt;&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;ReferenceError() undefined : JavaScript가 알아듣긴 하나 없다 ⇒ polyfill&lt;/li&gt;
    &lt;li&gt;syntax error: JavaScript가 구문자체를 못 알아들음 ⇒ babel&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;Babel 공식 document에 이런 문장이 있는데&lt;/p&gt;

  &lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@babel/polyfill
Babel includes a polyfill that includes a custom regenerator runtime 
and core-js.
This will emulate a full ES2015+ environment (no &amp;lt; Stage 4 proposals) 
and is intended to be used in an application rather than a library/tool.
(this polyfill is automatically loaded when using babel-node).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;Babel은 regenerator runtime과 core-js를 포함하는 polyfill을 포함한다.&lt;br /&gt;
라는 말이 있어 Babel이 polyfill보다 큰 개념으로 파악하고 넘어가겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JavaScript 코드가 많아지면 하나의 파일로 관리하는데 한계가 있습니다.&lt;br /&gt;
그렇다고 해서 여러개 파일을 브라우저에서 로딩하는 것은 네트웍 비용이 크고 서로의 스코프를 침범해 변수 충돌 위험성도 존재합니다.&lt;br /&gt;
함수 스코프를 사용하는 JavaScript는 &lt;code class=&quot;highlighter-rouge&quot;&gt;IIFE&lt;/code&gt;를 사용해 모듈을 만들 수 있는데 CommonJS나 AMD 스타일의 모듈 시스템을 사용해 파일별로 모듈을 관리할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;그러나 여전히 브라우저에서는 파일 단위 모듈 시스템을 사용하는 것은 쉽지 않습니다.&lt;br /&gt;
모듈을 &lt;code class=&quot;highlighter-rouge&quot;&gt;IIFE&lt;/code&gt; 스타일로 변경해 주는 과정 뿐만 아니라 하나의 파일을 묶어 네트웍 비용을 최소화 할 수 있는 방법이 웹 프론트 과정에서 필요합니다.&lt;/p&gt;

&lt;p&gt;웹팩은 이러한 과정에서 이해할 수 있습니다.&lt;br /&gt;
기본적으로 &lt;strong&gt;모듈 번들러&lt;/strong&gt;로 소개하고 있는 웹팩의 주요 네가지 개념을 정리해 보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;엔트리entry&quot;&gt;엔트리(entry)&lt;/h2&gt;

&lt;p&gt;웹팩에서 모든 것은 모듈입니다.&lt;br /&gt;
JavaScript, 스타일 시트, 이미지 등 모든 것을 JavaScript 모듈로 로딩해서 사용하도록 합니다.&lt;/p&gt;

&lt;p&gt;JavaSciprt가 로딩하는 모듈이 많아질수록 모듈간의 의존성은 증가합니다.&lt;br /&gt;
의존성 그래프의 시작점을 웹팩에서는 엔트리(entry)라고 합니다.&lt;/p&gt;

&lt;p&gt;웹팩은 엔트리를 통해서 필요한 모듈을 로딩하고 하나의 파일로 묶습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// webpack.config.js : &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./src/main.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;우리가 사용할 html에서 사용할 JavaScript 시작점은 src/main.js 코드입니다.&lt;br /&gt;
entry 키에 시작점 경로를 지정했습니다.&lt;/p&gt;

&lt;h2 id=&quot;아웃풋output&quot;&gt;아웃풋(output)&lt;/h2&gt;

&lt;p&gt;엔트리에 설정한 JavaScript파일을 시작으로 의존되어 있는 모든 모듈을 하나로 묶을 것입니다.&lt;br /&gt;
번들된 결과물을 처리할 위치는 output에 기록합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// webpack.config.js: &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bundle.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./dist&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;dist 폴더의 bundle.js 파일로 결과를 저장할 것입니다.&lt;/p&gt;

&lt;p&gt;html파일에서는 번들링 된 이 파일을 로딩하게끔 합니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- index.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./dist/bundle.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;엔트리에 설정한 JavaScript는 Utils.js 모듈을 사용합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/main.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./Utils&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello webpack&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Utils.js 코드는 다음과 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/Utils.js:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;[LOG] &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;웹팩은 터미널에서 webpack 커맨드로 빌드할 수 있습니다.&lt;br /&gt;
여기까지가 간단히 웹팩으로 번들링하는 과정입니다.&lt;/p&gt;

&lt;h2 id=&quot;로더loader&quot;&gt;로더(loader)&lt;/h2&gt;

&lt;p&gt;웹팩은 모든 파일을 모듈로 관리한다고 했습니다.&lt;br /&gt;
JavaScript 파일 뿐만 아니라 이미지, 폰트, 스타일 시트도 전부 모듈로 관리합니다.&lt;br /&gt;
그러나 웹팩은 JavaScript밖에 밖에 모릅니다.&lt;br /&gt;
비 JavaScript 파일을 웹팩이 이해하게끔 변경해야 하는데 로더가 그런 역할을 합니다.&lt;/p&gt;

&lt;p&gt;로더는 test와 use키로 구성된 객체로 설정할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;test에 로딩할 파일을 지정하고&lt;/li&gt;
  &lt;li&gt;use에 적용할 로더를 설정한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;babel-loader&quot;&gt;babel-loader&lt;/h3&gt;

&lt;p&gt;가장 간간한 예가 Babel이다.&lt;br /&gt;
ES6에서 ES5로 변환할 때 Babel을 사용할 수 있는데 test에 ES6로 작성한 JavaScript파일을 지정하고, use에 이를 변화할 Babel 로더를 설정합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// webpack.config.js : &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;js$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;node_modules&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	   &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;babel-loader&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	   &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	      &lt;span class=&quot;na&quot;&gt;presets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;test에 JavaScript 확장자를 갖는 파일을 정규표현식으로 지정했습니다.&lt;br /&gt;
node_modules 폴더는 패키지 폴더이므로 제외하기 위해서 exclude에 설정한다.&lt;br /&gt;
use에 로더를 설정하는데 babel-loader를 추가했습니다.&lt;/p&gt;

&lt;p&gt;위 과정을 거치면 bundle.js가 ES5문법으로 변경이 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;플러그인-plug-in&quot;&gt;플러그인 (plug-in)&lt;/h2&gt;

&lt;p&gt;웹팩에서 알아야할 마지막 개념이 플러그인입니다.&lt;br /&gt;
로더가 파일 단위로 처리하는 반면 플러그인은 번들된 결과물을 처리합니다.&lt;br /&gt;
번들된 JavaScript를 난독화 한다거나 특정 텍스트를 추출하는 용도로 사용할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;uglifyjsplugin&quot;&gt;UglifyJsPlugin&lt;/h3&gt;

&lt;p&gt;UglifyJsPlugin은 로더로 처리된 JavaScript 결과물을 난독화 처리하는 플러그인입니다.&lt;/p&gt;

&lt;p&gt;플러그인을 사용할 때는 웹팩 설정 객체의 plugins배열에 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;webpack&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;optimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UglifyJsPlugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아래 번들링 된 결과를 보면 난독화 처리가 되었습니다.&lt;/p&gt;

&lt;h2 id=&quot;정리&quot;&gt;정리&lt;/h2&gt;

&lt;p&gt;웹팩은 기본적으로 모듈 번들러입니다.&lt;br /&gt;
의존성 그래프에서 엔트리로 그래프의 시작점을 설정하면 웹팩은 모든 자원을 모듈로 로딩한 후 아웃풋으로 묶어줍니다.&lt;br /&gt;
로더로 각 모듈별로 바벨, 사스변환 등이 처리하고 이 결과를 플러그인이 받아 난독화, 텍스트 추출 등의 추가 작업을 합니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Nov 2020 12:05:00 +0900</pubDate>
        <link>http://localhost:4000/node_webpack2/2020/11/12/webpack.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_webpack2/2020/11/12/webpack.html</guid>
        
        
        <category>node_webpack2</category>
        
      </item>
    
      <item>
        <title>mustache 템플릿 문법</title>
        <description>&lt;h2 id=&quot;mustache-템플릿-문법&quot;&gt;mustache 템플릿 문법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mustache.github.io/mustache.5.html&quot; target=&quot;_blank&quot;&gt;참고 : 공식문서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://unlimitedcoding.tistory.com/5&quot; target=&quot;_blank&quot;&gt;참고 : 블로그&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mustache 템플릿 문법을 기반으로 사용되는 모듈들이 있습니다.&lt;br /&gt;
최근에 확인한 바로는 &lt;strong&gt;grunt, gulp, handlebars&lt;/strong&gt; 등에서 해당 문법들을 쓰는 경우가 있습니다.&lt;br /&gt;
&lt;strong&gt;grunt-include-replace-mustache&lt;/strong&gt;에서 html을 include할 때 사용하는 경우도 있고, gulp에도 sprite handlebar로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Mustache&lt;/code&gt; 템플릿 문법을 사용하는 경우도 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;br /&gt;
이런 mustache 문법을 정리할 때, 지킬과 같은 블로그에선 문법으로 인식하고 컴파일하려는 경향이 있다.&lt;br /&gt;
우리는 단순히 string 값으로 입력한건데 멋대로 출력을 바꿔버린다.&lt;br /&gt;
이럴 경우 mustache 문법으로 적혀있는 부분을 앞뒤로&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;/static/img/mustache/image00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;이렇게 감싸면된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문법&quot;&gt;문법&lt;/h2&gt;

&lt;h3 id=&quot;1-일반적으로-객체-속성에-접근할-때&quot;&gt;1. 일반적으로 객체 속성에 접근할 때&lt;/h3&gt;

&lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 데이터
{
  &quot;name&quot; : &quot;Chris&quot;,
  &quot;company&quot; : &quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Github&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;&quot;
}

// 템플릿과 결과

&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt; // Chris
&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt; // 아무것도 표시 되지 않음 
&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt; // &lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;b&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt;Github&lt;span class=&quot;ni&quot;&gt;&amp;amp;lt;&lt;/span&gt;/b&lt;span class=&quot;ni&quot;&gt;&amp;amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;{{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}}&lt;/span&gt; // &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;Github&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;age 처럼 데이터에 선언되지 않은 변수를 호출하면 아무것도 출력되지 않습니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; {{ 괄호 2개 }} &lt;/code&gt; 를 사용하면 HTML 이스케이프가 되어서 문자열을 출력합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; {{{ 괄호 3개 }}} &lt;/code&gt; 를 사용하면 이스케이프가 되지 않은 문자열을 그대로 출력합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;2-복잡한-객체-속성에-접근할-때&quot;&gt;2. 복잡한 객체 속성에 접근할 때&lt;/h3&gt;

&lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 데이터
{
  &quot;name&quot; : &quot;Chris&quot;,
  &quot;company&quot; : {
    &quot;name&quot; : &quot;Github&quot;,
    &quot;address&quot; : {
      &quot;country&quot; : &quot;USA&quot;
    }
  }
}

// 템플릿과 결과

Country : &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;country&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt; // Country : USA

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-조건문&quot;&gt;3. 조건문&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;변수가 값일 경우&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 데이터
 {
   &quot;person&quot; : false
 }
    
 // 템플릿
 출력이 됩니다.
    
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   출력이 안됩니다.
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 출력이 됩니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변수가 객체일 경우&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 데이터
 {
   &quot;person&quot; : {&quot;name&quot; : &quot;Jo&quot;}
 }
    
 // 템플릿
    
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 Jo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;섹션 내에서 다른 루트 변수에 접근할 때&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 문제) person과 같은 수준에 있는 다른 변수가 있고 Google을 출력하려면?
    
 // 데이터
 {
   &quot;person&quot; : {&quot;name&quot; : &quot;Jo&quot;},
   &quot;company&quot; : {&quot;name&quot; : &quot;Google&quot;}
 }
    
 // 템플릿
    
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;의 회사는 &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;입니다.
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
 // 템플릿(Mustache의 확장 구현체인 Handlebars에서 쓸 경우)
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;의 회사는 &lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;company&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;입니다.
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;person&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 Jo의 회사는 Google입니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주석을 사용할 때&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    
 // &lt;span class=&quot;c&quot;&gt;{{! 주석내용 }}&lt;/span&gt;
    
 // 템플릿
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;문자문자문자문자&lt;span class=&quot;c&quot;&gt;{{! 여기는 안 나와요 }}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    
    
 // 결과
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;문자문자문자문자&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반복문 - 변수의 값이 배열이면 반복문이 됩니다. 빈 배열의 거짓 조건문으로 취급됩니다.&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 데이터
 {
   &quot;repo&quot; : [
     { &quot;name&quot; : &quot;resque&quot; },
     { &quot;name&quot; : &quot;hub&quot; },
     { &quot;name&quot; : &quot;rip&quot; }
   ]
 }
    
    
 // 템플릿
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;resque&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;hub&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;rip&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반전 섹션 - 반대되는 조건에서만 출력됩니다.&lt;/p&gt;

    &lt;div class=&quot;language-mustache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; // 데이터
 {
   &quot;repo&quot;: []
 }
    
    
 // 템플릿
 &lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;{{^&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
   저장소가 없습니다
 &lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
    
    
 // 결과
 저장소가 없습니다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 10 Nov 2020 14:20:00 +0900</pubDate>
        <link>http://localhost:4000/mustache/2020/11/10/mustache.html</link>
        <guid isPermaLink="true">http://localhost:4000/mustache/2020/11/10/mustache.html</guid>
        
        
        <category>mustache</category>
        
      </item>
    
      <item>
        <title>4. 자바스크립트 키워드</title>
        <description>&lt;h2 id=&quot;4-자바스크립트-키워드&quot;&gt;4. 자바스크립트 키워드&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image18.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트 키워드, 핵심은 &lt;strong&gt;융합&lt;/strong&gt;, &lt;strong&gt;통합&lt;/strong&gt;, &lt;strong&gt;컨트롤&lt;/strong&gt;입니다.&lt;br /&gt;
위의 왼쪽 이미지는 2015년에 모질라에서 작성한 이미지입니다.&lt;/p&gt;

&lt;p&gt;자바스크립트가 있고, HTML5, CSS가 있습니다.&lt;br /&gt;
다소 다른 것들에 비해 크게 그려진 감도 없지않아 있습니다만, 자바스크립트로 위의 수많은 기술들을 &lt;strong&gt;융합&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;p&gt;왼쪽 아래에 보시면 &lt;code class=&quot;highlighter-rouge&quot;&gt;svg&lt;/code&gt;가 있습니다.&lt;br /&gt;
그래프 그리는데 많이 활용되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;svg&lt;/code&gt;입니다.&lt;/p&gt;

&lt;p&gt;조금 오른쪽을 보시면 &lt;code class=&quot;highlighter-rouge&quot;&gt;indexed DB&lt;/code&gt;가 있습니다.&lt;br /&gt;
&lt;strong&gt;브라우저에 탑재되어있는 데이터 베이스입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;File&lt;/strong&gt;을 처리하는 부분도 있고, 머신러닝, 딥러닝의 &lt;code class=&quot;highlighter-rouge&quot;&gt;GPU&lt;/code&gt;를 지원하는 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;WebGL&lt;/span&gt;&lt;/strong&gt;도 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;asm.js&lt;/code&gt;는 &lt;strong&gt;Web Assembly&lt;/strong&gt;입니다.&lt;br /&gt;
&lt;strong&gt;브라우저에서 실행 파일을 연결시키겠다라는 목적을 가지고 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WebRTC&lt;/strong&gt;입니다.&lt;br /&gt;
이를 주축으로한 스타트업도 꽤 많습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML Components&lt;/strong&gt; 그리고 &lt;strong&gt;DOM&lt;/strong&gt; .. 필수라고 할 수 있죠?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이와 같이 HTML, CSS, DOM, HTML5 API 등등등의 기술들을 융합하는 것이 자바스크립트입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;또한 디바이스를 연결하고 통합합니다.&lt;br /&gt;
이전에 서버(Node.js)와 라즈베리파이를 연결한 것을 설명드렸었습니다.&lt;br /&gt;
이처럼 자바스크립트는 디바이스를 연결하고 통합합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이러한 &lt;strong&gt;융합&lt;/strong&gt;과 &lt;strong&gt;통합&lt;/strong&gt;을 자바스크립트로 컨트롤합니다.&lt;br /&gt;
위의 수많은 기술들을 자바스크립트로 연결하고 융합합니다.&lt;/p&gt;

&lt;p&gt;위의 이미지엔 &lt;strong&gt;Node.js&lt;/strong&gt;가 그려지지 않았습니다만, 브라우저에서, 클라이언트에서 서버(노드js)까지 하나의 언어로 처리하는 것이 바로 자바스크립트입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;단일언어(자바스크립트)로 처리&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;브라우저(클라이언트)에서 서버까지, 한 사람이 다 처리하는 것을 풀 스텍 개발자라고 합니다.&lt;br /&gt;
여러분도 풀스택 개발자에 도전해보시는 것은 어떠십니까?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image19.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트의 궁극적인 목적은 &lt;strong&gt;사용자와 만나는 접점&lt;/strong&gt;입니다.&lt;br /&gt;
사용자와 만나는 접점에서 위의 수많은 기술들을 융합하고 통합하고 컨트롤하여 사용자에게 컨텐츠를 제공하는 것이 자바스크립트의 궁극적인 목적입니다.&lt;br /&gt;
따라서 우선 먼저 사용자를 생각해야 됩니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;1순위는 무조건 사용자입니다.&lt;/li&gt;
  &lt;li&gt;요소, 기술은 2순위입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;서버 개발자는 서버가 1순위이겠지만 자바스크립트 개발자는 사용자와 만나는 접점에 있기 때문에, 사용자에게 컨텐츠를 제공하기 때문에 우선 사용자를 먼저 생각해야됩니다.&lt;br /&gt;
이러한 마인드를 갖고 자바스크립트를 배우신다면, 훗날 틀림없이 다른사람들과 차이가 크게 날것입니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Nov 2020 00:03:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/10/beginner.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/10/beginner.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>3. 디바이스 연결, 딥러닝, 머신러닝</title>
        <description>&lt;h2 id=&quot;3-디바이스-연결-딥러닝-머신러닝&quot;&gt;3. 디바이스 연결, 딥러닝, 머신러닝&lt;/h2&gt;

&lt;p&gt;이번에는 디바이스 연결과 딥러닝, 머신러닝입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image13.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;디바이스 연결입니다.&lt;br /&gt;
위 이미지는 디바이스 연결 이미지입니다.&lt;br /&gt;
왼쪽에 있는 것이 &lt;strong&gt;Raspberry Pi&lt;/strong&gt; 환경이고요, 오른쪽이 &lt;strong&gt;서버&lt;/strong&gt;환경 입니다.&lt;/p&gt;

&lt;p&gt;통신을 활용했습니다.&lt;br /&gt;
&lt;strong&gt;Raspberry Pi&lt;/strong&gt;와 &lt;strong&gt;서버&lt;/strong&gt;가 주기적으로 데이터를 송수신하므로 &lt;strong&gt;WebSocket&lt;/strong&gt;이 더 효율적입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Raspberry Pi&lt;/strong&gt;와 &lt;strong&gt;서버&lt;/strong&gt;는 Node.js 환경입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Raspberry Pi&lt;/strong&gt;와 &lt;strong&gt;Node.js&lt;/strong&gt;에서 센서 데이터 발생을 인식합니다.&lt;br /&gt;
이렇게 인식한 데이터를&lt;/li&gt;
  &lt;li&gt;서버로 전송합니다.&lt;/li&gt;
  &lt;li&gt;그럼 서버는 수신한 데이터를 MongoDB에 저장합니다.&lt;/li&gt;
  &lt;li&gt;그리고 MongoDB 데이터로 통계를 작성합니다.&lt;/li&gt;
  &lt;li&gt;해당 통계 값으로 브라우저에 그래프를 표현합니다.&lt;/li&gt;
  &lt;li&gt;그리고 통계 값을 &lt;strong&gt;Raspberry Pi&lt;/strong&gt;의 &lt;strong&gt;Node.js&lt;/strong&gt;로 전송합니다.&lt;br /&gt;
해당 값이 평균값이라고 한다면 평균값보다 작은 값이면 LED를 off시키고 평균값보다 크면 LED를 on 시킵니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이러한 기능을 모두 자바스크립트로 컨트롤 할 수 있습니다.&lt;br /&gt;
&lt;strong&gt;Raspberry Pi&lt;/strong&gt;와 &lt;strong&gt;Node.js&lt;/strong&gt;에서 발생한 데이터를 인식하고 LED를 on/off 시키는 것도 자바스크립트로 구현하고, 
MongoDB에 기록하게 하는 것도 자바스크립트로 하고, 
그래프 그리는 것도 자바스크립트로 합니다.&lt;/p&gt;

&lt;p&gt;이 모든 것을 자바스크립트로 컨트롤할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;머신러닝&quot;&gt;머신러닝&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image14.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 이미지와 같이 손으로 쓴 글씨를 추론해서 숫자를 인식하는 것을 &lt;strong&gt;손글씨 추론&lt;/strong&gt;이라고 합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;MNIST&lt;/code&gt;라고 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image15.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;왼쪽위에 보시면 데이터를 로드하고 있고, 해당 예제는 &lt;code class=&quot;highlighter-rouge&quot;&gt;TensorFlow.js&lt;/code&gt;를 사용했습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;TensorFlow.js&lt;/code&gt;는&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image16.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/js1/image17.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;구글이 개발한 머신러닝, 딥러닝을 위한 자바스크립트 라이브러리입니다.&lt;/strong&gt;&lt;br /&gt;
처리시간도 그렇게 오래걸리지 않습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위와 같은 손글씨 이미지를 65,000개를 사용했고,&lt;/li&gt;
  &lt;li&gt;이 중에서 52,000개를 학습 데이터로 사용했고&lt;/li&gt;
  &lt;li&gt;13,000개를 테스트 데이터로 사용했습니다.&lt;/li&gt;
  &lt;li&gt;배치 사이즈 520개 - 배치 사이즈는 한번 반복할 때마다 처리하는 이미지 수입니다.&lt;br /&gt;
즉 배치 사이즈(520)를 100번 반복하면 52,000개를 사용하게 됩니다.&lt;br /&gt;
그런데 현재 우리는 500번(왼쪽 위)을 사용했으니 26만개를 사용한 것입니다.&lt;br /&gt;
&lt;strong&gt;지금 26만개 이미지를 읽은겁니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;엄청 빠르죠?&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
또한 이 이미지 하나의 크기가 28 X 28 입니다.&lt;br /&gt;
즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;784&lt;/code&gt; 픽셀이거든요?&lt;br /&gt;
이 픽셀을 전부 읽어야됩니다.&lt;br /&gt;
그래야 흑백을 구분할 수 있으니까요.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;GPU&lt;/code&gt;를 사용했습니다만, 자바스크립트가 이젠 속도가 느리다고 하기에는 아니다라고 말할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;테스트 50개 - 이렇게 학습을 시키고난 후에 13,000개 중에서 50개를 렌덤으로 추출합니다.&lt;br /&gt;
그것이 바로 위에 나타난 이미지들입니다.&lt;br /&gt;
위에 나타난 이미지들이 50개입니다.&lt;br /&gt;
그래서 학습이 잘 되었는지 안되었는지 테스트하게 됩니다.&lt;br /&gt;
&lt;strong&gt;현재 위에 보시면 5인데 8로 인식을 한 결과가 있습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;4인데 8로 인식한 것도 보입니다.&lt;/strong&gt;&lt;br /&gt;
하지만 2가지 경우를 제외하면 글씨가 좀 엉망이어도 제대로 인식하는 것을 볼 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위에 책은 &lt;code class=&quot;highlighter-rouge&quot;&gt;TensorFlow.js&lt;/code&gt;로 머신러닝을 구현하기 위한 책입니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 23:39:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/09/beginner3.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/09/beginner3.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>2. 애플리케이션으로 (그래프, 서킷 디자인)</title>
        <description>&lt;h2 id=&quot;2-애플리케이션으로-그래프-서킷-디자인&quot;&gt;2. 애플리케이션으로 (그래프, 서킷 디자인)&lt;/h2&gt;

&lt;p&gt;이번엔 애플리케이션입니다.&lt;/p&gt;

&lt;h2 id=&quot;그래프-차트&quot;&gt;그래프 (차트)&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image04.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/js1/image05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;바차트입니다.&lt;br /&gt;
위와 같이 자바스크립트로 그래프를 그릴 수 있습니다.&lt;br /&gt;
위 바차트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;svg&lt;/code&gt;를 사용했습니다만은, &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt;로도 그릴 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다음은 도너츠 차트입니다.&lt;br /&gt;
일부 몇개를 추려서 개재했습니다만, 전체 소스 코드가 50000줄이 넘습니다.&lt;br /&gt;
2009년도에 개발한 도너츠 차트입니다.&lt;/p&gt;

&lt;h2 id=&quot;서킷-디자인&quot;&gt;서킷 디자인&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 이미지를 드래그해서 왔다갔다해도 잘 따라다닙니다.&lt;br /&gt;
이제는 자바스크립트를 처리하는 속도가 그렇게 큰 문제는 아닙니다.&lt;br /&gt;
자바스크립트 관점에서 잠깐 살펴보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image08.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아래 부분에 표시된게 서킷인데, 100개가 넘습니다.&lt;br /&gt;
빠르죠?&lt;br /&gt;
금방 표시되었습니다.&lt;br /&gt;
서버에서 가져와서 표시한 것입니다.&lt;/p&gt;

&lt;p&gt;이런 관점에서 본다면 이제 속도는 그렇게 크리티컬한 문제가 되진 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image09.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 화면은 이미지가 아닙니다.&lt;br /&gt;
저런 구멍들 하나하나 다 처리함에도 불구하고 속도가 느리지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image10.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트로 위와 같이 원하는 부품들로 조립시현을 해보는 기능을 구현할 수 있습니다.&lt;/p&gt;

&lt;p&gt;그런데 현재 위 프로그램은 개발을 잠시 멈춘 상태입니다.&lt;br /&gt;
그 이유는 위의 화면을 이미지로 제공하려고 하는데, 이미지로 제공하는 거에서 멈추면 뭐합니까.&lt;br /&gt;
그 이미지를 다시 읽었을 때, 위 화면처럼 다시 편집이 되도록 해야되지 않겠어요?&lt;/p&gt;

&lt;p&gt;그런데 이를 프로그램으로 개발하는 것은 불가능하고, &lt;strong&gt;머신러닝, 딥러닝&lt;/strong&gt;으론 가능할 것 같습니다.&lt;br /&gt;
하지만 제가 아직 구현을 완료한 것은 아니기 때문에, 됩니다 라고 확실하게 얘기할 순 없지만, 그렇다고 불가능하진 않을 것 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image11.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 문제는 이러한 ‘선’ 부분들입니다.&lt;br /&gt;
다른 부분들은 형태가 있으니 가능성이 높습니다.&lt;br /&gt;
선을 추론해서 인식한다는 것 자체가 쉽지만은 않을 것 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image12.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 위에 처럼 텍스트 기능도 제공합니다.&lt;br /&gt;
텍스트트 크기가 다 다릅니다.&lt;br /&gt;
그리고 해당 텍스트에 한글, 영어, 중국어 등등이 들어가겠죠?&lt;br /&gt;
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;font-weight&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;font-style&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;font-family&lt;/code&gt; 등등이 있을 겁니다.&lt;/p&gt;

&lt;p&gt;이러한 점들 때문에 어려움이 많이 예상됩니다.&lt;br /&gt;
하지만 그렇다고 안된다라고 할 수는 없고 또한 가능성이 있습니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 23:14:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/09/beginner2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/09/beginner2.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>1. 자바스크립트로 할 수 있는 것</title>
        <description>&lt;h2 id=&quot;1-자바스크립트로-할-수-있는-것&quot;&gt;1. 자바스크립트로 할 수 있는 것&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;버튼 클릭을 인식시키기 위해 &lt;strong&gt;DOM&lt;/strong&gt; 과 &lt;strong&gt;JavaScript&lt;/strong&gt; 를 사용합니다.&lt;br /&gt;
서버로 입력값을 전송하기에 앞서 입력 여부를 체크해야되는데, 이때도 &lt;strong&gt;DOM&lt;/strong&gt;과 &lt;strong&gt;JavaScript&lt;/strong&gt;를 사용합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;브라우저에는 이메일 데이터가 없으므로 이메일 등록 여부는 체크할 수 없습니다.&lt;br /&gt;
그래서 입력한 값을 추출해서 서버로 전송해야하는데, 이때도 &lt;strong&gt;DOM&lt;/strong&gt;과 &lt;strong&gt;JavaScript&lt;/strong&gt;를 사용합니다.&lt;/p&gt;

&lt;p&gt;서버에서 브라우저로 전송한 값으로 이메일을 체크하게 됩니다.&lt;br /&gt;
그리고 그 결과를 다시 브라우저로 전송합니다.&lt;/p&gt;

&lt;p&gt;브라우저에서는 서버에서 보낸 결과값을 수신해야되는데 이때도 &lt;strong&gt;JavaScript&lt;/strong&gt;를 사용합니다.&lt;br /&gt;
서버의 결과값에 따라 유저 인터페이스를 제공해야되는데, 이땐 &lt;strong&gt;HTML, CSS, DOM, JavaScript&lt;/strong&gt;를 사용합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2005년도 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ajax&lt;/code&gt;가 나오기 전까지는 앞에서 설명했던 방법으로 처리하지 않았습니다.&lt;br /&gt;
사용자가 가입하기 버튼을 클릭하면, &lt;strong&gt;폼 전체를 서버로 전송했습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;그럼 폼에서 입력값을 추출하고 입력여부도 체크하고 이메일 등록여부도 체크하고 심지어 그 결과까지도 서버에서 처리했습니다.&lt;br /&gt;
그리고 그 결과를 브라우저에 전송하면 &lt;strong&gt;브라우저는 단지 표시만 할 뿐이었습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;서버가 혼자 북치고 장구치고 다 할동안 브라우저는 표시만 했던 것입니다.&lt;/p&gt;

&lt;p&gt;그런데 문제가 되죠?&lt;br /&gt;
서버는 혼자서 바쁜데 브라우저는 널널한겁니다.&lt;/p&gt;

&lt;p&gt;한편, &lt;code class=&quot;highlighter-rouge&quot;&gt;Ajax&lt;/code&gt;에서 비동기 통신 방법을 제공하게 되는데, 이 방법으로 &lt;strong&gt;분산 처리를 구현할 수 있게 되었습니다.&lt;/strong&gt;&lt;br /&gt;
즉, 아까 위에서 설명한 처리 방법으로 처리를 하게 된 것입니다.&lt;br /&gt;
그렇게 됨으로써 브라우저의 기술을 활용할 수 있게 되었고 서버는 서버나름대로의 기능만 처리하면 되게 되었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이때부터 브라우저의 중심에 자바스크립트가 서게되고, 자바스크립트 사용이 확산됩니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/js1/image03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러나 자바스크립트로 할 수 있는 것이 브라우저에 컨텐츠 표현만 있는 것은 아닙니다.&lt;br /&gt;
자바스크립트로 할 수 있는 것들은 굉장히 많습니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 22:58:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/09/beginner.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/09/beginner.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>nvm 강점, gulp 옛날버전레포2</title>
        <description>&lt;h2 id=&quot;nvm-강점-gulp-옛날버전레포2&quot;&gt;nvm 강점, gulp 옛날버전레포2&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;gulp 버전 확인 -&amp;gt; 3.9.1 버전이면 -&amp;gt; node version 8.9.0 사용&lt;/li&gt;
  &lt;li&gt;scss handlebar 확인 -&amp;gt; 1배수 2배수 이미지를 같이 넣어야 오류가 안나는 그런 경우있음 옛날 레포중에&lt;/li&gt;
  &lt;li&gt;image watch가 없어서 image 추가 삭제 변경할 경우 gulp 껐다켜야됨&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 09 Nov 2020 18:50:00 +0900</pubDate>
        <link>http://localhost:4000/node_gulp/2020/11/09/gulp2.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_gulp/2020/11/09/gulp2.html</guid>
        
        
        <category>node_gulp</category>
        
      </item>
    
  </channel>
</rss>
