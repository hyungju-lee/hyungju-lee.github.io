<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 20 Sep 2020 00:59:48 +0900</pubDate>
    <lastBuildDate>Sun, 20 Sep 2020 00:59:48 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>꿀팁</title>
        <description>&lt;h2 id=&quot;bbc-interaction-공부-5&quot;&gt;bbc interaction 공부 5&lt;/h2&gt;

&lt;h3 id=&quot;꿀팁&quot;&gt;꿀팁&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;CSS will-change : opacity&lt;br /&gt;
남용하지 말자. 오히려 부작용이 있을수도 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;text-decoration: line-through&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위에 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;에 대해 알아보자.&lt;br /&gt;
event 버블링 관련 설정이라는데 체크해볼 필요가 있을 것 같다.&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Sep 2020 00:58:00 +0900</pubDate>
        <link>http://localhost:4000/js_bbc_interaction/2020/09/20/bbc5.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_bbc_interaction/2020/09/20/bbc5.html</guid>
        
        
        <category>js_bbc_interaction</category>
        
      </item>
    
      <item>
        <title>자바스크립트 코드 분석 2</title>
        <description>&lt;h2 id=&quot;bbc-interaction-공부-4&quot;&gt;bbc interaction 공부 4&lt;/h2&gt;

&lt;h3 id=&quot;자바스크립트-코드-분석-2&quot;&gt;자바스크립트 코드 분석 2&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;이벤트핸들러 함수에 구체적인 기능이 자세하게 기술되어있으면 별로 좋지 않다.&lt;br /&gt;
이벤트핸들러는 조건 판별만 해주고 각각의 세세한 내용들은 각각 다른 함수들로 쪼개주는 것이 좋다.&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;// 이벤트핸들러 함수..&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고 반복문이 있으면 반복문을 최소한으로 돌게끔 코드를 작성하도록 한다.&lt;br /&gt;
해당 인터렉션 페이지에선 text의 위치를 판별할 때 현재 보이는 text들의 위치만 판별하면 된다.&lt;br /&gt;
전체 text들의 위치를 판별할 필요가 없다.&lt;/p&gt;

    &lt;p&gt;이를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;intersectionObserver&lt;/code&gt; API를 사용했다.&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IntersectionObserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;observer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
   
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stepElem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stepElem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;위에서 생성된 객체는 ‘대상’을 관찰한다.&lt;br /&gt;
화면에서 보이고 사라지고를 감지한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;loop를 돌릴때 조건도 잘 생각하자.&lt;br /&gt;
조건이 맞지않은건 코드실행을 건너뛰게 하고 싶을 땐 &lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt;를 활용하자.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;dataset을 잘 활용하자.&lt;br /&gt;
data-action=”함수이름”을 통해 인터렉션을 제어했다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;false/true 적절 활용&lt;br /&gt;
인터렉션이 발생하고나서 해당 섹션을 벗어났을 때 다시 인터렉션 초기화를 위해 사용하는 기법이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSS will-change : opacity&lt;br /&gt;
남용하지 말자. 오히려 부작용이 있을수도 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 20 Sep 2020 00:48:00 +0900</pubDate>
        <link>http://localhost:4000/js_bbc_interaction/2020/09/20/bbc4.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_bbc_interaction/2020/09/20/bbc4.html</guid>
        
        
        <category>js_bbc_interaction</category>
        
      </item>
    
      <item>
        <title>자바스크립트 코드 분석</title>
        <description>&lt;h2 id=&quot;bbc-interaction-공부-3&quot;&gt;bbc interaction 공부 3&lt;/h2&gt;

&lt;h3 id=&quot;자바스크립트-코드-분석&quot;&gt;자바스크립트 코드 분석&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;getBoundingRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;querySelectorAll&lt;/code&gt; 메서드를 사용했다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; 문으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;setAttribute('data-index', i)&lt;/code&gt; 메서드를 활용해 &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; 속성을 부여했다.&lt;/p&gt;

    &lt;p&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;setAttribute&lt;/code&gt; 메서드는 IE 저버전까지 호환되기 때문에 사용했다.&lt;br /&gt;
IE 저버전을 고려할 필요가 없다면 다음 API를 활용하면 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dataset.index = i;&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;IE 11만 지원한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;현재 텍스트들의 위치 정보를 어떻게 가져올 것인가?&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getBoundingRect()&lt;/code&gt; 메서드로 &lt;code class=&quot;highlighter-rouge&quot;&gt;DOMRect()&lt;/code&gt; 객체를 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;받으면 된다.&lt;br /&gt;
해당 객체엔 해당 요소의 위치 및 레이아웃 정보가 담겨져있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 20 Sep 2020 00:43:00 +0900</pubDate>
        <link>http://localhost:4000/js_bbc_interaction/2020/09/20/bbc3.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_bbc_interaction/2020/09/20/bbc3.html</guid>
        
        
        <category>js_bbc_interaction</category>
        
      </item>
    
      <item>
        <title>자바스크립트 작성 방식</title>
        <description>&lt;h2 id=&quot;bbc-interaction-공부-2&quot;&gt;bbc interaction 공부 2&lt;/h2&gt;

&lt;h3 id=&quot;자바스크립트-작성-방식&quot;&gt;자바스크립트 작성 방식&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;전역변수 사용을 회피하기 위해 즉시실행 함수를 사용했다.&lt;br /&gt;
즉시실행 함수 안에서 상수, 변수를 설정하면 함수 안에 있기 때문에 외부에서 접근을 할 수 없다.&lt;br /&gt;
ES6 에로우 펑션은 {} 안에 있기 때문에 접근할 수 없다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})()&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Reference Error : a is not defined.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;전역변수는 누구나 접근할 수 있는 변수이다.&lt;br /&gt;
그렇기 때문에 보안 이슈도 있다.&lt;br /&gt;
가급적 사용을 피하는 것이 좋다.&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Sep 2020 00:39:00 +0900</pubDate>
        <link>http://localhost:4000/js_bbc_interaction/2020/09/20/bbc2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_bbc_interaction/2020/09/20/bbc2.html</guid>
        
        
        <category>js_bbc_interaction</category>
        
      </item>
    
      <item>
        <title>bbc covid19 page에서 사용한 인터렉션 기법</title>
        <description>&lt;h2 id=&quot;bbc-interaction-공부-1&quot;&gt;bbc interaction 공부 1&lt;/h2&gt;

&lt;h3 id=&quot;bbc-covid19-page에서-사용한-인터렉션-기법&quot;&gt;bbc covid19 page에서 사용한 인터렉션 기법&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;position : sticky; top: 0; height: 100vh;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sticky&lt;/code&gt; 속성을 준 요소는 &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;를 따로 안잡는다.&lt;br /&gt;
따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;를 설정할 필요가 있다.&lt;br /&gt;
또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;sticky&lt;/code&gt; 속성은 IE에서는 아예 지원을 안한다.&lt;br /&gt;
참고문헌 : &lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/CSS/position&quot; target=&quot;_blank&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;IE는 javascript를 통해 position:fixed로 처리를 해야된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마크업 구조&lt;/p&gt;

    &lt;p&gt;scroll할 때 인터렉션이 일어나는 영역은 scroll-content 요소 안에,&lt;br /&gt;
그냥 기본대로 있는 영역은 normal-content 요소 안에 넣었다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;javascript (dataset 활용)&lt;/p&gt;

    &lt;p&gt;자바스크립트로 loop를 돌려
각 이미지에 data-index= 1, 2, 3, 4, ….&lt;br /&gt;
각 텍스트에 data-index= 1, 2, 3, 4, ….&lt;br /&gt;
를 부여했다.&lt;/p&gt;

    &lt;p&gt;그리고 서로 매칭시켜 인터렉션을 구현했다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 20 Sep 2020 00:31:00 +0900</pubDate>
        <link>http://localhost:4000/js_bbc_interaction/2020/09/20/bbc.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_bbc_interaction/2020/09/20/bbc.html</guid>
        
        
        <category>js_bbc_interaction</category>
        
      </item>
    
      <item>
        <title>토막 개발상식</title>
        <description>&lt;h2 id=&quot;토막-개발상식&quot;&gt;토막 개발상식&lt;/h2&gt;

&lt;h3 id=&quot;시큐어-코딩&quot;&gt;시큐어 코딩&lt;/h3&gt;

&lt;p&gt;xss - alert 창을 통해 사용자가 해킹하는 행위&lt;br /&gt;
사용자가 어떤걸 입력하면 alert 창이 뜨는 UI가 있다.&lt;br /&gt;
근데 사용자가 그걸 악의적으로 이용해서&lt;code class=&quot;highlighter-rouge&quot;&gt; alert()&lt;/code&gt; 이 괄호 안에 어떤 해킹 함수를 넣었다.&lt;br /&gt;
(괄호 안에 들어간 함수도 실행이 된다.)&lt;/p&gt;

&lt;p&gt;그럼 해킹당하게 되는 것이다.&lt;br /&gt;
이를 방지하기 위해 시큐어 코딩을 해야된다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;url주소/?id=1&lt;/p&gt;

&lt;p&gt;이런 url이 있으면 id=1 대신에 &lt;code class=&quot;highlighter-rouge&quot;&gt;'update auth=1 from use'&lt;/code&gt; 이런 쿼리문을 넣어버리면 모든 유저 권한이 다 바뀌어서 사이트 모든 정보를 노출되게하는 공격도 있다.&lt;br /&gt;
이런 것들을 신경쓰면서 시큐어 코딩을 해야된다.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2020 20:48:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/18/issue5.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/18/issue5.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>zsh</title>
        <description>&lt;h2 id=&quot;zsh&quot;&gt;zsh&lt;/h2&gt;

&lt;p&gt;zsh는 z-shell의 약어이다.&lt;br /&gt;
맥북 터미널 창에는 윈도우 깃배쉬창 처럼 브랜치를 따로 명시해주지 않기 때문에 이를 보완해주는 툴이다.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2020 20:47:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/18/issue4.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/18/issue4.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>yarn</title>
        <description>&lt;h2 id=&quot;npm과-yarn-차이&quot;&gt;npm과 yarn 차이&lt;/h2&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NPM allowed packages to run code on installation automatically and on-the-fly, 
even from their dependencies automatically and on the fly. 
While this feature has its conveniences, it raised a few security 
concerns – especially considering the no-vetting registry policy on 
package submissions which we talked about early on. Conversely, 
Yarn only installs from your yarn.lock or package.json files. 
More specifically, yarn.lock ensures that the same package is installed throughout 
all devices, thus drastically reducing the chance of bugs from having different 
versions installed.

NPM은 패키지가 설치시 자동으로 즉시 코드를 실행할 수 있도록했습니다.
의존성에서도 자동으로 그리고 즉시.
이 기능은 편리하지만 몇 가지 보안을 높였습니다.
우려 사항 – 특히 검사 금지 레지스트리 정책을 고려하여
우리가 일찍 이야기했던 패키지 제출. 거꾸로,
Yarn은 yarn.lock 또는 package.json 파일에서만 설치됩니다.
보다 구체적으로 yarn.lock은 동일한 패키지가 전체에 설치되도록합니다.
모든 장치를 사용하므로 버그가 서로 다른
설치된 버전.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 내용은 간단히 말하면 다음과 같다.&lt;br /&gt;
개발자가 악의적으로 이상한 코드를 넣어 라이브러리(모듈)를 개발한다면,&lt;br /&gt;
이상한 악성 코드를 넣었음에도 불구하고 npm은 즉시 실행을 해버리기 때문에 보안상 취약해진다.&lt;/p&gt;

&lt;p&gt;속도와 개발자 편이성을 위해 넣은 기능이 반대로 보안상 문제를 일으킨 경우다.&lt;br /&gt;
이를 &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn&lt;/code&gt;은 보완했다.&lt;br /&gt;
그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn&lt;/code&gt;을 사용하는 개발자들도 꽤 많다.&lt;br /&gt;
과거엔 &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn&lt;/code&gt;이 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm&lt;/code&gt;보다 속도 면에서 좀 느렸지만 지금은 거의 차이가 없다.&lt;/p&gt;

&lt;p&gt;이러한 문제를 &lt;code class=&quot;highlighter-rouge&quot;&gt;node&lt;/code&gt;를 개발한 개발자도 언급한바 있다.&lt;br /&gt;
그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;deno&lt;/code&gt;를 만든거라고도 했다.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2020 20:46:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/18/issue3.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/18/issue3.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>nvmrc</title>
        <description>&lt;h2 id=&quot;nvmrc-파일&quot;&gt;.nvmrc 파일&lt;/h2&gt;

&lt;p&gt;nvm을 사용할시 노드 버전을 명시하는 환경설정 파일이다.&lt;br /&gt;
주의깊게 명시하자.&lt;br /&gt;
0.01 버전 차이라도 sass 컴파일 결과물이 다른 경우가 발생한적이 있다.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2020 20:45:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/18/issue2.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/18/issue2.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>nvm 관련</title>
        <description>&lt;h2 id=&quot;nvm-관련&quot;&gt;nvm 관련&lt;/h2&gt;

&lt;p&gt;노드버전을 갈아탈 때마다 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm i&lt;/code&gt;를 다시 해줘야되는 것이 아니다.&lt;br /&gt;
gulp 버전이 다른 레포들이 있는데, 각 gulp 버전마다 호환되는 gulp-cli 모듈의 버전이 다르다.&lt;br /&gt;
이럴 경우 gulp-cli를 재설치해주는 것이다.&lt;br /&gt;
그런데 이 또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm i&lt;/code&gt;를 하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;에 명시되어있는 도구들을 설치하기 때문에 gulp / gulp-cli가 같이 설치된다.&lt;/p&gt;

&lt;p&gt;즉, 노드 버전을 바꾸기 때문에 재설치를 해야되는 것이 아니라 그냥 각 레포별로 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm i&lt;/code&gt;를 하듯이 설치하는 것일 뿐이다.&lt;br /&gt;
노드 버전을 갈아타는 것과는 무관한 것이다.&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2020 20:44:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/18/issue.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/18/issue.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
  </channel>
</rss>
