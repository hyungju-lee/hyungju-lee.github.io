<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 22 Nov 2020 01:33:41 +0900</pubDate>
    <lastBuildDate>Sun, 22 Nov 2020 01:33:41 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>44. Number 오브젝트 개요, 프로퍼티 리스트</title>
        <description>&lt;h2 id=&quot;44-number-오브젝트-개요-프로퍼티-리스트&quot;&gt;44. Number 오브젝트 개요, 프로퍼티 리스트&lt;/h2&gt;

&lt;h2 id=&quot;number-오브젝트&quot;&gt;Number 오브젝트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;숫자(123) 처리를 위한 오브젝트&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;즉, Number 오브젝트에&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;숫자 처리를 위한&lt;/li&gt;
      &lt;li&gt;함수와 프로퍼티가 포함되어 있으며&lt;/li&gt;
      &lt;li&gt;함수를 호출하여 숫자 처리를 하게 됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;빌트인-오브젝트-number-의-프로퍼티-리스트&quot;&gt;빌트인 오브젝트 Number 의 프로퍼티 리스트&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;이름&lt;/th&gt;
      &lt;th&gt;개요&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;new Number()&lt;/td&gt;
      &lt;td&gt;인스턴스 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Number 함수&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Number()&lt;/td&gt;
      &lt;td&gt;숫자값으로 변환하여 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Number.prototype&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;constructor&lt;/td&gt;
      &lt;td&gt;생성자&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toString()&lt;/td&gt;
      &lt;td&gt;숫자 값을 문자열로 변환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toLocaleString()&lt;/td&gt;
      &lt;td&gt;숫자 값을 지역화 문자로 변환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;valueOf()&lt;/td&gt;
      &lt;td&gt;프리미티브(원시) 값 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toExponential()&lt;/td&gt;
      &lt;td&gt;지수 표기로 변환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toFixed()&lt;/td&gt;
      &lt;td&gt;고정 소숫점 표기로 변환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toPrecision()&lt;/td&gt;
      &lt;td&gt;고정 소숫점 또는 지수 표기로 변환&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;프리미티브(원시) 값 : 더 이상 분해할 수 없는, 더 이상 전개할 수 없는 값입니다.&lt;br /&gt;
여기서 프리미티브 값은 인스턴스에 설정된 값입니다.&lt;br /&gt;
프리미티브 값을 이해하려면 우선 &lt;strong&gt;인스턴스&lt;/strong&gt;에 대해 이해할 필요가 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;지수표기 : 5e + 123 이런식의 표기법을 말합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위에 &lt;strong&gt;변환&lt;/strong&gt;이라고 쓰여있는 함수를 보면 맨 앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;to&lt;/code&gt;로 시작합니다.&lt;br /&gt;
&lt;strong&gt;빌트인 Number 오브젝트에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;to&lt;/code&gt;로 시작하는 함수는 변환을 위한 함수라는 것을 알 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 23:57:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner11.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner11.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>43. 빌트인 오브젝트 유형, 빌트인 오브젝트 형태</title>
        <description>&lt;h2 id=&quot;43-빌트인-오브젝트-유형-빌트인-오브젝트-형태&quot;&gt;43. 빌트인 오브젝트 유형, 빌트인 오브젝트 형태&lt;/h2&gt;

&lt;h2 id=&quot;빌트인-오브젝트&quot;&gt;빌트인 오브젝트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Number 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;123과 같은 숫자, 상수, 지수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;String 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;“abc”와 같은 문자열, 분리, 연결&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Boolean 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;true, false&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Object 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;{ key: value } 형태&lt;/li&gt;
      &lt;li&gt;프로퍼티를 처리하기 위한 오브젝트 (for ~ in 문으로 처리하는 것처럼)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Array 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;[1, 2, “A”, “가나다”] 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Function 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;function abc () {} 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Math 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;abs(), round() 등의 수학 계산&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Date 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;연월일, 시분초&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JSON 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;[{ “name” : “value” }] 형태&lt;/li&gt;
      &lt;li&gt;서버와 데이터 송수신에 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;RegExp 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;^, $와 같은 정규 표현식&lt;/li&gt;
      &lt;li&gt;본 강좌에서 다루지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;글로벌(Global) 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소스 파일 전체에서 하나만 존재 (다른 오브젝트처럼 여러개 또는 만들어야되는 것이 아니고, 이미 존재하고 유일합니다.)&lt;/li&gt;
      &lt;li&gt;모든 코드에서 공유, 접근 가능&lt;/li&gt;
      &lt;li&gt;전역 객체라고도 하며, 뉘앙스에 차이 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 22:33:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner10.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner10.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>42. 빌트인(Built-in), 빌트인 개요, 빌트인 분류</title>
        <description>&lt;h2 id=&quot;42-빌트인built-in-빌트인-개요-빌트인-분류&quot;&gt;42. 빌트인(Built-in), 빌트인 개요, 빌트인 분류&lt;/h2&gt;

&lt;h2 id=&quot;빌트인-안에-만들어져있는&quot;&gt;빌트인 (~~안에 만들어져있는)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Built-in 이란?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;값 타입, 연산자, 오브젝트(Object)를&lt;/li&gt;
      &lt;li&gt;사전에 만들어 놓은 것&lt;/li&gt;
      &lt;li&gt;JS 코드를 처리하는 영역에&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;장점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사전 처리를 하지 않고 즉시 사용&lt;/li&gt;
      &lt;li&gt;자바스크립트 특징&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;빌트인이란 값 타입, 연산자 오브젝트를 JS 코드를 처리하는 영역에 사전에 만들어 놓은 것입니다.&lt;br /&gt;
사전 처리를 하지 않고 즉시 사용이 가능합니다.&lt;br /&gt;
사전 처리를 해야 사용할 수 있는 것도 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 값 타입&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Undefined, Null, Boolean, Number, String, Object&lt;/li&gt;
      &lt;li&gt;나머지는 typeof 연산자로 평가하면 각각에 해당하는 데이터 타입이 반환되지만,&lt;br /&gt;
Null 과 Object 는 Object 가 반환됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 연산자(Operator)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;+, -, *, /, %, ++, –, new 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;빌트인 오브젝트: 다음 페이지에서 다룸&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;빌트인-오브젝트-형태&quot;&gt;빌트인 오브젝트 형태&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;빌트인 Number 오브젝트와 같이 ES5에는 약 10 몇개의 빌트인 오브젝트가 있습니다.&lt;br /&gt;
Number, String 등등…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 Number 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;123과 같은 숫자, 상수, 지수를&lt;/li&gt;
      &lt;li&gt;처리하는 오브젝트&lt;/li&gt;
      &lt;li&gt;여기서 오브젝트는 소문자 object&lt;br /&gt;
지금까지 다뤘던 대문자 Object 는 &lt;strong&gt;{key(name) : value}&lt;/strong&gt; 형태로 데이터를 저장했습니다.&lt;br /&gt;
그런데 &lt;strong&gt;빌트인 Number 오브젝트는 이미 {key(name) : value} 형태로 만들어져 있는 겁니다.&lt;/strong&gt;&lt;br /&gt;
그리고 대문자 Object 가 {key(name) : value} 로 데이터를 저장하는 것이 중점이라면, &lt;strong&gt;소문자 object 는 데이터를 처리하는 데 중점을 둡니다.&lt;/strong&gt;&lt;br /&gt;
따라서 소문자 object 에는 함수가 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;빌트인 Number 오브젝트 형태&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;개발자 도구 열기 (Ctrl + Shift + I)&lt;/li&gt;
  &lt;li&gt;브라우저 새로고침 실행 (F5)&lt;/li&gt;
  &lt;li&gt;debugger 위치에서 실행 멈춤&lt;/li&gt;
  &lt;li&gt;debugger 종료 (F8)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;use strict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*
    1. 빌트인 Number 오브젝트를 obj에 할당합니다.
    - 따라서 obj 는 빌트인 Number 오브젝트가 됩니다.
    
    2. 오른쪽 Local 의 obj 를 펼칩니다.
*/&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*
    3. MAX_VALUE, MIN_VALUE, NaN, Length 등이 있습니다.
    1) MIN_VALUE: 5e-324 에서
       MIN_VALUE 가 프로퍼티 이름이고 5e-324가 프로퍼티 값입니다.
    2) Length: 1에서  
       Length 가 프로퍼티 이름이고 1이 프로퍼티 값입니다.
    
    4. isNaN() 가 있으며 ()는 함수를 나타냅니다.
       isNaN() 이 함수 이름이고, 프로퍼티 값은 function () {} 입니다.
*/&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//--------------------------------&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*
    1. 빌트인 Number 오브젝트는
    - Number 처리를 위한 프로퍼티의 집합입니다.
    - 즉, Number 처리를 위한 오브젝트입니다.

    2. JS 에서 Number 처리를 위한 프로퍼티를
    - 사전에 만들어 제공하므로
    - 즉, built-in 으로 제공하므로
    - Number.length 로 1을 구할 수 있으며
    - Number.isNaN() 으로 함수를 호출할 수 있습니다.
*/&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Number.length:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Number.length: 1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Number.isNaN(123):&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isNaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Number.isNaN(123): false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image185.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image186.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트의 모든 구조는 전부 다 위와 같이 &lt;strong&gt;{ key(name) : value }&lt;/strong&gt; 형태를 갖습니다.
&lt;strong&gt;자바스크립트의 기본 구조는 이런 프로퍼티입니다.&lt;/strong&gt;&lt;br /&gt;
다수의 프로퍼티 집합이 Number, String 과 같은 &lt;strong&gt;빌트인 오브젝트&lt;/strong&gt;입니다.&lt;/p&gt;

&lt;h2 id=&quot;그럼-이러한-빌트인-오브젝트는-왜-필요할까&quot;&gt;그럼 이러한 빌트인 오브젝트는 왜 필요할까?&lt;/h2&gt;

&lt;p&gt;Number 오브젝트는 숫자 처리를 위한 프로퍼티의 집합입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;isNaN() : NaN인지 아닌지 판단하는 함수입니다.&lt;/li&gt;
  &lt;li&gt;isInteger()&lt;/li&gt;
  &lt;li&gt;isSafeInteger()&lt;/li&gt;
  &lt;li&gt;isFinite
…&lt;br /&gt;
…&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;위와 같이 Number 빌트인 오브젝트는 Number 처리를 위한 것들을 사전에 미리 만들어 두었으므로 &lt;strong&gt;개발자들은 이를 가져다 사용하기만하면 된다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 22:04:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner9.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner9.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>41. Object 프로퍼티 열거, 프로퍼티 값 추출, for in 문</title>
        <description>&lt;h2 id=&quot;41-object-프로퍼티-열거-프로퍼티-값-추출-for-in-문&quot;&gt;41. Object 프로퍼티 열거, 프로퍼티 값 추출, for in 문&lt;/h2&gt;

&lt;h2 id=&quot;프로퍼티-값-추출&quot;&gt;프로퍼티 값 추출&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오브젝트에서 프로퍼티 값 추출&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;var obj = {book: “책”}&lt;/li&gt;
      &lt;li&gt;var value = obj.book;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;obj 오브젝트에 프로퍼티 이름인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;book 이 있으면 프로퍼티 값 반환&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;book 이 없으면 undefined 반환&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 책&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sports&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;obj.book&lt;br /&gt;
obj 오브젝트에 프로퍼티 이름으로 book이 있으므로 프로퍼티 값인 “책”이 반환됩니다.&lt;/li&gt;
          &lt;li&gt;obj[“sports”]&lt;br /&gt;
obj 오브젝트에 프로퍼티 이름으로 sports 가 없으므로 undefined 가 반환됩니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;for--in&quot;&gt;for ~ in&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;오브젝트에서 프로퍼티를 열거&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;soccer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;축구&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;baseball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;야구&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// soccer&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 축구&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// baseball&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 야구&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;형태 :&lt;br /&gt;
for (변수 in 오브젝트) 문장;&lt;br /&gt;
for (표현식 in 오브젝트) 문장;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;for (var item in sports) {코드}&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로퍼티 이름이 item 에 설정&lt;/li&gt;
      &lt;li&gt;sports[item]으로 프로퍼티 값을 구함&lt;/li&gt;
      &lt;li&gt;프로퍼티를 작성한 순서대로 읽혀진다는 것을 보장하지 않음&lt;br /&gt;
&lt;strong&gt;그런데 ES3에선, 프로퍼티를 작성한 순서.. 위에 작성한 순서대로 읽혀진다는 것을 보장하지 않았습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;ES5 부턴 작성된 순서대로 읽혀집니다.&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 16:55:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner8.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner8.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>40. 오브젝트(Object) 프로퍼티 개요, 프로퍼티 추가, 변경</title>
        <description>&lt;h2 id=&quot;40-오브젝트object&quot;&gt;40. 오브젝트(Object)&lt;/h2&gt;

&lt;h2 id=&quot;프로퍼티-property&quot;&gt;프로퍼티 (property)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;property&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;{ name : value } 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;name 에 프로퍼티 이름/키를 작성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;따옴표 작성 생략&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;프로퍼티 name(key)에서 key는 유일하지만 name은 중복될 수 있다는 뉘앙스가 풍깁니다.&lt;/li&gt;
  &lt;li&gt;ES3 에서는 같은 이름이 등록되기도 합니다.&lt;br /&gt;
즉, 위 코드로치면 title이 두 개가 있는 것입니다.&lt;br /&gt;
&lt;strong&gt;그래서 그때엔 title이 book 오브젝트에 존재하는지 체크하는 코드로 먼저 체크한 후 등록여부를 결정했습니다.&lt;/strong&gt;&lt;br /&gt;
ES5에서는 2중으로 등록되진 않구요, 프로퍼티 이름이 이미 있다면 &lt;strong&gt;값이 대체되는 형태가 되었습니다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;ES5에서는 key와 name을 구분하지 않아도 되지만 (프로퍼티 네임, 프로퍼티 키 아무렇게나 불러도 되지만)&lt;br /&gt;
ES6에서는 구분해야 합니다. (값의 지칭 범위가 좀 다릅니다.)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;{title: “책”}에서 “title”처럼 따옴표를 사용해야 합니다.&lt;br /&gt;
&lt;strong&gt;즉, title은 String 타입입니다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;그런데 따옴표를 작성하지 않는 것은 따옴표를 작성하지 않아도 문자열로 간주하기 때문입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;value 에 JS 에서 지원하는 타입 작성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;{ a: 123, b: “ABC”, c: true, d: {} }&lt;/li&gt;
      &lt;li&gt;{ book: function(){코드} }&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ten&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bonus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;promotion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;오브젝트는 위와 같이 value 에 오브젝트를 작성하여 확장할 수 있는 것이 특징입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오브젝트(Object)를 객체라고 부르지만&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;뉘앙스가 다르며, 강좌에서는 오브젝트로 표기&lt;/li&gt;
      &lt;li&gt;오브젝트와 객체 구분이 필요할 때, 별도 표기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;여기서 말하는 오브젝트는 프로퍼티라는 실체가 있습니다. {name: value}&lt;br /&gt;
그런데 책과 문서에 기록되어있는 것은 주변 상황에 따라서 실체가 없이 개념적인 이야기가 될 수도 있습니다.&lt;br /&gt;
제가 오브젝트라고 표기하는 이유는 실체를 가리키기 위함입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;프로퍼티-추가-변경&quot;&gt;프로퍼티 추가, 변경&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오브젝트에 프로퍼티 추가, 변경&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;var obj = {};&lt;/li&gt;
      &lt;li&gt;obj.abc = 123;&lt;/li&gt;
      &lt;li&gt;obj 오브젝트에 프로퍼티 이름으로&lt;br /&gt;
abc가 없으면 abc: 123이 추가되고
abc가 있으면 프로퍼티 값이 123으로 변경됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;작성 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;점(.)과 프로퍼티 이름 사용&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// {title: &quot;JS책&quot;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;book.title 처럼 점(.)에 이어서 프로퍼티 이름을 작성합니다.&lt;/li&gt;
          &lt;li&gt;title을 “title” 처럼 따옴표를 사용하지 않습니다.&lt;/li&gt;
          &lt;li&gt;= 오른쪽에 프로퍼티 값을 작성합니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;대괄호 사용: obj[“abc”]&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// {title: &quot;JS책&quot;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;book[“title”] 처럼 대괄호 [] 안에 문자열로 프로퍼티 이름을 작성합니다.&lt;/li&gt;
          &lt;li&gt;= 오른쪽에 프로퍼티 값을 작성합니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;abc 변수 이름 작성: obj[abc]&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;varName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;varName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;HTML책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// {title: &quot;HTML책&quot;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;프로퍼티 이름을 변수에 작성하고 이를 사용&lt;/li&gt;
          &lt;li&gt;title 프로퍼티 이름이 있으므로 프로퍼티 값이 변경됩니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 16:34:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner7.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner7.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>39. 주석 작성 목적, 주석 작성 사례</title>
        <description>&lt;h2 id=&quot;39-주석-작성-목적-주석-작성-사례&quot;&gt;39. 주석 작성 목적, 주석 작성 사례&lt;/h2&gt;

&lt;h2 id=&quot;주석-작성의-궁극적인-목적&quot;&gt;주석 작성의 궁극적인 목적&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;코드가 목적을 달성하기 위한&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기능, 시나리오 등을 &lt;strong&gt;생각하고 정리하는 것&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;이것을 문법에 맞추어 작성한 것이 코드&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;코드를 작성하기 전에&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;우선 먼저 정리한 생각을 주석으로 작성&lt;/li&gt;
      &lt;li&gt;어렵지만 처음 배울 때부터 습관화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;주석 작성 기준&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;코드의 목적, 결과가 미치는 영향을 작성&lt;/li&gt;
      &lt;li&gt;다른 사람이 알 수 있도록 자세하게 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;주석-사례&quot;&gt;주석 사례&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
* @function calculateAmount
* 1. 파라미터로 받은 수량에 단가를 곱해
*    금액을 계산하고 결과 값을 반환한다.
* 2. 수량과 단가의 0 체크는
*    함수를 호출하기 전에 하므로 체크하지 않는다.
* @param {Number} quantity, 수량
* @param {Number} price, 단가
* @return {Number} 계산 결과
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;calculateAmount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 주석을 자세하게 작성하기 위해&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 함수 코드를 분리하는 경우도 있습니다.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 주석 형태는 자바스크립트 문법상으로 정리되어있는 주석은 아니고, 개발자들이 관례적으로 사용하다가 지금은 일반적인 방법이 된 사례입니다.&lt;br /&gt;
&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/**&lt;/code&gt; 이 형태로 주석을 작성하면 자동으로 웹 문서를 만들어주는 툴이 있었습니다.&lt;/strong&gt;&lt;br /&gt;
그것에 맞추다보니 일반화가 된 것입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;도 그 툴에서 사용하는 기준이었습니다.&lt;/p&gt;

&lt;p&gt;위의 예시처럼 시나리오를 작성합니다.&lt;br /&gt;
그리고 처리안한 부분이 있다면 그 이유도 명확하게 작성합니다.&lt;br /&gt;
그래야 다른 개발자가 보고 오해를 안합니다.&lt;/p&gt;

&lt;p&gt;함수는 알아보기 쉽게 최소화시킵니다.&lt;br /&gt;
함수 코드가 너무 길면 함수명이 구체적이지 않게 됩니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 16:07:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner6.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner6.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>38. 함수 호출, return 문</title>
        <description>&lt;h2 id=&quot;38-함수-호출-return-문&quot;&gt;38. 함수 호출, return 문&lt;/h2&gt;

&lt;h2 id=&quot;호출받는-함수&quot;&gt;호출받는 함수&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;함수는 호출되어야 실행됩니다.&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
  &lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;호출받는 함수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;함수가 호출되었을 때 실행되는 함수&lt;/li&gt;
      &lt;li&gt;함수라고 하면 호출받는 함수를 지칭&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;호출한 함수에서 넘겨준 값을 받음&lt;/li&gt;
      &lt;li&gt;(one, two) 처럼&lt;br /&gt;
소괄호 () 안에 파라미터 이름 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;함수-호출&quot;&gt;함수 호출&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;setValue() 형태로 호출&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;함수 이름과 소괄호()를 작성&lt;/li&gt;
      &lt;li&gt;setValue 만 작성하면 호출되지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;함수가 호출되는 일련의 사이클을 라이프 사이클이라고 이야기 합니다.&lt;br /&gt;
함수가 호출되고 함수가 실행하고 끝나는 일련의 과정입니다.&lt;br /&gt;
그 과정을 아래 정리해보겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;호출받는 함수 작성&lt;/li&gt;
  &lt;li&gt;setValue(10, 20) 형태로 함수 호출&lt;br /&gt;
파라미터 값으로 10과 20을 넘겨줍니다.&lt;/li&gt;
  &lt;li&gt;호출된 함수에서 10을 one에, 20을 two에 설정합니다.&lt;br /&gt;
즉, 왼쪽에서 오른쪽으로 설정&lt;/li&gt;
  &lt;li&gt;setValue() 함수의 함수 코드 실행&lt;/li&gt;
  &lt;li&gt;함수를 호출한 코드로 다시 돌아감 (자신을 불러준 코드위치로 돌아가는 것까지가 하나의 사이클입니다.)&lt;/li&gt;
  &lt;li&gt;일반적으로 호출받는 함수를 소스 파일 위에 작성하고 함수 호출을 아래에 작성합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;호출된 함수에 넘겨줄 값 작성&lt;/li&gt;
      &lt;li&gt;setValue(10, 20)처럼 소괄호() 안에 작성&lt;/li&gt;
      &lt;li&gt;JS에서 지원하는 타입 작성&lt;/li&gt;
      &lt;li&gt;콤마(,)로 구분하여 다수 작성 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;return&quot;&gt;return&lt;/h2&gt;

&lt;p&gt;return 문은 함수는 아니고 statement (문)입니다.&lt;br /&gt;
그런데 함수 안에서 많이 사용합니다.&lt;br /&gt;
그렇다고 꼭 함수 안에서 사용해야하는 것은 아니고 다른 곳에서도 사용하지만 보통 함수 안에서 많이 사용합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;형태 :&lt;br /&gt;
return 표현식opt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;표현식의 평가 결과 반환&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 300&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;strong&gt;실행 순서&lt;/strong&gt;&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;getPoint() 함수 호출&lt;/li&gt;
      &lt;li&gt;return 의 오른쪽 표현식(10 * 30)을 평가&lt;/li&gt;
      &lt;li&gt;평가 결과 300을 반환&lt;/li&gt;
      &lt;li&gt;300을 갖고 getPoint()로 돌아갑니다.&lt;/li&gt;
      &lt;li&gt;300을 result 변수에 할당합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;return 또는 표현식을 작성하지 않으면 &lt;strong&gt;undefined 반환&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resuilt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resuilt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;return 을 작성하지 않으면&lt;/li&gt;
      &lt;li&gt;값을 반환하지 않는 것이 아니라 undefined 값을 반환합니다.&lt;br /&gt;
JS에서 undefined 는 값입니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;return 과 표현식을 한 줄에 작성&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;return 끝에 세미콜론을 자동으로 첨부합니다.&lt;/li&gt;
      &lt;li&gt;return 문에서 return 하므로 10 * 30을 수행하지 않게 됩니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 15:28:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner5.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner5.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>37. 함수 구성 요소, 함수 이름 규칙과 관례</title>
        <description>&lt;h2 id=&quot;37-함수-구성-요소-함수-이름-규칙과-관례&quot;&gt;37. 함수 구성 요소, 함수 이름 규칙과 관례&lt;/h2&gt;

&lt;h2 id=&quot;함수&quot;&gt;함수&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;function&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;특정 기능을 처리하는 자바스크립트 코드 묶음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;함수 형태 :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS 책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bonus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;함수-구성-요소&quot;&gt;함수 구성 요소&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;function 키워드(keyword)&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS 책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bonus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;함수 이름&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터(Parameter)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;매개 변수, 인자, 아규먼트로도 부름&lt;/li&gt;
      &lt;li&gt;강좌에서는 파라미터로 표기&lt;/li&gt;
      &lt;li&gt;파라미터 작성은 선택&lt;/li&gt;
      &lt;li&gt;일반적으로 파라미터가 5개 넘어가면 다른 방식으로 작성합니다.&lt;br /&gt;
가독성이 떨어지기 때문입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;함수 Body&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;중괄호 {} 안에 작성한 코드&lt;/li&gt;
      &lt;li&gt;함수 코드, 소스 텍스트로도 부름&lt;/li&gt;
      &lt;li&gt;강좌에서는 함수 코드로 표기&lt;/li&gt;
      &lt;li&gt;함수 코드 작성은 선택&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;함수-이름-규칙&quot;&gt;함수 이름 규칙&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;첫 문자&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;영문자, $, 언더바(_) : 사용 가능&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;숫자, &amp;amp;, *, @, + : 사용 불가&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setBookTitle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS 책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;calculatePoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bonus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;함수 이름 작명 권장&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;함수 코드를 읽지 않더라도&lt;/li&gt;
      &lt;li&gt;함수 이름과 파라미터로 기능을 알 수 있도록&lt;/li&gt;
      &lt;li&gt;시맨틱(의미, 뜻)을 부여하여 작명&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;함수-이름-관례&quot;&gt;함수 이름 관례&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;calculatePoint() 처럼 동사로 시작&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;포인트를 계산한다.&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setBookTitle&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS 책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;calculatePoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bonus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;두 개 이상의 단어를 사용할 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;두 번째 단어부터 명사 사용&lt;/li&gt;
      &lt;li&gt;명사의 첫 문자를 대문자로 사용&lt;/li&gt;
      &lt;li&gt;camelCase 형태라고 부름&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;동사 + 명사 형태로 동적인 모습&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;강좌에서는 설명 편리를 위해 간단하게 작성합니다.&lt;/li&gt;
      &lt;li&gt;함수 이름은 길더라도 구체적인 시멘틱을 갖는 것이 좋습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 15:12:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner4.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner4.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>36. strict 모드</title>
        <description>&lt;h2 id=&quot;36-strict-모드&quot;&gt;36. strict 모드&lt;/h2&gt;

&lt;h2 id=&quot;strict-모드&quot;&gt;strict 모드&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;형태 : “use strict”&lt;/li&gt;
  &lt;li&gt;엄격하게 JS 문법 사용의 선언&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;작성한 위치부터 적용&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 책&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;var 을 작성하지 않은 형태 (좋은 코드 작성방법은 아닙니다.)&lt;/li&gt;
      &lt;li&gt;var 을 사용하여 변수를 선언해야 하지만 변수가 선언되고 “책”이 할당됩니다.&lt;/li&gt;
    &lt;/ol&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;use strict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;변수 선언하지 않음&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// book is not defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;var 키워드를 작성하지 않은 형태&lt;/li&gt;
      &lt;li&gt;book 변수에 “변수 선언하지 않음”을 할당하면 에러 발생&lt;/li&gt;
      &lt;li&gt;error.message 에 에러 메시지로 설정됩니다.&lt;/li&gt;
      &lt;li&gt;코딩 실수를 예방할 수 있으므로 &lt;strong&gt;use strict&lt;/strong&gt; 선언은 필수입니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;use strict 가 시스템 처리에 미치는 영향이 좋습니다.&lt;br /&gt;
퍼포먼스도 빨라지고, 자바스크립트 엔진이 처리하는 알고리즘도 많이 심플해집니다.&lt;br /&gt;
use strict 작성은 필수라고 해도 지나치지 않습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;ES5 부터 지원&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;코딩-시간&quot;&gt;코딩 시간&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JS 프로그램에서 사용하지 않는 문장이 있습니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;label 이라고 있는데, label 문장의 코드를 작성하고 사용하지 않는 이유를 설명하세요.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/label&quot; target=&quot;_blank&quot;&gt;label mdn&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;“use strict” 아래에 &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; 문을 사용한 코드를 작성하세요.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;에러가 발생하는 것을 확인하세요.&lt;/li&gt;
      &lt;li&gt;에러가 발생하는 이유는 단계적 설명이 필요하므로 중고급 과정에서 다룹니다.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/with&quot; target=&quot;_blank&quot;&gt;with mdn&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 13:52:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner3.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner3.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>35. try-catch, throw</title>
        <description>&lt;h2 id=&quot;35-try-catch-throw&quot;&gt;35. try-catch, throw&lt;/h2&gt;

&lt;h2 id=&quot;try-catch&quot;&gt;try-catch&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;형태:&lt;br /&gt;
try 블록 catch (식별자) 블록&lt;br /&gt;
try 블록 finally 블록&lt;br /&gt;
try 블록 catch (식별자) 블록 finally 블록&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;try 문에서 예외 발생을 인식&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예외가 발생하면 catch 블록 실행&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;catch 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// catch 실행&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;try 블록에서 ball 을 value 에 할당할 때 ball 변수가 없으므로 에러 발생&lt;/li&gt;
      &lt;li&gt;에러가 발생하면 catch(error) 블록 실행&lt;br /&gt;
파라미터 error 에 JS 의 Error 오브젝트 설정&lt;/li&gt;
      &lt;li&gt;error 는 식별자로 임의의 이름 사용 가능&lt;/li&gt;
      &lt;li&gt;에러가 발생할 가능이 있으면 반드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;try-catch&lt;/code&gt;를 사용해야 합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;에러를 일으키는 코드가 try 문 안에 들어가있지 않다면 해당 프로그램은 죽습니다.&lt;br /&gt;
하지만 try 문 안에 에러코드가 들어가있다면, 에러가 발생하더라도 프로그램이 죽지 않고 catch 문을 실행합니다.&lt;br /&gt;
이것이 try catch 를 사용하는 목적입니다.&lt;/p&gt;

  &lt;p&gt;서버에서 데이터를 가져올 때 통신상에서의 에러가 발생할 확률이 높습니다.&lt;br /&gt;
따라서 서버에서 데이터를 가져올 때에는, 즉, 통신을 할 때엔 &lt;strong&gt;반드시 try 문에 작성을 해야됩니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;finally 블록은 예외 발생과 관계없이 실행&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;catch 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;finally 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// catch 실행&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// finally 실행&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;try 에서 에러가 발생하면 catch() 블록을 실행한 후 finally 블록 실행&lt;/li&gt;
      &lt;li&gt;try 에서 에러가 발생하지 않더라도 finally 블록 실행&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;throw&quot;&gt;throw&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;에러를 던지는 것이라고 생각하시면 됩니다.&lt;br /&gt;
에러를 던지고 catch 문이 잡는 것입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;형태 : throw 표현식;&lt;/li&gt;
  &lt;li&gt;명시적으로 예외를 발생시킴&lt;/li&gt;
  &lt;li&gt;예외가 발생하면 catch 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;예외 발생시킴&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;스포츠&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 예외 발생시킴&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;throw 표현식에 문자열을 작성한 형태&lt;/li&gt;
  &lt;li&gt;throw 를 만나면 에러가 발생하며 catch 블록이 실행됩니다.&lt;br /&gt;
throw 아래의 코드는 실행하지 않습니다.&lt;br /&gt;
정확히 표현해선 throw 다음 표현식의 세미콜론 이후부턴 실행하지 않습니다.&lt;br /&gt;
자바스크립트 엔진은 개행된 시점 기준으로 세미콜론을 자동으로 넣습니다.&lt;/li&gt;
  &lt;li&gt;catch(error)의 error 에 throw 표현식의 문자열이 설정됩니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image184.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;예외 발생시킴&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bigo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;임의의 이름 사용&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bigo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 예외 발생시킴&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 임의의 이름 사용&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;throw 표현식에 오브젝트를 작성한 형태&lt;/li&gt;
  &lt;li&gt;catch(error) 의 error 에 Error 오브젝트가 설정됩니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;예외 발생시킴&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 예외 발생시킴&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;throw 표현식에 Error 오브젝트 작성&lt;br /&gt;
Error() 의 파라미터에 메시지 작성&lt;br /&gt;
오브젝트의 message 에 메시지가 설정됩니다.&lt;/li&gt;
  &lt;li&gt;catch(error) 의 error 에 Error 오브젝트가 설정됩니다.&lt;/li&gt;
  &lt;li&gt;error.message 로 작성한 메시지 사용&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;뒤에서 new 연산자를 다루기 때문에 그때 new 연산자에 대해 공부하고 위 예를 다시 보시면 되겠습니다.&lt;br /&gt;
일단 간단하게 말씀드리면 new 연산자는 새로운 Object 를 설정합니다.&lt;br /&gt;
그 Object 이름이 Error 입니다.&lt;br /&gt;
Error 은 자바스크립트에서 제공하는 오브젝트 이름입니다.&lt;br /&gt;
Error 의 인자값, 파라미터로 “예외 발생시킴”을 전달하면 Error 오브젝트의 message 에 해당 파라미터 내용이 설정됩니다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 13:28:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner2.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
  </channel>
</rss>
