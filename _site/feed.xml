<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 22 Nov 2020 11:22:09 +0900</pubDate>
    <lastBuildDate>Sun, 22 Nov 2020 11:22:09 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>48. 프리미티브 값, 프리미티브 타입, 프리미티브 값 구하기</title>
        <description>&lt;h2 id=&quot;48-프리미티브-값-프리미티브-타입-프리미티브-값-구하기&quot;&gt;48. 프리미티브 값, 프리미티브 타입, 프리미티브 값 구하기&lt;/h2&gt;

&lt;h2 id=&quot;프리미티브-값&quot;&gt;프리미티브 값&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Primitive Value&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;언어에 있어 가장 낮은 단계의 값&lt;/li&gt;
      &lt;li&gt;var book = “책”;&lt;br /&gt;
“책”은 더 이상 분해, 전개 불가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;use strict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
    1. 오른쪽 local의 book을 보면
    - 값으로 단지 &quot;책&quot;만 갖고 있습니다.
    
    2. point 도 마찬가지입니다.
    
    3. 이것이 프리미티브 값입니다.
    */&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
    4. obj 를 펼치면 다른 프로퍼티들이 있습니다.
    - obj 는 프리미티브가 아닙니다.
    */&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*
    5. 인스턴스의 프리미티브 값 형태
    */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image192.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image193.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;book 변수를 더 이상 전개할 수 없습니다.&lt;br /&gt;
point 변수도 마찬가지로 전개할 수 없습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image194.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같은 형태는 프리미티브 값을 제공하지 않는 형태입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image195.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;인스턴스 또한 Object 와 비슷하게 프리미티브 값을 제공하지 않는 형태입니다.&lt;br /&gt;
하지만 위에 보시면 뭔가 시멘틱 적으로 프리미티브 값이라고 암시하는 것이 있습니다.&lt;br /&gt;
&lt;strong&gt;[[primitiveValue]] : 456&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;new Number(456) 에서 456 이라는 primitive 값이 파라미터로 들어갑니다.&lt;br /&gt;
그럼 { key : value } 형태로 저장을 해야되는데, key 가 없으므로 자바스크립트 엔진에서 자동으로 key 를 생성한 것입니다.&lt;br /&gt;
[[primitiveValue]] 대괄호 두개가 바로 자바스크립트 엔진이 만들었다는 뜻입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;프리미티브 타입&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Number, String, Boolean : 인스턴스 생성 가능&lt;/li&gt;
      &lt;li&gt;Null, Undefined : 인스턴스 생성 불가&lt;/li&gt;
      &lt;li&gt;Object 는 프리미티브 값을 제공하지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;인스턴스의-프리미티브-값&quot;&gt;인스턴스의 프리미티브 값&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;var obj = new Number(123);&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;인스턴스를 생성하면&lt;/li&gt;
      &lt;li&gt;파라미터 값을 인스턴스의 프리미티브 값으로 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;프리미티브 값을 갖는 오브젝트 [[]]&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Boolean, Date, Number, String&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [[primitiveValue]] : 123&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 323&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;new Number(123) 로 인스턴스를 생성하여 obj에 할당한 후 obj에 값을 더하면 값이 더해집니다.&lt;/li&gt;
          &lt;li&gt;obj가 인스턴스이므로 값을 더할 수 없는데 값이 더해지는 것은&lt;/li&gt;
          &lt;li&gt;123을 인스턴스의 프리미티브 값으로 설정하기 때문입니다.&lt;/li&gt;
          &lt;li&gt;프리미티브 값을 갖는 인스턴스에 값을 더하면 인스턴스의 프리미티브 값에 값을 더합니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;valueof&quot;&gt;valueOf()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;구분&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;data&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Number 인스턴스, 숫자&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;파라미터&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;사용하지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;반환&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;프리미티브 값&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Number 인스턴스의 프리미티브 [[]] 값 반환&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 123&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;obj의 프리미티브 값을 반환합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 22 Nov 2020 11:00:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/22/beginner4.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/22/beginner4.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>47. Number 인스턴스 생성, 인스턴스 형태</title>
        <description>&lt;h2 id=&quot;47-number-인스턴스-생성-인스턴스-형태&quot;&gt;47. Number 인스턴스 생성, 인스턴스 형태&lt;/h2&gt;

&lt;h2 id=&quot;number-인스턴스-생성&quot;&gt;Number 인스턴스 생성&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;new Number()&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;구분&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;파라미터&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;값opt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;반환&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;생성한 Number 인스턴스&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 Number 오브젝트로&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;새로운 Number 인스턴스를 생성&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 123&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;빌트인 Number 오브젝트로 인스턴스를 생성하여 반환&lt;/li&gt;
          &lt;li&gt;파라미터 값이 문자열이면 숫자로 변환하여&lt;/li&gt;
          &lt;li&gt;생성한 인스턴스에 파라미터 값을 설정&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Number(“123”) 이면 문자열 “123”을 숫자 123으로 변환합니다.&lt;br /&gt;
거기에 new 연산자를 붙여 인스턴스를 생성한 것입니다.&lt;br /&gt;
이렇게 생성된 인스턴스에 &lt;code class=&quot;highlighter-rouge&quot;&gt;valueOf()&lt;/code&gt; 메서드를 실행하면 할당된 값을 반환합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;인스턴스 형태&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;use strict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;cm&quot;&gt;/*
    1. 새로 생성한 Number 인스턴스가 obj에 할당됩니다.
    
    2. 오른쪽 local 의 obj를 펼칩니다.
    1) __proto__가 있으며
    2) [[primitiveValue]]: 123이 있습니다.
    */&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;proto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__proto__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
    3. __proto__ 를 펼칩니다.
    - 표시된 것은 빌트인 Number 오브젝트의 함수입니다.

    4. Number 인스턴스를 생성하는 목적은
    - 표시된 함수를 사용하기 위해서입니다.

    5. 인스턴스를 생성하지 않고 다른 방법으로
    - 함수를 사용할 수도 있습니다.
    */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image187.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image188.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;obj 에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;__proto__&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;[[primitiveValue]]&lt;/code&gt;말고는 없습니다.&lt;br /&gt;
나머지 빌트인 Number 오브젝트 관련된 것들은 하나도 없습니다.
바로 이것입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;인스턴스를 만들면 빌트인 Number 오브젝트에 있는 프로퍼티가 하나도 obj 로 넘어오지 않습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;단, 인스턴스에 설정되는 것이 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image189.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;obj 의 &lt;code class=&quot;highlighter-rouge&quot;&gt;__proto__&lt;/code&gt;를 전개해보면 7개의 함수가 들어있는 것을 볼 수 있습니다.&lt;br /&gt;
이 함수들은 어디서왔을까요?&lt;br /&gt;
빌트인 Number 오브젝트?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image190.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아닙니다. 없습니다.&lt;br /&gt;
그럼 어디서 넘어온 것이냐.&lt;br /&gt;
바로 &lt;strong&gt;Number.prototype&lt;/strong&gt;에 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image191.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Number.prototype&lt;/strong&gt;이랑 &lt;strong&gt;obj.__proto__&lt;/strong&gt;에 있는 거랑 똑같습니다.&lt;br /&gt;
바로 이겁니다.&lt;br /&gt;
인스턴스를 만드는 기준은 &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt; 이라는 오브젝트를 기준으로 해서 여기에 연결되어있는 것만 가져옵니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;과 같은 레벨에있는 isNaN 같은 것들은 인스턴스에 가져오지 않습니다.&lt;/p&gt;

&lt;p&gt;빌트인 Number 오브젝트를 복사해서 주긴 주지만, &lt;strong&gt;prototype에 있는 것만 주는 겁니다.&lt;/strong&gt;&lt;br /&gt;
그럼 나머지는 어떻게하냐.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;그건 원본을 통해서 보라는 겁니다.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이것이 바로 인스턴스입니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;정리&lt;/strong&gt;&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;인스턴스를 만드는 기준은 prototype 입니다. prototype 에 연결되어있는 함수들을 복사해서 주는 것입니다.&lt;/li&gt;
    &lt;li&gt;prototype 이 아닌 다른 것들은 복사를 안해줍니다. 
이것이 인스턴스를 만드는 기준입니다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;__proto__&lt;/code&gt; 이 또한 오브젝트입니다.&lt;br /&gt;
해당 &lt;code class=&quot;highlighter-rouge&quot;&gt;__proto__&lt;/code&gt; 안에도 { key: value } 프로퍼티 형태로 프로퍼티가 담겨져있기 때문입니다.&lt;br /&gt;
즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt; 안의 내용(프로퍼티)들을 인스턴스의 &lt;code class=&quot;highlighter-rouge&quot;&gt;__proto__&lt;/code&gt; 오브젝트로 그대로 주겠다는 겁니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Nov 2020 10:37:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/22/beginner3.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/22/beginner3.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>46. 인스턴스 생성 방법/목적, new 연산자</title>
        <description>&lt;h2 id=&quot;46-인스턴스-생성-방법목적-new-연산자&quot;&gt;46. 인스턴스 생성 방법/목적, new 연산자&lt;/h2&gt;

&lt;h2 id=&quot;new-연산자&quot;&gt;new 연산자&lt;/h2&gt;

&lt;p&gt;연산자이므로 빌트인 Number 오브젝트에 속하진 않지만 다음장의 Number 인스턴스 생성과 연관이 되므로 여기에서 다룹니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;구분&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;constructor&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;생성자&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;파라미터&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;값opt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;반환&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;생성한 인스턴스&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오브젝트로 인스턴스를 생성하여 반환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;원본을 복사하는 개념&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;new 연산자를 사용하면 인스턴스&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;
            &lt;p&gt;빌트인 Number 오브젝트로 인스턴스를 생성하여 반환&lt;br /&gt;
원본인 빌트인 Number 오브젝트를 복사하여 obj 에 붙여넣는 느낌&lt;br /&gt;
이 복사한 복사본을 인스턴스라고 부릅니다.&lt;br /&gt;
&lt;strong&gt;Number() 이렇게 함수 호출한 것은 데이터 타입을 Number로 변환해주는 기능이었습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;new 연산자를 앞에 붙여서 Number() 함수를 호출하면 이때는 constructor 라는 생성자가 호출됩니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;이때는 Number 함수라 하지 않고 생성자 함수라 합니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;대문자 Object는 { key : value } 형태의 프로퍼티입니다. 이 프로퍼티의 집합이 대문자 Object&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;하지만 여기서의 소문자 object는 인스턴스입니다. 전혀 성격이 다릅니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;그래서 소문자 object와 대문자 Object는 반드시 구분해야 합니다.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;생성한 인스턴스 타입은 object&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;코딩 관례로 첫 문자를 대문자로 작성&lt;br /&gt;
첫문자가 ‘N’umber 대문자이면 아 이건 인스턴스를 만들어 사용하겠다는 의도가 있구나.라고 알 수 있습니다.&lt;br /&gt;
단지 첫 문자를 대문자로 썼을뿐인데 이런 내용이 내포되어있는 것입니다.(시멘틱)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스 생성 목적&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;인스턴스마다 값을 갖기 위한 것&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oneObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oneObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 123&lt;/span&gt;
        
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;twoObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;twoObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 456&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;파라미터로 전달받은 값들을 어딘가 저장하긴 해야됩니다.&lt;br /&gt;
  그 저장하는 곳이 바로 인스턴스입니다.&lt;br /&gt;
  위 코드를 보시면 oneObj 와 twoObj 는 다 똑같습니다.&lt;br /&gt;
  값만 다를 뿐입니다.&lt;br /&gt;
  이것이 바로 인스턴스를 생성하는 목적입니다.&lt;/p&gt;

        &lt;p&gt;값이 항상 다른 것은 아닙니다.&lt;br /&gt;
  값이 같을 수도 있고 파라미터 값이 아예 없을 수도 있습니다.&lt;br /&gt;
  단지 값이 다를 경우를 대비해 인스턴스라는 개념이 있는 것입니다.&lt;br /&gt;
  &lt;strong&gt;이것이 바로 인스턴스를 만드는 목적입니다.&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 22 Nov 2020 09:44:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/22/beginner2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/22/beginner2.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>45. Number 타입으로 변환, Number 상수</title>
        <description>&lt;h2 id=&quot;45-number-타입으로-변환-number-상수&quot;&gt;45. Number 타입으로 변환, Number 상수&lt;/h2&gt;

&lt;h2 id=&quot;number&quot;&gt;Number()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;구분&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;파라미터&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;변환할 값opt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;반환&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;변환한 값&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;파라미터 값을 Number 타입으로 변환&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터 값이 String 타입이라도 값이 숫자이면 변환 가능&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 623&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ABC&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NaN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;“123”이 String 타입이지만 값이 숫자이므로 숫자로 변환합니다.&lt;/li&gt;
      &lt;li&gt;Number 타입이 되므로 500을 더하면 값이 연결되지 않고(123500) 더해집니다.(623)&lt;/li&gt;
      &lt;li&gt;Number 타입으로 변환할 수 없으면 NaN 반환&lt;br /&gt;
여기서 두 가지 관점이 있습니다.&lt;br /&gt;
변환을 했는데 그 값이 NaN 인지, 아니면 변환을 하려고 했는데 파라미터 값이 NaN 이라는 건지..&lt;br /&gt;
여기선 후자입니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;숫자로 변환할 수 있으면 변환&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 20&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NaN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;16진수를 10진수로 변환 (0x 는 16진수를 뜻합니다. 0x14 =&amp;gt; 1x16 + 4 = 20)&lt;/li&gt;
      &lt;li&gt;true 는 1로, false 는 0으로 변환됩니다.&lt;/li&gt;
      &lt;li&gt;null 은 0으로 변환&lt;/li&gt;
      &lt;li&gt;undefined 는 NaN 로 변환&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;파라미터 값을 작성하지 않으면 0을 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;number-상수&quot;&gt;Number 상수&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;상수 이름&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;값&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Number.MAX_VALUE&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.7976931348623157e+308 (1.7976931348623157 * 10(308승))&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Number.MIN_VALUE&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5e-324 (5 * 10(-324승))&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Number.NaN&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Not-a-Number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Number.POSITIVE_INFINITY&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Infinity&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Number.NEGATIVE_INFINITY&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;-Infinity&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;상수는 값을 변경, 삭제할 수 없음&lt;/li&gt;
  &lt;li&gt;영문 대문자 사용이 관례&lt;/li&gt;
  &lt;li&gt;Number.MAX_VALUE 형태로 값 사용&lt;br /&gt;
상수는 이렇게 빌트인 오브젝트 Number 를 바로 작성해서 사용합니다.&lt;br /&gt;
Number.~~&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 22 Nov 2020 08:29:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/22/beginner.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/22/beginner.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>44. Number 오브젝트 개요, 프로퍼티 리스트</title>
        <description>&lt;h2 id=&quot;44-number-오브젝트-개요-프로퍼티-리스트&quot;&gt;44. Number 오브젝트 개요, 프로퍼티 리스트&lt;/h2&gt;

&lt;h2 id=&quot;number-오브젝트&quot;&gt;Number 오브젝트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;숫자(123) 처리를 위한 오브젝트&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;즉, Number 오브젝트에&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;숫자 처리를 위한&lt;/li&gt;
      &lt;li&gt;함수와 프로퍼티가 포함되어 있으며&lt;/li&gt;
      &lt;li&gt;함수를 호출하여 숫자 처리를 하게 됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;빌트인-오브젝트-number-의-프로퍼티-리스트&quot;&gt;빌트인 오브젝트 Number 의 프로퍼티 리스트&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;이름&lt;/th&gt;
      &lt;th&gt;개요&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;new Number()&lt;/td&gt;
      &lt;td&gt;인스턴스 생성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Number 함수&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Number()&lt;/td&gt;
      &lt;td&gt;숫자값으로 변환하여 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Number.prototype&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;constructor&lt;/td&gt;
      &lt;td&gt;생성자&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toString()&lt;/td&gt;
      &lt;td&gt;숫자 값을 문자열로 변환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toLocaleString()&lt;/td&gt;
      &lt;td&gt;숫자 값을 지역화 문자로 변환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;valueOf()&lt;/td&gt;
      &lt;td&gt;프리미티브(원시) 값 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toExponential()&lt;/td&gt;
      &lt;td&gt;지수 표기로 변환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toFixed()&lt;/td&gt;
      &lt;td&gt;고정 소숫점 표기로 변환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;toPrecision()&lt;/td&gt;
      &lt;td&gt;고정 소숫점 또는 지수 표기로 변환&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;프리미티브(원시) 값 : 더 이상 분해할 수 없는, 더 이상 전개할 수 없는 값입니다.&lt;br /&gt;
여기서 프리미티브 값은 인스턴스에 설정된 값입니다.&lt;br /&gt;
프리미티브 값을 이해하려면 우선 &lt;strong&gt;인스턴스&lt;/strong&gt;에 대해 이해할 필요가 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;지수표기 : 5e + 123 이런식의 표기법을 말합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;위에 &lt;strong&gt;변환&lt;/strong&gt;이라고 쓰여있는 함수를 보면 맨 앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;to&lt;/code&gt;로 시작합니다.&lt;br /&gt;
&lt;strong&gt;빌트인 Number 오브젝트에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;to&lt;/code&gt;로 시작하는 함수는 변환을 위한 함수라는 것을 알 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 23:57:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner11.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner11.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>43. 빌트인 오브젝트 유형, 빌트인 오브젝트 형태</title>
        <description>&lt;h2 id=&quot;43-빌트인-오브젝트-유형-빌트인-오브젝트-형태&quot;&gt;43. 빌트인 오브젝트 유형, 빌트인 오브젝트 형태&lt;/h2&gt;

&lt;h2 id=&quot;빌트인-오브젝트&quot;&gt;빌트인 오브젝트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Number 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;123과 같은 숫자, 상수, 지수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;String 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;“abc”와 같은 문자열, 분리, 연결&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Boolean 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;true, false&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Object 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;{ key: value } 형태&lt;/li&gt;
      &lt;li&gt;프로퍼티를 처리하기 위한 오브젝트 (for ~ in 문으로 처리하는 것처럼)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Array 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;[1, 2, “A”, “가나다”] 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Function 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;function abc () {} 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Math 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;abs(), round() 등의 수학 계산&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Date 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;연월일, 시분초&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JSON 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;[{ “name” : “value” }] 형태&lt;/li&gt;
      &lt;li&gt;서버와 데이터 송수신에 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;RegExp 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;^, $와 같은 정규 표현식&lt;/li&gt;
      &lt;li&gt;본 강좌에서 다루지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;글로벌(Global) 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소스 파일 전체에서 하나만 존재 (다른 오브젝트처럼 여러개 또는 만들어야되는 것이 아니고, 이미 존재하고 유일합니다.)&lt;/li&gt;
      &lt;li&gt;모든 코드에서 공유, 접근 가능&lt;/li&gt;
      &lt;li&gt;전역 객체라고도 하며, 뉘앙스에 차이 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 22:33:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner10.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner10.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>42. 빌트인(Built-in), 빌트인 개요, 빌트인 분류</title>
        <description>&lt;h2 id=&quot;42-빌트인built-in-빌트인-개요-빌트인-분류&quot;&gt;42. 빌트인(Built-in), 빌트인 개요, 빌트인 분류&lt;/h2&gt;

&lt;h2 id=&quot;빌트인-안에-만들어져있는&quot;&gt;빌트인 (~~안에 만들어져있는)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Built-in 이란?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;값 타입, 연산자, 오브젝트(Object)를&lt;/li&gt;
      &lt;li&gt;사전에 만들어 놓은 것&lt;/li&gt;
      &lt;li&gt;JS 코드를 처리하는 영역에&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;장점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;사전 처리를 하지 않고 즉시 사용&lt;/li&gt;
      &lt;li&gt;자바스크립트 특징&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;빌트인이란 값 타입, 연산자 오브젝트를 JS 코드를 처리하는 영역에 사전에 만들어 놓은 것입니다.&lt;br /&gt;
사전 처리를 하지 않고 즉시 사용이 가능합니다.&lt;br /&gt;
사전 처리를 해야 사용할 수 있는 것도 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 값 타입&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Undefined, Null, Boolean, Number, String, Object&lt;/li&gt;
      &lt;li&gt;나머지는 typeof 연산자로 평가하면 각각에 해당하는 데이터 타입이 반환되지만,&lt;br /&gt;
Null 과 Object 는 Object 가 반환됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 연산자(Operator)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;+, -, *, /, %, ++, –, new 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;빌트인 오브젝트: 다음 페이지에서 다룸&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;빌트인-오브젝트-형태&quot;&gt;빌트인 오브젝트 형태&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;빌트인 Number 오브젝트와 같이 ES5에는 약 10 몇개의 빌트인 오브젝트가 있습니다.&lt;br /&gt;
Number, String 등등…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 Number 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;123과 같은 숫자, 상수, 지수를&lt;/li&gt;
      &lt;li&gt;처리하는 오브젝트&lt;/li&gt;
      &lt;li&gt;여기서 오브젝트는 소문자 object&lt;br /&gt;
지금까지 다뤘던 대문자 Object 는 &lt;strong&gt;{key(name) : value}&lt;/strong&gt; 형태로 데이터를 저장했습니다.&lt;br /&gt;
그런데 &lt;strong&gt;빌트인 Number 오브젝트는 이미 {key(name) : value} 형태로 만들어져 있는 겁니다.&lt;/strong&gt;&lt;br /&gt;
그리고 대문자 Object 가 {key(name) : value} 로 데이터를 저장하는 것이 중점이라면, &lt;strong&gt;소문자 object 는 데이터를 처리하는 데 중점을 둡니다.&lt;/strong&gt;&lt;br /&gt;
따라서 소문자 object 에는 함수가 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;빌트인 Number 오브젝트 형태&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;개발자 도구 열기 (Ctrl + Shift + I)&lt;/li&gt;
  &lt;li&gt;브라우저 새로고침 실행 (F5)&lt;/li&gt;
  &lt;li&gt;debugger 위치에서 실행 멈춤&lt;/li&gt;
  &lt;li&gt;debugger 종료 (F8)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;use strict&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*
    1. 빌트인 Number 오브젝트를 obj에 할당합니다.
    - 따라서 obj 는 빌트인 Number 오브젝트가 됩니다.
    
    2. 오른쪽 Local 의 obj 를 펼칩니다.
*/&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*
    3. MAX_VALUE, MIN_VALUE, NaN, Length 등이 있습니다.
    1) MIN_VALUE: 5e-324 에서
       MIN_VALUE 가 프로퍼티 이름이고 5e-324가 프로퍼티 값입니다.
    2) Length: 1에서  
       Length 가 프로퍼티 이름이고 1이 프로퍼티 값입니다.
    
    4. isNaN() 가 있으며 ()는 함수를 나타냅니다.
       isNaN() 이 함수 이름이고, 프로퍼티 값은 function () {} 입니다.
*/&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;debugger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//--------------------------------&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*
    1. 빌트인 Number 오브젝트는
    - Number 처리를 위한 프로퍼티의 집합입니다.
    - 즉, Number 처리를 위한 오브젝트입니다.

    2. JS 에서 Number 처리를 위한 프로퍼티를
    - 사전에 만들어 제공하므로
    - 즉, built-in 으로 제공하므로
    - Number.length 로 1을 구할 수 있으며
    - Number.isNaN() 으로 함수를 호출할 수 있습니다.
*/&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Number.length:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Number.length: 1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Number.isNaN(123):&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isNaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Number.isNaN(123): false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image185.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image186.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트의 모든 구조는 전부 다 위와 같이 &lt;strong&gt;{ key(name) : value }&lt;/strong&gt; 형태를 갖습니다.
&lt;strong&gt;자바스크립트의 기본 구조는 이런 프로퍼티입니다.&lt;/strong&gt;&lt;br /&gt;
다수의 프로퍼티 집합이 Number, String 과 같은 &lt;strong&gt;빌트인 오브젝트&lt;/strong&gt;입니다.&lt;/p&gt;

&lt;h2 id=&quot;그럼-이러한-빌트인-오브젝트는-왜-필요할까&quot;&gt;그럼 이러한 빌트인 오브젝트는 왜 필요할까?&lt;/h2&gt;

&lt;p&gt;Number 오브젝트는 숫자 처리를 위한 프로퍼티의 집합입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;isNaN() : NaN인지 아닌지 판단하는 함수입니다.&lt;/li&gt;
  &lt;li&gt;isInteger()&lt;/li&gt;
  &lt;li&gt;isSafeInteger()&lt;/li&gt;
  &lt;li&gt;isFinite
…&lt;br /&gt;
…&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;위와 같이 Number 빌트인 오브젝트는 Number 처리를 위한 것들을 사전에 미리 만들어 두었으므로 &lt;strong&gt;개발자들은 이를 가져다 사용하기만하면 된다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 22:04:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner9.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner9.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>41. Object 프로퍼티 열거, 프로퍼티 값 추출, for in 문</title>
        <description>&lt;h2 id=&quot;41-object-프로퍼티-열거-프로퍼티-값-추출-for-in-문&quot;&gt;41. Object 프로퍼티 열거, 프로퍼티 값 추출, for in 문&lt;/h2&gt;

&lt;h2 id=&quot;프로퍼티-값-추출&quot;&gt;프로퍼티 값 추출&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오브젝트에서 프로퍼티 값 추출&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;var obj = {book: “책”}&lt;/li&gt;
      &lt;li&gt;var value = obj.book;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;obj 오브젝트에 프로퍼티 이름인&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;book 이 있으면 프로퍼티 값 반환&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;book 이 없으면 undefined 반환&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 책&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sports&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;obj.book&lt;br /&gt;
obj 오브젝트에 프로퍼티 이름으로 book이 있으므로 프로퍼티 값인 “책”이 반환됩니다.&lt;/li&gt;
          &lt;li&gt;obj[“sports”]&lt;br /&gt;
obj 오브젝트에 프로퍼티 이름으로 sports 가 없으므로 undefined 가 반환됩니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;for--in&quot;&gt;for ~ in&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;오브젝트에서 프로퍼티를 열거&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;soccer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;축구&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;baseball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;야구&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// soccer&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 축구&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// baseball&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 야구&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;형태 :&lt;br /&gt;
for (변수 in 오브젝트) 문장;&lt;br /&gt;
for (표현식 in 오브젝트) 문장;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;for (var item in sports) {코드}&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로퍼티 이름이 item 에 설정&lt;/li&gt;
      &lt;li&gt;sports[item]으로 프로퍼티 값을 구함&lt;/li&gt;
      &lt;li&gt;프로퍼티를 작성한 순서대로 읽혀진다는 것을 보장하지 않음&lt;br /&gt;
&lt;strong&gt;그런데 ES3에선, 프로퍼티를 작성한 순서.. 위에 작성한 순서대로 읽혀진다는 것을 보장하지 않았습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;ES5 부턴 작성된 순서대로 읽혀집니다.&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 16:55:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner8.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner8.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>40. 오브젝트(Object) 프로퍼티 개요, 프로퍼티 추가, 변경</title>
        <description>&lt;h2 id=&quot;40-오브젝트object&quot;&gt;40. 오브젝트(Object)&lt;/h2&gt;

&lt;h2 id=&quot;프로퍼티-property&quot;&gt;프로퍼티 (property)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;property&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;{ name : value } 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;name 에 프로퍼티 이름/키를 작성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;따옴표 작성 생략&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;프로퍼티 name(key)에서 key는 유일하지만 name은 중복될 수 있다는 뉘앙스가 풍깁니다.&lt;/li&gt;
  &lt;li&gt;ES3 에서는 같은 이름이 등록되기도 합니다.&lt;br /&gt;
즉, 위 코드로치면 title이 두 개가 있는 것입니다.&lt;br /&gt;
&lt;strong&gt;그래서 그때엔 title이 book 오브젝트에 존재하는지 체크하는 코드로 먼저 체크한 후 등록여부를 결정했습니다.&lt;/strong&gt;&lt;br /&gt;
ES5에서는 2중으로 등록되진 않구요, 프로퍼티 이름이 이미 있다면 &lt;strong&gt;값이 대체되는 형태가 되었습니다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;ES5에서는 key와 name을 구분하지 않아도 되지만 (프로퍼티 네임, 프로퍼티 키 아무렇게나 불러도 되지만)&lt;br /&gt;
ES6에서는 구분해야 합니다. (값의 지칭 범위가 좀 다릅니다.)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;{title: “책”}에서 “title”처럼 따옴표를 사용해야 합니다.&lt;br /&gt;
&lt;strong&gt;즉, title은 String 타입입니다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;그런데 따옴표를 작성하지 않는 것은 따옴표를 작성하지 않아도 문자열로 간주하기 때문입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;value 에 JS 에서 지원하는 타입 작성&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;{ a: 123, b: “ABC”, c: true, d: {} }&lt;/li&gt;
      &lt;li&gt;{ book: function(){코드} }&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ten&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;bonus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;promotion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;오브젝트는 위와 같이 value 에 오브젝트를 작성하여 확장할 수 있는 것이 특징입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오브젝트(Object)를 객체라고 부르지만&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;뉘앙스가 다르며, 강좌에서는 오브젝트로 표기&lt;/li&gt;
      &lt;li&gt;오브젝트와 객체 구분이 필요할 때, 별도 표기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;여기서 말하는 오브젝트는 프로퍼티라는 실체가 있습니다. {name: value}&lt;br /&gt;
그런데 책과 문서에 기록되어있는 것은 주변 상황에 따라서 실체가 없이 개념적인 이야기가 될 수도 있습니다.&lt;br /&gt;
제가 오브젝트라고 표기하는 이유는 실체를 가리키기 위함입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;프로퍼티-추가-변경&quot;&gt;프로퍼티 추가, 변경&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오브젝트에 프로퍼티 추가, 변경&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;var obj = {};&lt;/li&gt;
      &lt;li&gt;obj.abc = 123;&lt;/li&gt;
      &lt;li&gt;obj 오브젝트에 프로퍼티 이름으로&lt;br /&gt;
abc가 없으면 abc: 123이 추가되고
abc가 있으면 프로퍼티 값이 123으로 변경됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;작성 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;점(.)과 프로퍼티 이름 사용&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// {title: &quot;JS책&quot;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;book.title 처럼 점(.)에 이어서 프로퍼티 이름을 작성합니다.&lt;/li&gt;
          &lt;li&gt;title을 “title” 처럼 따옴표를 사용하지 않습니다.&lt;/li&gt;
          &lt;li&gt;= 오른쪽에 프로퍼티 값을 작성합니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;대괄호 사용: obj[“abc”]&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// {title: &quot;JS책&quot;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;book[“title”] 처럼 대괄호 [] 안에 문자열로 프로퍼티 이름을 작성합니다.&lt;/li&gt;
          &lt;li&gt;= 오른쪽에 프로퍼티 값을 작성합니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;abc 변수 이름 작성: obj[abc]&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;varName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;varName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;HTML책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// {title: &quot;HTML책&quot;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;프로퍼티 이름을 변수에 작성하고 이를 사용&lt;/li&gt;
          &lt;li&gt;title 프로퍼티 이름이 있으므로 프로퍼티 값이 변경됩니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 16:34:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner7.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner7.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>39. 주석 작성 목적, 주석 작성 사례</title>
        <description>&lt;h2 id=&quot;39-주석-작성-목적-주석-작성-사례&quot;&gt;39. 주석 작성 목적, 주석 작성 사례&lt;/h2&gt;

&lt;h2 id=&quot;주석-작성의-궁극적인-목적&quot;&gt;주석 작성의 궁극적인 목적&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;코드가 목적을 달성하기 위한&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기능, 시나리오 등을 &lt;strong&gt;생각하고 정리하는 것&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;이것을 문법에 맞추어 작성한 것이 코드&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;코드를 작성하기 전에&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;우선 먼저 정리한 생각을 주석으로 작성&lt;/li&gt;
      &lt;li&gt;어렵지만 처음 배울 때부터 습관화&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;주석 작성 기준&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;코드의 목적, 결과가 미치는 영향을 작성&lt;/li&gt;
      &lt;li&gt;다른 사람이 알 수 있도록 자세하게 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;주석-사례&quot;&gt;주석 사례&lt;/h2&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
* @function calculateAmount
* 1. 파라미터로 받은 수량에 단가를 곱해
*    금액을 계산하고 결과 값을 반환한다.
* 2. 수량과 단가의 0 체크는
*    함수를 호출하기 전에 하므로 체크하지 않는다.
* @param {Number} quantity, 수량
* @param {Number} price, 단가
* @return {Number} 계산 결과
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;calculateAmount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 주석을 자세하게 작성하기 위해&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 함수 코드를 분리하는 경우도 있습니다.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 주석 형태는 자바스크립트 문법상으로 정리되어있는 주석은 아니고, 개발자들이 관례적으로 사용하다가 지금은 일반적인 방법이 된 사례입니다.&lt;br /&gt;
&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/**&lt;/code&gt; 이 형태로 주석을 작성하면 자동으로 웹 문서를 만들어주는 툴이 있었습니다.&lt;/strong&gt;&lt;br /&gt;
그것에 맞추다보니 일반화가 된 것입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;도 그 툴에서 사용하는 기준이었습니다.&lt;/p&gt;

&lt;p&gt;위의 예시처럼 시나리오를 작성합니다.&lt;br /&gt;
그리고 처리안한 부분이 있다면 그 이유도 명확하게 작성합니다.&lt;br /&gt;
그래야 다른 개발자가 보고 오해를 안합니다.&lt;/p&gt;

&lt;p&gt;함수는 알아보기 쉽게 최소화시킵니다.&lt;br /&gt;
함수 코드가 너무 길면 함수명이 구체적이지 않게 됩니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Nov 2020 16:07:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/21/beginner6.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/21/beginner6.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
  </channel>
</rss>
