<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 07 Sep 2020 14:10:34 +0900</pubDate>
    <lastBuildDate>Mon, 07 Sep 2020 14:10:34 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>window 압축파일 Mac에서 권한 없다고 뜰때</title>
        <description>&lt;h2 id=&quot;window-압축파일-mac에서-권한-없다고-뜰때&quot;&gt;window 압축파일 Mac에서 권한 없다고 뜰때&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://norux.me/60&quot; target=&quot;_blank&quot;&gt;참고자료1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kr.battle.net/support/ko/article/31223&quot; target=&quot;_blank&quot;&gt;참고자료2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 07 Sep 2020 13:59:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/07/issue.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/07/issue.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>5. study 공유 3</title>
        <description>&lt;h2 id=&quot;study-공유-3&quot;&gt;study 공유 3&lt;/h2&gt;

&lt;h3 id=&quot;애플페이지-분석결과&quot;&gt;애플페이지 분석결과&lt;/h3&gt;

&lt;p&gt;스크롤 인터렉션은 화려해보이지만 &lt;strong&gt;대단한 기술이 사용된 것이 아니다.&lt;/strong&gt;&lt;br /&gt;
다만 &lt;strong&gt;수치 계산만 엄청 많이 들어갈 뿐이다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;수치 계산이란 스크롤 위치마다 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 어디 위치에 그림을 그릴까?를 뜻한다.&lt;br /&gt;
이 계산만 좀 능숙하게 할 줄 알게된다면 스크롤에 따른 인터렉션은 정말 쉽다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hyungju-lee.github.io/hyungju-lee-interactions/scroll-interaction-2/index-javascript.html&quot; target=&quot;_blank&quot;&gt;직접 만든 예시 페이지&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;일단 분석결과 내용이다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;canvas&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 태그는 ‘도화지’ 역할을 하는 태그이다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 태그를 활용해 애니메이션 효과를 구현하는 방법은 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 태그에 연속적으로 반복해서 그림을 그려넣는 것이다.&lt;br /&gt;
모니터 화면과 똑같다고 보면 된다.&lt;br /&gt;
모니터 화면도 144hz, 60hz 같은 것이 있다.&lt;br /&gt;
1초에 이미지를 몇번 뿌려주느냐에 따라 모니터에 출력되는 화면의 동적 움직임이 훨씬 자연스럽게 보이거나 덜 자연스럽게 보이거나로 나뉜다.&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 태그도 마찬가지 원리이다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 태그에 반복적으로 수많은 그림들을 연속적으로 그려 사람 눈에 애니메이션처럼 보이도록 하는 것이다.
이를 ‘스크롤 위치’와 연동시키면 스크롤 인터렉션이 완성된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;requestAnimationFrame&lt;/p&gt;

    &lt;p&gt;해당 메서드는 1초에 60번 실행하는 것을 목표로 하고 있습니다.&lt;br /&gt;
그리고 애니메이션 구현에 가장 많이 쓰입니다.
즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 태그에 1초에 60번 이 메서드를 활용해 그림을 그릴 수 있다는 뜻입니다.
컴퓨터 성능에 따라 60번이 안될 수도 있지만 애니메이션을 구현하는 데 있어서 최적의 메서드입니다.&lt;/p&gt;

    &lt;p&gt;해당 메서드를 사용하면 정말 부드럽게 움직이는 애니메이션을 구현할 수 있습니다.&lt;br /&gt;
Mac에서 키보드 / 윈도우 마우스휠로 해도 부드럽게 움직입니다.&lt;/p&gt;

    &lt;p&gt;비교URL&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://hyungju-lee.github.io/static/img/interaction/ex02/apple-clone-v6/videotest/smoothscroll.html&quot; target=&quot;_blank&quot;&gt;requestAnimationFrame 활용&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://hyungju-lee.github.io/static/img/interaction/ex02/apple-clone-v6/videotest/smoothscroll-2.html&quot; target=&quot;_blank&quot;&gt;requestAnimationFrame 활용X&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;keyframe&lt;/p&gt;

    &lt;p&gt;우리가 CSS에서 사용하는 keyframe을 떠올리면 된다.&lt;br /&gt;
CSS keyframe을 사용할 때 구간별(0%, 50%, 70%, …)로 나눠서 각 구간에 어떤 속성값에 도달해야되는지 정의해준다.&lt;br /&gt;
스크롤 인터렉션도 마찬가지다.&lt;br /&gt;
keyframe 이란 키워드를 사용하는 것은 아니지만 스크롤 인터렉션도 해당 개념으로 구간별로 끊어서 애니메이션을 적용시켜준다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;canvas로-구현하면-성능이-좋은-이유&quot;&gt;canvas로 구현하면 성능이 좋은 이유&lt;/h3&gt;

&lt;p&gt;canvas에 그려지는 그림은 ‘객체’가 아니기 때문이다.&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Sep 2020 12:22:00 +0900</pubDate>
        <link>http://localhost:4000/js_interaction/2020/09/07/interaction.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_interaction/2020/09/07/interaction.html</guid>
        
        
        <category>js_interaction</category>
        
      </item>
    
      <item>
        <title>gulp 3점대 버전 이슈</title>
        <description>&lt;h2 id=&quot;gulp-3점대-버전-이슈&quot;&gt;gulp 3점대 버전 이슈&lt;/h2&gt;

&lt;p&gt;작업하다보면 gulp 3점대 버전으로 되어있는 프로젝트가 있습니다.&lt;br /&gt;
이러한 프로젝트는 우선 &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;engine&lt;/code&gt;부분을 확인합니다.&lt;br /&gt;
해당 프로젝트에서 엔진 버전을 몇으로해서 돌렸는지 명시를 해놨을 겁니다.&lt;/p&gt;

&lt;p&gt;노드로 gulp를 돌렸다면, 해당 노드버전을 확인하고 해당 노드버전으로 바꿔줍니다.&lt;br /&gt;
그리고 그 버전으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm i&lt;/code&gt; 명령어로 설치를 해줍니다.&lt;/p&gt;

&lt;p&gt;버전이 다르다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;phantomJS&lt;/code&gt; 에러가 발생할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;노드버전을 바꿔서 설치한 후에 실행하면 sass 오류가 생길 수 있습니다.&lt;br /&gt;
이는 버전마다 sass 컴파일 방식이 달라서 생기는 방법 같습니다.&lt;br /&gt;
이렇 땐 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm rebuild node-sass&lt;/code&gt; 명령어로 사스를 리빌드 해줘야됩니다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 04 Sep 2020 12:31:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/04/issue2.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/04/issue2.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>사파리 visibility 애니메이션 이슈</title>
        <description>&lt;h2 id=&quot;사파리-visibility-애니메이션-이슈&quot;&gt;사파리 visibility 애니메이션 이슈&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt; 속성으로 애니메이션 효과를 줄 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;display:none&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;display:block&lt;/code&gt;으로 바뀌는 요소에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt; 애니메이션 효과가 적용되지 않습니다.&lt;br /&gt;
그렇기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;visibility: hidden&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;visibility: visible&lt;/code&gt;로 애니메이션 효과를 구현할 때가 있습니다.&lt;/p&gt;

&lt;p&gt;그런데 이렇게 하면 다른 브라우저에선 괜찮은데 &lt;strong&gt;사파리에서 scroll이 되어야 하는 영역이 안되는 경우&lt;/strong&gt;가 있습니다.&lt;br /&gt;
처음 페이지를 그릴 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;visibility: hidden&lt;/code&gt; 이 적용되어있는 요소, 그리고 이 요소의 자식요소(상속됨)들의 영역을 &lt;strong&gt;전부 그리지 않는 것&lt;/strong&gt;같다는 것이 저의 추측입니다.&lt;br /&gt;
즉, scroll이 되어야 하는 영역엔 &lt;code class=&quot;highlighter-rouge&quot;&gt;visibility: visible&lt;/code&gt;을 주어 처음 페이지를 그릴 때 scroll이 되어야 하는 요소는 전체적으로 다 그리게끔 해줘야됩니다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;transform&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 왼쪽 요소에 visibility: hidden / visible, transform 을 활용한 애니메이션 효과가 적용되어 있다. --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;scroll&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 왼쪽 요소는 스크롤이 되어야하는 요소이다. 이 요소엔 visibility: visible 을 주어야된다. --&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 04 Sep 2020 12:26:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/04/issue.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/04/issue.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>git으로 파일변경 이력확인하기</title>
        <description>&lt;h2 id=&quot;git으로-파일변경-이력확인하기&quot;&gt;git으로 파일변경 이력확인하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://lovemewithoutall.github.io/it/git-file-change-history/&quot; target=&quot;_blank&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; file_path

git log &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--word-diff&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; file_path
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 03 Sep 2020 18:43:00 +0900</pubDate>
        <link>http://localhost:4000/git/2020/09/03/git3.html</link>
        <guid isPermaLink="true">http://localhost:4000/git/2020/09/03/git3.html</guid>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>크롬 개발자창 적용되는 CSS, JS 보기</title>
        <description>&lt;h2 id=&quot;크롬-개발자창-적용되는-css-js-보기&quot;&gt;크롬 개발자창 적용되는 CSS, JS 보기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;크롬 개발자창 연다.&lt;/li&gt;
  &lt;li&gt;source 탭&lt;/li&gt;
  &lt;li&gt;Ctrl+Shift+P&lt;/li&gt;
  &lt;li&gt;Show Coverage 선택&lt;/li&gt;
  &lt;li&gt;빨간(재생) 버튼 클릭&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 03 Sep 2020 18:41:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/03/issue3.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/03/issue3.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>gulp-sass-inline-svg (get-function)</title>
        <description>&lt;h2 id=&quot;gulp-sass-inline-svg-get-function&quot;&gt;gulp-sass-inline-svg (get-function)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/foundation/motion-ui/issues/99&quot; target=&quot;_blank&quot;&gt;참고url&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/modxcms/fred/commit/7d9601b98c91a9a142bc76e5d53bfd784ada9916&quot; target=&quot;_blank&quot;&gt;해결방법&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/module/image00.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/module/image01.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/module/image02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;해결방법&quot;&gt;해결방법&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/module/image03.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/module/image04.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/module/image05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Sep 2020 12:06:00 +0900</pubDate>
        <link>http://localhost:4000/node_module/2020/09/03/module2.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_module/2020/09/03/module2.html</guid>
        
        
        <category>node_module</category>
        
      </item>
    
      <item>
        <title>맥북과 아이폰 연결하기</title>
        <description>&lt;h2 id=&quot;맥북과-아이폰-연결하기&quot;&gt;맥북과 아이폰 연결하기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;아이폰과 맥북을 같은 와이파이에 연결합니다.&lt;/li&gt;
  &lt;li&gt;맥 사파리 -&amp;gt; 개발자용 -&amp;gt; 여기서 아이폰과 연결되어있는 사이트 클릭&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 03 Sep 2020 04:24:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/03/issue2.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/03/issue2.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>웹스톰 스니펫 코드 커스텀하기</title>
        <description>&lt;h2 id=&quot;웹스톰-스니펫-코드-커스텀하기&quot;&gt;웹스톰 스니펫 코드 커스텀하기&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;file&lt;/li&gt;
  &lt;li&gt;settings&lt;/li&gt;
  &lt;li&gt;live templates&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 03 Sep 2020 03:54:00 +0900</pubDate>
        <link>http://localhost:4000/issue/2020/09/03/issue.html</link>
        <guid isPermaLink="true">http://localhost:4000/issue/2020/09/03/issue.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
      <item>
        <title>sourcemaps - .map git conflict issue</title>
        <description>&lt;h2 id=&quot;sourcemaps---map-git-conflict-issue&quot;&gt;sourcemaps - .map git conflict issue&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gulpjs.com/docs/en/api/src#sourcemaps&quot; target=&quot;_blank&quot;&gt;소스맵관련 : .map 파일로 따로 내보낼건지 아니면 매핑을 내장할 것인지&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;소스맵 기능으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;.map&lt;/code&gt; 파일을 컴파일할 때, 서로 다른 개발자가 컴파일해서 git에 올릴 경우, conflict 가 발생하는 이슈가 있다.
이 이슈에 대해 한번 생각해보는 것이 좋을 것 같다.&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Sep 2020 03:51:00 +0900</pubDate>
        <link>http://localhost:4000/node_gulp/2020/09/03/gulp.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_gulp/2020/09/03/gulp.html</guid>
        
        
        <category>node_gulp</category>
        
      </item>
    
  </channel>
</rss>
