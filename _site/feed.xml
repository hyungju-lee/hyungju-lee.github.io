<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 11 Sep 2020 19:37:23 +0900</pubDate>
    <lastBuildDate>Fri, 11 Sep 2020 19:37:23 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>getter setter in ES6</title>
        <description>&lt;h2 id=&quot;getter-setter-in-es6&quot;&gt;getter setter in ES6&lt;/h2&gt;

&lt;p&gt;도대체 왜 &lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 쓸까?&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 언급한다면, 대부분 &lt;strong&gt;private&lt;/strong&gt; 개념이 따라오게 된다.&lt;br /&gt;
책이나 글에서 볼 수 있는 극단적인 예는 아래와 같다.&lt;br /&gt;
&lt;strong&gt;private&lt;/strong&gt; 변수를 지정한 후, 이 변수에 접근하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 이용한다.&lt;/p&gt;

&lt;p&gt;맞는 말이다.&lt;br /&gt;
하지만 이해하기 힘들 거라고 생각한다.&lt;/p&gt;

&lt;p&gt;다음 예제를 통해 확인해보자.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;name을 저장할 때는 정확한 값일 때 저장한다.&lt;/li&gt;
  &lt;li&gt;name을 가져올 때는 대문자로 된 이름을 얻을 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위 특징을 가지는 Person 클래스를 만들어보자.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;man&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// JOHN, 10&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;John Park&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// JOHN PARK, 20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이름이라는 변수는 실제 &lt;code class=&quot;highlighter-rouge&quot;&gt;_name&lt;/code&gt;이 된다.&lt;br /&gt;
코드를 보면 실제 데이터인 &lt;code class=&quot;highlighter-rouge&quot;&gt;_name&lt;/code&gt;에 직접 접근하지 않으면서, 정의된 오퍼레이션을 통해서만 접근하고 있다.&lt;/p&gt;

&lt;p&gt;또한, 이름을 얻을 때, 사용자는 단순히 이름을 얻을 뿐이다.&lt;br /&gt;
대문자로 가공하는 과정은 내부에서 일어날 뿐이다.&lt;br /&gt;
즉, 단순히 사용자는 이름을 얻고자 할뿐, 얻는 과정에 있는 내부적인 일은 신경쓰지 않는다.
&lt;strong&gt;이러한 원리가 캡슐화의 이점인 정보 은닉이 된다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;메서드로 접근하는 것처럼 보이지 않기 때문에 외관상에도 좋다.&lt;br /&gt;
이건 자바스크립트의 특징이기에, 아마 Java와 C++의 경우는 불가능할 것이다.&lt;br /&gt;
(사실상 this._name에 직접 접근할 수 있지만, 배제하자)&lt;/p&gt;

&lt;p&gt;조금 더 나아가, 다른 예제를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 통한 일관성 유지에 관한 예를 들어본다.&lt;br /&gt;
start, end, duration 3개의 변수가 있는 클래스가 존재한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start : 시작하는 시간&lt;/li&gt;
  &lt;li&gt;end : 끝나는 시간&lt;/li&gt;
  &lt;li&gt;duration : 지속되는 시간&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 쓰지 않고 변수에 직접 접근하는 예를 보자.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// { _start: 0, _end: 20, _duration: 20 }&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// { _start: 5, _end: 20, _duration: 15 }&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;start 변수의 값을 수정할 때, 사실상 duration 변수도 수정되어야하기 때문에 위와 같은 코드가 나올 것이다.&lt;br /&gt;
이 경우, 변수의 직접 접근을 통해 보호되지 못한다.&lt;br /&gt;
그 결과, 누구나 접근하여 변경할 수 있기에, start에 따른 duration 값이 맞지 않는 결과가 초래될 수 있다.&lt;br /&gt;
&lt;strong&gt;즉, 변수 관계에 있어서, 일관성을 깨뜨리게 된다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 사용한 예를 보자.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;setStart&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;getStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 통해 접근함으로써 변수를 보호할 수 있다.&lt;br /&gt;
또한, &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 통해 start와 duration을 설정함으로써, 위에서 발생한 일관성 문제를 해결할 수 있다.&lt;/p&gt;

&lt;p&gt;자바스크립트만의 &lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;를 사용해보자.&lt;br /&gt;
변수에 직접 접근하는 것처럼 보이지만 내부적으로는 그렇지 않다.&lt;br /&gt;
&lt;strong&gt;위 예시보다 일관성 유지에 맞는 코드 및 외관상으로도 보기 좋은 유연한 코드가 만들어진다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_duration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setter&lt;/code&gt;는 위의 예들처럼 특정 목적이 있는 경우 설정한다.&lt;br /&gt;
무조건적으로 쓴다면, 단순히 불필요한 코드가 늘어나는 것이다.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 18:19:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/09/11/javascript2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/09/11/javascript2.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>git 실행했던 명령어 취소하는 방법</title>
        <description>&lt;h2 id=&quot;git-실행했던-명령어-취소하는-방법&quot;&gt;git 실행했던 명령어 취소하는 방법&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git reflog&lt;/code&gt; 로 이전 명령어 로그를 확인한다.&lt;/li&gt;
  &lt;li&gt;돌아가고 싶은 시점으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard HEAD@{1}&lt;/code&gt; 명령어를 입력한다.&lt;br /&gt;
여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD@{1}&lt;/code&gt; 이 부분이 돌아가고 싶은 시점이다.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 18:17:00 +0900</pubDate>
        <link>http://localhost:4000/git/2020/09/11/git.html</link>
        <guid isPermaLink="true">http://localhost:4000/git/2020/09/11/git.html</guid>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>1.4.1 명세서</title>
        <description>&lt;h2 id=&quot;141-명세서&quot;&gt;1.4.1 명세서&lt;/h2&gt;

&lt;p&gt;여기서 소개하는 내용은 다음 세 가지 명세서와 관련이 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;HTML5 캔버스&lt;/li&gt;
  &lt;li&gt;스크립트 기반의 애니메이션을 위한 타이밍 컨트롤&lt;/li&gt;
  &lt;li&gt;HTML5 비디오 및 오디오&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;역사적인-이유로-거의-똑같은-두-개의-캔버스-명세서가-있다&quot;&gt;역사적인 이유로 거의 똑같은 두 개의 캔버스 명세서가 있다.&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;그 중 하나는 W3C에서 관리하며 (현재는 페이지가 없어진듯 하다.)&lt;/li&gt;
  &lt;li&gt;다른 하나는 WHATWG에서 관리하며 &lt;a href=&quot;https://html.spec.whatwg.org/multipage/canvas.html&quot; target=&quot;_blank&quot;&gt;링크&lt;/a&gt;에서 확인할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;애니메이션&quot;&gt;애니메이션&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;오랫동안 사람들은 웹 기반 애니메이션을 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;window.setInterval()&lt;/code&gt; 메서드나 &lt;code class=&quot;highlighter-rouge&quot;&gt;window.setTimeout()&lt;/code&gt; 메서드를 사용했다.&lt;/li&gt;
  &lt;li&gt;하지만 이런 메서드는 높은 성능이 필요한 애니메이션에 적합하지 않다.&lt;/li&gt;
  &lt;li&gt;이와 관련된 내용은 5장에서 소개할 예정이다.&lt;/li&gt;
  &lt;li&gt;따라서 이런 메서드 대신 스크립트 기반 애니메이션을 위한 타이밍 컨트롤에 정의된 &lt;code class=&quot;highlighter-rouge&quot;&gt;window.requestAnimationFrame()&lt;/code&gt;을 사용해야 한다.&lt;/li&gt;
  &lt;li&gt;이 명세서는 &lt;a href=&quot;https://www.w3.org/TR/animation-timing/&quot; target=&quot;_blank&quot;&gt;링크&lt;/a&gt;에서 확인할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;비디오-및-오디오&quot;&gt;비디오 및 오디오&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;마지막으로 이 책에서는 캔버스 기반 애플리케이션에 HTML5 비디오 및 오디오를 포함시키는 방법을 소개할 예정이다.&lt;/li&gt;
  &lt;li&gt;한 명세서에서 HTML5 비디오와 오디오를 같이 다루고 있으며 &lt;a href=&quot;https://html.spec.whatwg.org/multipage/media.html&quot; target=&quot;_blank&quot;&gt;링크&lt;/a&gt;에서 확인할 수 있다.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:38:00 +0900</pubDate>
        <link>http://localhost:4000/canvas/2020/09/11/canvas4.html</link>
        <guid isPermaLink="true">http://localhost:4000/canvas/2020/09/11/canvas4.html</guid>
        
        
        <category>canvas</category>
        
      </item>
    
      <item>
        <title>1.4 개발 환경 개요</title>
        <description>&lt;h2 id=&quot;14-개발-환경-개요&quot;&gt;1.4 개발 환경 개요&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;이 절에서는 애플리케이션을 실행할&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;브라우저&lt;/li&gt;
      &lt;li&gt;프로파일러&lt;/li&gt;
      &lt;li&gt;타임라인&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;등과 같이 개발 과정에서 사용하게될 개발 도구까지 개발 환경에 대한 대략적인 개요를 소개할 예정이다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 11 Sep 2020 00:35:00 +0900</pubDate>
        <link>http://localhost:4000/canvas/2020/09/11/canvas3.html</link>
        <guid isPermaLink="true">http://localhost:4000/canvas/2020/09/11/canvas3.html</guid>
        
        
        <category>canvas</category>
        
      </item>
    
      <item>
        <title>1.3 책에서 사용하는 표준 형태</title>
        <description>&lt;h2 id=&quot;13-책에서-사용하는-표준-형태&quot;&gt;1.3 책에서 사용하는 표준 형태&lt;/h2&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;A Simple Canvas Example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ddd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;#canvas&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;thin&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;inset&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#aaa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;canvas&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;600&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;300&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    Canvas not supported
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;2d&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 콘텍스트 사용..&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;위 예제는 하나의 캔버스를 사용하고 있다.&lt;/li&gt;
  &lt;li&gt;자바스크립트에는 캔버스용 변수(canvas)와 캔버스의 콘텍스트용 변수(context) - 두가지 변수가 있다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;document.getElementById()&lt;/code&gt;를 사용해 캔버스와 캔버스의 콘텍스트에 대한 참조를 가져오고 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;이 책에서 소개하는 코드는 위에서 언급한 표준 형태를 고수하고 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;사용자 에이전트(User Agent)&lt;/strong&gt;&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;캔버스 명세서에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소의 구현자를 사용자 에이전트로 언급하고 있으며, 때로는 줄여서 UA라고 말한다.&lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;브라우저뿐만 아니라 소프트웨어에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소를 사용할 수 있으므로 캔버스 명세서에는 브라우저란 단어 대신 사용자 에이전트란 용어를 사용하고 있다.&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;하지만 사용자 에이전트, 또는 UA란 단어는 독자에게 혼란이나 이질감을 줄 수 있다.&lt;/li&gt;
    &lt;li&gt;따라서 이 책에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소의 구현자를 브라우저라고 언급하고 있다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:29:00 +0900</pubDate>
        <link>http://localhost:4000/canvas/2020/09/11/canvas2.html</link>
        <guid isPermaLink="true">http://localhost:4000/canvas/2020/09/11/canvas2.html</guid>
        
        
        <category>canvas</category>
        
      </item>
    
      <item>
        <title>1.2.2 캔버스 상태 저장 및 복원</title>
        <description>&lt;h2 id=&quot;122-캔버스-상태-저장-및-복원&quot;&gt;1.2.2 캔버스 상태 저장 및 복원&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;1.2.1절(‘2d 콘텍스트’)에서 캔버스 콘텍스트의 모든 속성을 소개했다.&lt;/li&gt;
  &lt;li&gt;드로잉할 때 해당 속성들을 설정하게 될 것이다.&lt;/li&gt;
  &lt;li&gt;이때, 이런 속성들을 임시로 설정하고 싶을 수도 있다.&lt;/li&gt;
  &lt;li&gt;캔버스 API에서는 캔버스 콘텍스트의 모든 속성을 저장하고 복원할 수 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt; 메서드와 &lt;code class=&quot;highlighter-rouge&quot;&gt;restore()&lt;/code&gt; 메서드를 제공한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drawGrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;controlContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 콘텍스트를 스택에 저장한다.&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;controlContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;controlContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strokeStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 격자무늬 그리기...&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;controlContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 스텍으로부터 콘텍스트를 복원한다.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;save() 및 restore()를 한 세트로 호출할 수 있다.&lt;/strong&gt;&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;콘텍스트의 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt; 메서드는 콘텍스트의 현재 상태를 스택에 저장하는 메서드다.&lt;/li&gt;
    &lt;li&gt;반대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;restore()&lt;/code&gt; 메서드를 호출하면, 스택에 저장된 콘텍스트의 상태를 불러와 복원한다.&lt;/li&gt;
    &lt;li&gt;다시 말하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;restore()&lt;/code&gt;를 한 세트로 호출할 수 있다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;save()&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;캔버스 현재 상태를 스택에 넣는다.&lt;/li&gt;
      &lt;li&gt;캔버스 상태는 &lt;code class=&quot;highlighter-rouge&quot;&gt;strokeStyle&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;fillStyle&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;globalCompositeOperation&lt;/code&gt; 등을 포함한 캔버스 콘텍스트의 모든 속성과&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;현재 변화 및 클리핑 영역(clipping region)도 포함하고 있다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;하지만 캔버스 상태는 현재패스(path)나 비트맵(bitmap)을 포함하지 않는다.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;begitPath()&lt;/code&gt;를 호출해야만 패스를 재설정할 수 있으며&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;비트맵은 콘텍스트가 아닌 캔버스의 속성이다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;비트맵은 캔버스의 속성이지만 콘텍스트(콘텍스트의 &lt;code class=&quot;highlighter-rouge&quot;&gt;getImageData()&lt;/code&gt; 메서드)를 통해 비트맵에 접근할 수 있다는 점에 주의하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;restore()&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;스택으로부터 맨 위에 있는 정보를 꺼낸다.&lt;/li&gt;
      &lt;li&gt;이렇게 정보를 꺼내면 스택의 맨 위에 있는 상태가 현재 상태가 되며 브라우저에서는 그에 맞춰 캔버스 상태를 설정해야 한다.&lt;/li&gt;
      &lt;li&gt;따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt; 메서드와 &lt;code class=&quot;highlighter-rouge&quot;&gt;restore()&lt;/code&gt; 메서드 사이에 캔버스 상태를 변화시키고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;restore()&lt;/code&gt; 메서드를 호출할 때까지만 상태를 유지하면 된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;드로잉 표면 저장 및 복원하기&lt;/strong&gt;&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;이 절에서는 콘텍스트 상태를 저장하고 복원하는 방법을 소개했다.&lt;/li&gt;
    &lt;li&gt;그에 못지않게 &lt;strong&gt;드로잉 표면 자체를 저장하고 복원하는 방법도 굉장히 유용하다.&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;이 방법은 1.7절(드로잉 표면의 저장 및 복원)에서 소개할 예정이다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:09:00 +0900</pubDate>
        <link>http://localhost:4000/canvas/2020/09/11/canvas.html</link>
        <guid isPermaLink="true">http://localhost:4000/canvas/2020/09/11/canvas.html</guid>
        
        
        <category>canvas</category>
        
      </item>
    
      <item>
        <title>if else 문 사용 중지</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://medium.com/swlh/stop-using-if-else-statements-f4d2323e6e4&quot; target=&quot;_blank&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Sep 2020 00:01:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/09/11/javascript.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/09/11/javascript.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>1.2.1.1 WebGL 3d 콘텍스트</title>
        <description>&lt;h2 id=&quot;1211-webgl-3d-콘텍스트&quot;&gt;1.2.1.1 WebGL 3d 콘텍스트&lt;/h2&gt;

&lt;p&gt;캔버스 2d 콘텍스트는 OpenGL ES 2.0 API에 따른 3d 콘텍스트를 가지고 있다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;이 3d 콘텍스트는 WebGL로 알려져있다.&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
WebGL 명세서는 크로노스 그룹(Khronos Group)에서 관리하고 있으며 &lt;a href=&quot;http://www.khronos.org/registry/webgl/specs/latest/&quot; target=&quot;_blank&quot;&gt;http://www.khronos.org/registry/webgl/specs/latest/&lt;/a&gt;에서 
확인할 수 있다.&lt;/p&gt;

&lt;p&gt;이 책을 집필할 당시 브라우저 제작사에서 WebGL의 지원을 막 시작하고 있는 시점이었기 때문에 iOS4와 IE10 등과 같이 유명한 플랫폼에서도 WebGL을 지원하지 않았다.&lt;br /&gt;
그래도 3d 캔버스 콘텍스트 개발은 최첨단 애플리케이션에게 새로운 기회를 줄 수 있는 계기가 될 거라고 믿는다.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Sep 2020 23:58:00 +0900</pubDate>
        <link>http://localhost:4000/canvas/2020/09/09/canvas7.html</link>
        <guid isPermaLink="true">http://localhost:4000/canvas/2020/09/09/canvas7.html</guid>
        
        
        <category>canvas</category>
        
      </item>
    
      <item>
        <title>1.2.1 2d 콘텍스트</title>
        <description>&lt;h2 id=&quot;121-2d-콘텍스트&quot;&gt;1.2.1 2d 콘텍스트&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소는 캔버스의 너비나 높이, 또는 데이터 URL을 가져오는 것을 제외하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소 자체를 사용하는 것을 거의 찾아볼 수 없다.&lt;br /&gt;
도형과 텍스트를 그리고, 이미지를 표시 및 조작하기 위한 API를 제공하는 캔버스 &lt;strong&gt;콘텍스트&lt;/strong&gt;에 대한 참조를 가져올 수 있도록 &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소를 
사용하는 것을 볼 수 있다.&lt;br /&gt;
사실 이 책의 나머지 부분에서는 2d 콘텍스트를 중점적으로 소개하고 있다.&lt;/p&gt;

&lt;h3 id=&quot;2d-콘텍스트의-모든-속성&quot;&gt;2d 콘텍스트의 모든 속성&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;캔버스 자체를 참고하는 canvas 속성 외에 모든 속성은 드로잉 작업과 관련이 있다.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;canvas&lt;br /&gt;
콘텍스트의 캔버스를 참조한다.&lt;br /&gt;
보통 canvas 속성은 &lt;code class=&quot;highlighter-rouge&quot;&gt;context.canvas.width&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;context.canvas.height&lt;/code&gt; 등 캔버스의 너비와 높이에 접근할 때 사용한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;fillStyle&lt;br /&gt;
콘텍스트에서 도형을 채울 때 사용할 색상, 그라디언트, 패턴을 명시한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;font&lt;br /&gt;
fillText()나 strokeText()를 호출할 때 콘텍스트에서 사용할 폰트를 명시한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;globalAlpha&lt;br /&gt;
전역(global) Alpha 값을 설정하는 속성으로 0(완전 투명)과 1.0(완전 불투명) 사이의 값을 사용해야 한다.&lt;br /&gt;
브라우저에서는 이미지를 그릴 때를 포함해 globalAlpha 속성으로 그려진 모든 픽셀에 대한 alpha 값을 증가시킨다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;globalComposite-Operation&lt;br /&gt;
브라우저가 도형 위에 다른 도형을 그리는 방법을 결정한다.&lt;br /&gt;
2.14절에서 사용할 수 있는 값에 대해 자세하게 설명한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;lineCap&lt;br /&gt;
브라우저에서 선(line)에 대한 단점(endpoint)을 그리는 방법을 명시한다.&lt;br /&gt;
butt, round, square 등 세 가지 값 중 하나를 명시할 수 있다.&lt;br /&gt;
기본값은 butt이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;lineWidth&lt;br /&gt;
캔버스에서 그릴 선의 너비(픽셀)를 결정한다.&lt;br /&gt;
반드시 음이 아닌 유한 실수 값을 사용해야 한다.&lt;br /&gt;
기본값은 1.0이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;lineJoin &lt;br /&gt;
선의 단점이 만날 때 선이 연결되는 방법을 명시한다.&lt;br /&gt;
bevel, round, miter 등을 값으로 사용할 수 있다.&lt;br /&gt;
기본값은 miter다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;miterLimit&lt;br /&gt;
miter 값으로 선의 연결을 그리는 방법을 명시한다.&lt;br /&gt;
이 속성과 관련된 자세한 내용은 2.8.7절에서 소개하고 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;shadowBlur&lt;br /&gt;
브라우저에서 그림자를 흐리는 방법을 결정한다.&lt;br /&gt;
숫자가 높을수록 그림자가 더 많이 흐려진다.&lt;br /&gt;
shadowBlur 값은 픽셀값이 아닌 가우시안 블러에 대한 방정식에서 사용된 값이다.&lt;br /&gt;
값은 반드시 양의 유한 실수 값을 사용해야 하며 기본값은 0이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;shadowColor&lt;br /&gt;
그림자의 색상을 정의한다.&lt;br /&gt;
이 속성에 대한 값은 배경이 보일 수 있도록 부분적으로 투명하게 명시할 때가 잦다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;shadowOffsetX&lt;br /&gt;
그림자의 가로 오프셋(픽셀)을 명시한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;shadowOffsetY&lt;br /&gt;
그림자의 세로 오프셋(픽셀)을 명시한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;strokeStyle&lt;br /&gt;
패스를 그릴 때 사용한 스타일을 명시한다.&lt;br /&gt;
색상, 그라디언트, 패턴 중 하나를 속성값으로 사용할 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;textAlign&lt;br /&gt;
fillText()나 strokeText()를 사용해 그린 텍스트의 가로 위치를 결정한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;textBaseline&lt;br /&gt;
fillText()나 strokeText()를 사용해 그린 텍스트의 세로 위치를 결정한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;위에서 2d 콘텍스트의 모든 속성을 소개했다.&lt;br /&gt;
2장에서는 여기서 언급한 속성을 사례별로 알아보도록 하겠다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;2d 콘텍스트의 기능을 확장할 수 있다&lt;/strong&gt;&lt;br /&gt;
각 캔버스와 관련된 콘텍스트는 강력한 그래픽 엔진으로 그라디언트, 이미지 합성, 애니메이션 등과 같은 기능을 지원하지만, 제약사항이 있다.&lt;br /&gt;
예를 들면, 콘텍스트에서는 점선을 그리는 작업을 지원하는 메서드가 없다.&lt;br /&gt;
그러나 자바스크립트는 동적 언어이므로 새로운 메서드를 추가하거나 콘텍스트에 대한 기존 메서드를 강화할 수 있다.&lt;br /&gt;
이와 관련된 정보는 2.8.6절(&lt;strong&gt;CanvasRenderingContext2D&lt;/strong&gt;를 확장해 점선 그리기)을 참고하자&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 09 Sep 2020 23:27:00 +0900</pubDate>
        <link>http://localhost:4000/canvas/2020/09/09/canvas6.html</link>
        <guid isPermaLink="true">http://localhost:4000/canvas/2020/09/09/canvas6.html</guid>
        
        
        <category>canvas</category>
        
      </item>
    
      <item>
        <title>1.2 캔버스 콘텍스트</title>
        <description>&lt;h2 id=&quot;12-캔버스-콘텍스트&quot;&gt;1.2 캔버스 콘텍스트&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; 요소는 콘텍스트를 위한 컨테이너로서의 역할만 한다.&lt;br /&gt;
그리고 콘텍스트는 모든 그래픽 능력(graphics horsepower)을 제공한다.&lt;br /&gt;
이 책에서는 2d 콘텍스트에 대해 중점적으로 소개하고 있지만, 캔버스 명세서에는 2d 콘텍스트 뿐 아니라 모든 종류의 콘텍스트를 포괄적으로 다루고 있다.&lt;br /&gt;
특히, 명세서에 3d 콘텍스트를 추가하는 작업이 한창이다.&lt;br /&gt;
이 절에서는 2d 콘텍스트의 속성을 살펴보고 3d 콘텍스트도 간략하게 훑어보겠다.&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Sep 2020 23:24:00 +0900</pubDate>
        <link>http://localhost:4000/canvas/2020/09/09/canvas5.html</link>
        <guid isPermaLink="true">http://localhost:4000/canvas/2020/09/09/canvas5.html</guid>
        
        
        <category>canvas</category>
        
      </item>
    
  </channel>
</rss>
