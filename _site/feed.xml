<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 07 Aug 2020 18:36:55 +0900</pubDate>
    <lastBuildDate>Fri, 07 Aug 2020 18:36:55 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>3.4.3 내장객체 타이머</title>
        <description>&lt;h2 id=&quot;343-내장객체-타이머&quot;&gt;3.4.3 내장객체 타이머&lt;/h2&gt;

&lt;p&gt;타이머 기능을 제공하는 함수인 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;는 노드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 안에 들어 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;은 웹 브라우저에서도 자주 사용되므로 익숙할 겁니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;setTimeout(콜백 함수, 밀리초)&lt;/strong&gt; : 주어진 밀리초(1000분의 1초) 이후에 콜백함수를 실행합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;setInterval(콜백 함수, 밀리초)&lt;/strong&gt; : 주어진 밀리초마다 콜백 함수를 반복 실행합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;setImmediate(콜백 함수)&lt;/strong&gt; : 콜백 함수를 즉시 실행합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 타이머 함수들은 모두 아이디를 반환합니다.&lt;br /&gt;
아이디를 사용하여 타이머를 취소할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;clearTimeout(아이디)&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;을 취소합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;clearInterval(아이디)&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;을 취소합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;clearImmediate(아이디)&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;를 취소합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다음은 위 메서드들을 사용한 코드입니다.&lt;br /&gt;
코드의 실행 순서를 예측해보세요.&lt;br /&gt;
헷갈리도록 코드 순서를 섞어 놓았습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;1.5초 후 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;1초마다 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;실행되지 않습니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeout2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;immediate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setImmediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;즉시 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;immediate2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setImmediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;실행되지 않습니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;clearImmediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;immediate2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;immediate&lt;/li&gt;
  &lt;li&gt;interval&lt;/li&gt;
  &lt;li&gt;timeout&lt;/li&gt;
  &lt;li&gt;interval&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;나머지는 취소돼서 실행되지 않는다.&lt;/p&gt;

&lt;p&gt;제일 먼저 실행되는 것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;immediate&lt;/code&gt;입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;immediate2&lt;/code&gt;는 바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;clearImmediate&lt;/code&gt;를 사용해서 취소했기 때문에 실행되지 않습니다.&lt;br /&gt;
코드 실행 1초 후에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;interval&lt;/code&gt;의 콜백이 실행됩니다.&lt;br /&gt;
코드 실행 1.5초 후에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;의 콜백이 실행될 것입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;interval&lt;/code&gt;의 콜백은 1초마다 실행되므로 코드 실행 후 2초가 지났을 때도 콜백이 시행됩니다.&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Aug 2020 12:05:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/07/node33.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/07/node33.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.2 내장객체 console</title>
        <description>&lt;h2 id=&quot;342-내장객체-console&quot;&gt;3.4.2 내장객체 console&lt;/h2&gt;

&lt;p&gt;지금까지 사용했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt;도 노드에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 안에 들어 있습니다.&lt;br /&gt;
브라우저에서의 &lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt;과 거의 비슷합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt; 객체는 보통 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;디버깅&lt;/span&gt;&lt;/strong&gt;을 위해 사용됩니다.&lt;br /&gt;
개발 중 &lt;strong&gt;&lt;span style=&quot;color:blue&quot;&gt;1) 변수에 값이 제대로 들어 있나 확인하기 위해 사용&lt;/span&gt;&lt;/strong&gt;하기도 하고, 
&lt;strong&gt;&lt;span style=&quot;color:blue&quot;&gt;2) 에러 발생 시 에러 내용을 콘솔에 표시하기 위해서도 사용&lt;/span&gt;&lt;/strong&gt;하며, 
&lt;strong&gt;&lt;span style=&quot;color:blue&quot;&gt;3) 코드 실행 시간을 알아보려고 할 때도 사용&lt;/span&gt;&lt;/strong&gt;합니다.&lt;br /&gt;
대표적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log&lt;/code&gt; 메서드가 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;console.log&lt;/code&gt;는 지금껏 계속 사용했으므로 익숙할 것입니다.&lt;br /&gt;
다른 로깅 함수들도 알아봅시다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;outside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;inside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;전체 시간&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;평범한 로그입니다. 쉼표로 구분해 여러 값을 찍을 수 있습니다.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;에러 메시지는 console.error에 담아주세요&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;시간 측정&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;시간 측정&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;에러 위치 추적&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;전체 시간&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image35.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/nodebook/image36.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;console.time(레이블)&lt;/strong&gt; : &lt;strong&gt;console.timeEnd(레이블)&lt;/strong&gt;과 대응되어 &lt;strong&gt;같은 레이블을 가진 &lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;timeEnd&lt;/code&gt; 사이의 시간을 측정&lt;/strong&gt;합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;console.log(내용)&lt;/strong&gt; : 평범한 로그를 콘솔에 표시합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log(내용, 내용, ...)&lt;/code&gt;처럼 여러 내용을 동시에 표시할 수도 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;console.error(에러 내용)&lt;/strong&gt; : 에러를 콘솔에 표시합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;console.dir(객체, 옵션)&lt;/strong&gt; : 객체를 콘솔에 표시할 때 사용합니다. &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;첫 번째 인자로 표시할 객체&lt;/span&gt;&lt;/strong&gt;를 넣고, 
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;두 번째 인자로 옵션&lt;/span&gt;&lt;/strong&gt;을 넣습니다. 옵션의 &lt;code class=&quot;highlighter-rouge&quot;&gt;colors&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;로 하면 콘솔에 색이 추가되어 보기가 한결 편해집니다. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;depth&lt;/code&gt;는 객체 안의 객체를 몇 단계까지 보여줄지를 결정합니다. 기본값은 2입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;console.trace(레이블)&lt;/strong&gt; : 에러가 어디서 발생해쓴ㄴ지 추적할 수 있게 해줍니다. 보통은 에러발생 시 에러 위치를 알려주므로 자주 사용하지는 않지만, 
위치가 나오지 않는다면 사용할만합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;코드를 실행하면 노드 콘솔에는 다음과 같이 표시됩니다.&lt;br /&gt;
단, &lt;code class=&quot;highlighter-rouge&quot;&gt;console.time&lt;/code&gt;의 시간이나 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.trace&lt;/code&gt;의 경로는 사용자의 컴퓨터 환경에 따라 다를 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image37.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;편리한 디버깅을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt; 객체에는 지금도 새로운 메서드들이 추가되고 있습니다.&lt;br /&gt;
실제로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.js&lt;/code&gt;에서 소개한 메서드보다 더 다양한 메서드가 있습니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Aug 2020 01:01:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/06/node32.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/06/node32.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.1 내장객체 global</title>
        <description>&lt;h2 id=&quot;341-내장객체-global&quot;&gt;3.4.1 내장객체 global&lt;/h2&gt;

&lt;p&gt;먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체입니다.&lt;br /&gt;
브라우저의 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;와 같은 전역 객체입니다.&lt;br /&gt;
전역 객체이므로 모든 파일에서 접근할 수 있습니다.&lt;br /&gt;
또한, &lt;code class=&quot;highlighter-rouge&quot;&gt;window.open&lt;/code&gt; 메서드를 그냥 &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt;으로 호출할 수 있는 것처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt;도 생략할 수 있습니다.&lt;br /&gt;
&lt;strong&gt;이전 절에서 사용했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; 함수에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;global.require&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt;이 생략된 것입니다.&lt;/strong&gt;&lt;br /&gt;
노드 콘솔에 로그를 기록하는 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt; 객체도 원래는 &lt;code class=&quot;highlighter-rouge&quot;&gt;global.console&lt;/code&gt;&lt;/strong&gt;입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 내부에는 매우 많은 속성이 들어 있습니다.&lt;br /&gt;
이 절에서 배울 내용들이 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 안에 있습니다.&lt;br /&gt;
내부를 보려면 &lt;strong&gt;REPL&lt;/strong&gt;을 이용해야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE : 노드의 window, document 객체&lt;/strong&gt;&lt;br /&gt;
노드에는 DOM이나 BOM이 없어 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;document&lt;/code&gt; 객체를 사용할 수 없습니다.&lt;br /&gt;
노드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;document&lt;/code&gt;를 사용하면 에러가 발생합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image33.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;노드 버전에 따라 콘솔 내용이 다를 수 있습니다.&lt;/strong&gt;&lt;br /&gt;
내용이 너무 많아 줄였지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 안에는 수십 가지의 속성이 담겨 있습니다.&lt;br /&gt;
모두 알 필요는 없고, 자주 사용하는 속성들만 이번 절에서 알아봅니다.&lt;/p&gt;

&lt;p&gt;전역 객체라는 점을 이용하여 간단한 데이터를 파일끼리 공유할 때 사용하기도 합니다.&lt;br /&gt;
&lt;strong&gt;globalA.js&lt;/strong&gt;와 &lt;strong&gt;globalB.js&lt;/strong&gt;를 같은 폴더에 생성해봅시다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// globalA.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// globalB.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./globalA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;안녕하세요&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;globalA&lt;/strong&gt; 모듈의 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;global.message&lt;/code&gt; 값을 반환합니다.&lt;br /&gt;
&lt;strong&gt;globalB.js&lt;/strong&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체에 속성명이 &lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt;인 값을 대입하고 &lt;strong&gt;globalA&lt;/strong&gt; 모듈의 함수를 호출합니다.&lt;br /&gt;
콘솔 결과를 보면 &lt;strong&gt;globalB&lt;/strong&gt;에서 넣은 &lt;code class=&quot;highlighter-rouge&quot;&gt;global.message&lt;/code&gt; 값을 &lt;strong&gt;globalA&lt;/strong&gt;에서도 접근함을 알 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image34.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;Warning&lt;/span&gt; global 객체의 남용&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체의 속성에 값을 대입하여 파일 간에 데이터를 공유할 수 있지만, 이를 남용하지는 마세요.&lt;br /&gt;
프로그램의 규모가 커질수록 어떤 파일에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체에 값을 대입했는지 찾기 힘들어 유지보수에 어려움을 겪게 되기 때문입니다.&lt;br /&gt;
다른 파일의 값을 사용하고 싶다면 모듈 형식으로 만들어서 명시적으로 값을 불러와 사용하는 것이 좋습니다.&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 06 Aug 2020 00:47:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/06/node31.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/06/node31.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>iPad 인식 테스트 결과</title>
        <description>&lt;h2 id=&quot;ipad-인식-테스트-결과&quot;&gt;iPad 인식 테스트 결과&lt;/h2&gt;

&lt;h3 id=&quot;방법1-멀티터치-이벤트-구분방식&quot;&gt;방법1. 멀티터치 이벤트 구분방식&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isIOS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/iPad|iPhone|iPod/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;platform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;MacIntel&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxTouchPoints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MSStream&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;멀티터치 스크린 지원하는지 안하는지로 iPad인지 아닌지 구분&lt;/li&gt;
  &lt;li&gt;참고 사이트 : &lt;a href=&quot;https://stackoverflow.com/questions/9038625/detect-if-device-is-ios&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/9038625/detect-if-device-is-ios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;테스트결과&quot;&gt;테스트결과&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;아이패드 프로 iOS 13 이상 - iOS 모바일 정상 인식&lt;/li&gt;
  &lt;li&gt;아이패드 프로 iOS 12.X 버전 - iOS 모바일 정상 인식&lt;/li&gt;
  &lt;li&gt;아이폰X - iOS 모바일 정상 인식&lt;/li&gt;
  &lt;li&gt;맥북 - iOS 모바일 인식 안함&lt;/li&gt;
  &lt;li&gt;갤럭시 s10 - iOS 모바일 인식 안함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;위-방법의-리스크&quot;&gt;위 방법의 리스크&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;터치스크린이 지원되는 맥북이 나온다면 해당 맥북에서도 모바일 페이지로 노출될 가능성이 있음&lt;/li&gt;
  &lt;li&gt;현재는 터치스크린을 지원하는 맥북은 없는 것으로 확인 (애플에서도 아직 계획 없는걸로 보임)&lt;/li&gt;
  &lt;li&gt;하지만 노트북 시장의 추세가 터치스크린을 지원하는 것이라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;관련-기사-2019-12-19-기사&quot;&gt;관련 기사 (2019. 12. 19 기사)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.itworld.co.kr/opinion/139856&quot; target=&quot;_blank&quot;&gt;http://www.itworld.co.kr/opinion/139856&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;즉, 현재로선 위 방법을 통해 분기처리를 해도 될 것 같습니다. (애플이 갑자기 터치스크린을 지원하는 맥북을 출시안한다면..)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;방법-2-그래픽-드라이버-구분방식-추측&quot;&gt;방법 2. 그래픽 드라이버 구분방식 (추측)&lt;/h3&gt;

&lt;p&gt;참고 사이트&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/API/WEBGL_debug_renderer_info&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/ko/docs/Web/API/WEBGL_debug_renderer_info&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/CsabaConsulting/DetectMobileTest&quot; target=&quot;_blank&quot;&gt;https://github.com/CsabaConsulting/DetectMobileTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와 같이 iPad와 Mac을 구분하는 소스가 들어있습니다.
테스트 결과 iPad(iOS 13이상)를 구분하는 것으로 확인됐습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;장점&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;24일 전에 업데이트 기록이 있음 (최신)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;단점&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;정확히 어떤 원리에 의해 iPad를 구분하는 것인지 파악이안됨&lt;/li&gt;
  &lt;li&gt;그래픽 드라이브 정보를 읽어서 구분하는 것이라고 추측&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;개발쪽과 상의가 필요할 것 같습니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Aug 2020 11:38:00 +0900</pubDate>
        <link>http://localhost:4000/project/2020/08/05/project4.html</link>
        <guid isPermaLink="true">http://localhost:4000/project/2020/08/05/project4.html</guid>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>3.4 노드 내장 객체 알아보기</title>
        <description>&lt;h2 id=&quot;34-노드-내장-객체-알아보기&quot;&gt;3.4 노드 내장 객체 알아보기&lt;/h2&gt;

&lt;p&gt;노드에서는 기본적인 내장 객체와 내장 모듈(3.5절 참조)을 제공합니다.&lt;br /&gt;
그래서 따로 설치하지 않아도 바로 사용할 수 있습니다.&lt;br /&gt;
브라우저의 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 객체와 비슷하다고 보시면 됩니다.&lt;/p&gt;

&lt;p&gt;이 절에서는 노드 프로그래밍시 많이 사용되는 내장 객체에 대해 알아보겠습니다.&lt;/p&gt;

</description>
        <pubDate>Wed, 05 Aug 2020 11:07:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/05/node30.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/05/node30.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.3 모듈로 만들기</title>
        <description>&lt;h2 id=&quot;33-모듈로-만들기&quot;&gt;3.3 모듈로 만들기&lt;/h2&gt;

&lt;p&gt;노드는 코드를 모듈로 만들 수 있다는 점에서 브라우저의 자바스크립트와는 다릅니다.&lt;br /&gt;
&lt;strong&gt;모듈&lt;/strong&gt;이란 특정한 기능을 하는 함수나 변수들의 집합입니다.&lt;br /&gt;
예를 들면 수학에 관련된 코드들만 모아서 모듈을 하나 만들 수 있습니다.&lt;br /&gt;
자체로도 하나의 프로그램이면서 다른 프로그램의 부품으로도 사용할 수 있습니다.&lt;br /&gt;
뒤에 나오는 예제를 보면 이해하기 쉽습니다.&lt;/p&gt;

&lt;p&gt;모듈로 만들어두면 여러 프로그램에 해당 모듈을 재사용할 수 있습니다.&lt;br /&gt;
자바스크립트에서 코드를 재사용하기 위해 함수로 만드는 것과 비슷합니다.&lt;/p&gt;

&lt;p&gt;보통 파일 하나가 모듈 하나가 됩니다.&lt;br /&gt;
파일별로 코드를 모듈화할 수 있어 관리하기 편리합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image30.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;브라우저의 모듈&lt;/strong&gt;&lt;br /&gt;
2015년 자바스크립트에도 &lt;code class=&quot;highlighter-rouge&quot;&gt;import/export&lt;/code&gt;라는 모듈 개념이 도입되었습니다.&lt;br /&gt;
하지만 브라우저에는 구현되지 않아서 사용할 수 없었습니다.&lt;br /&gt;
크롬 60 버전부터 드디어 브라우저에서도 모듈을 사용할 수 있게 되었습니다.&lt;br /&gt;
앞으로 점차 더 많은 브라우저가 모듈 시스템을 지원할 것으로 보입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;실제로 모듈을 만들어봅시다.&lt;br /&gt;
모듈을 만들 때는 모듈이 될 파일과 모듈을 불러와서 사용할 파일이 필요합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;var.js&lt;/strong&gt;와 &lt;strong&gt;func.js, index.js&lt;/strong&gt;를 같은 폴더에 만듭니다.&lt;br /&gt;
먼저 &lt;strong&gt;var.js&lt;/strong&gt;를 작성합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// var.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;홀수입니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;짝수입니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;var.js&lt;/strong&gt;에 변수 두 개를 선언했습니다.&lt;br /&gt;
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에 변수들을 담은 객체를 대입했습니다.&lt;br /&gt;
이제 이 파일은 모듈로서 기능합니다.&lt;br /&gt;
변수들을 모아둔 모듈이 되는 것이죠.&lt;br /&gt;
다른 파일에서 이 파일을 불러오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에 대입된 값을 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;이번에는 &lt;strong&gt;var.js&lt;/strong&gt;를 참조하는 &lt;strong&gt;func.js&lt;/strong&gt;를 작성하겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// func.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./var&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkOddOrEven&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 홀수면&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkOddOrEven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; 함수 안에 불러올 모듈의 경로를 적어줍니다.&lt;br /&gt;
앞의 예제에서는 같은 폴더 안에 파일을 만들었지만, 다른 폴더에 있는 파일도 모듈로 사용할 수 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; 함수의 인자로 제공하는 경로만 잘 지정해주면 됩니다.&lt;br /&gt;
파일 경로에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt;나 &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; 같은 확장자는 생략할 수 있습니다.&lt;/p&gt;

&lt;p&gt;예제 코드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; 함수로 &lt;strong&gt;var.js&lt;/strong&gt;에 있던 값들을 불러오고 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;const { odd, even }&lt;/code&gt;은 2.1.5절에서 설명한 ES2015+ 문법입니다.&lt;br /&gt;
&lt;strong&gt;var.js&lt;/strong&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에 담겨 있던 객체를 불러와 &lt;strong&gt;func.js&lt;/strong&gt;에서 사용하는 모습입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;var.js&lt;/strong&gt;에서 변수를 불러온 뒤, 숫자의 홀짝을 판별하는 함수를 선언했습니다.&lt;br /&gt;
그리고 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에 함수를 대입했습니다.&lt;br /&gt;
이렇게 다른 모듈(var.js)을 사용하는 파일을 다시 모듈(func.js)로 만들 수 있습니다.&lt;br /&gt;
또한, &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에는 객체만 대입해야 하는 것이 아니라 &lt;strong&gt;함수나 변수를 대입&lt;/strong&gt;해도 됩니다.&lt;/p&gt;

&lt;p&gt;마지막으로 &lt;strong&gt;index.js&lt;/strong&gt;를 작성합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// index.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./var&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./func&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkStringOddOrEven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 홀수면&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checkNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checkStringOddOrEven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;index.js는 var.js와 func.js를 모두 참조합니다.&lt;br /&gt;
모듈 하나가 여러 개의 모듈을 사용할 수 있는 것이죠.&lt;br /&gt;
또한, var.js가 func.js와 index.js에 두 번 쓰이는 것처럼, 모듈 하나가 여러 개의 모듈에 사용될 수도 있습니다.&lt;/p&gt;

&lt;p&gt;모듈로부터 값을 불러올 때 변수 이름을 다르게 지정할 수도 있습니다.&lt;br /&gt;
func.js의 checkOddOrEven이 checkNumber라는 이름으로 사용되고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image31.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 index.js를 실행해보겠습니다.&lt;br /&gt;
결과는 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image32.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 여러 파일에 걸쳐 재사용되는 함수나 변수들을 모듈로 만들어두면 편리합니다.&lt;br /&gt;
그러나 &lt;strong&gt;모듈이 많아지고 모듈 간의 관계가 얽히게 되면 구조를 파악하기 어렵다는 단점&lt;/strong&gt;도 있습니다.&lt;br /&gt;
노드에서는 대부분의 파일이 다른 파일을 모듈로 사용하고 있으므로 모듈을 만들고 사용하는 방법을 꼭 알아두어야 합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;note--es2015-모듈&quot;&gt;NOTE : ES2015 모듈&lt;/h3&gt;

&lt;p&gt;ES2015가 도입되면서 자바스크립트도 자체 모듈 시스템 문법이 생겼습니다.&lt;br /&gt;
노드의 모듈 시스템과는 문법이 조금 다릅니다.&lt;br /&gt;
본문의 &lt;strong&gt;func.js&lt;/strong&gt;를 ES2015 모듈 스타일로 바꿔보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// func.mjs&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./var&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkOddOrEven&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 홀수면&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkOddOrEven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;import, export default&lt;/code&gt;로 바뀌었습니다.&lt;br /&gt;
이와 같은 사소한 차이가 있습니다.&lt;br /&gt;
노드에서도 9 버전부터 ES2015의 모듈 시스템을 사용할 수 있습니다.&lt;br /&gt;
하지만 파일의 확장자를 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mjs&lt;/code&gt;&lt;/strong&gt;로 지정해야 하고, 실행 시 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;node --experimental-modules [파일명]&lt;/code&gt;&lt;/strong&gt;처럼 
특별한 옵션을 붙여주어야 하는 제한이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;방금 썼던 &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; 함수느 &lt;code class=&quot;highlighter-rouge&quot;&gt;module&lt;/code&gt; 객체는 따로 선언하지 않았지만 사용할 수 있었습니다.&lt;/strong&gt;&lt;br /&gt;
이것이 어떻게 가능할까요?&lt;br /&gt;
바로 노드에서 기본적으로 제공하는 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;내장 객체&lt;/span&gt;&lt;/strong&gt;이기 때문입니다.&lt;br /&gt;
다음 절에서 내장 객체에 대해 자세히 알아보겠습니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Aug 2020 11:07:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/05/node29.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/05/node29.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>css animate</title>
        <description>&lt;h2 id=&quot;css-animate&quot;&gt;css animate&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://animista.net/&quot; target=&quot;_blank&quot;&gt;https://animista.net/&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 05 Aug 2020 10:04:00 +0900</pubDate>
        <link>http://localhost:4000/css/2020/08/05/css6.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2020/08/05/css6.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>3.2 JS 파일 실행하기</title>
        <description>&lt;h2 id=&quot;32-js-파일-실행하기&quot;&gt;3.2 JS 파일 실행하기&lt;/h2&gt;

&lt;p&gt;REPL에 직접 코드를 입력하는 대신 자바스크립트 파일을 만들어 실행해보겠습니다.&lt;br /&gt;
다음과 같은 자바스크립트 파일을 만들어봅시다.&lt;br /&gt;
파일은 아무 폴더(디렉터리) 안에 만들어도 됩니다.&lt;br /&gt;
하지만 예제 코드가 많으니 따로 폴더를 만들어 파일들을 모아두는 것이 편리할 것입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// helloWorld.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;helloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello world&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;helloNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;helloNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello node&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;helloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;콘솔에서 &lt;strong&gt;node [자바스크립트 파일 경로]&lt;/strong&gt;로 실행합니다.&lt;br /&gt;
&lt;strong&gt;확장자(.js)는 생략해도 됩니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;REPL에서 입력하는 것이 아니므로 주의하세요.&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;REPL이 아니라 콘솔(터미널)에서 입력해야 합니다.&lt;/strong&gt;&lt;br /&gt;
콘솔(터미널)에서 REPL로 들어가는 명령어가 node고, 노드를 통해 파일을 실행하는 명령어는 &lt;strong&gt;node [자바스크립트 파일 경로]&lt;/strong&gt;입니다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node helloWorld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image29.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Aug 2020 07:13:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/05/node28.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/05/node28.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.1 REPL 사용하기</title>
        <description>&lt;h2 id=&quot;31-repl-사용하기&quot;&gt;3.1 REPL 사용하기&lt;/h2&gt;

&lt;p&gt;자바스크립트는 스크립트 언어이므로 미리 컴파일을 하지 않아도 즉석에서 코드를 실행할 수 있습니다.&lt;br /&gt;
이전 장에서 브라우저 콘솔 탭에서 자바스크립트 코드를 입력해보았을 것입니다.&lt;br /&gt;
노드도 비슷한 콘솔을 제공하는데, 입력한 코드를 &lt;strong&gt;읽고(Read), 해석하고(Eval), 결과물을 반환하고(Print), 종료할 때까지 반복(Loop)&lt;/strong&gt;한다고 해서 
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;REPL(Read Eval Print Loop)&lt;/span&gt;&lt;/strong&gt;이라고 부릅니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image25.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;노드의 REPL을 직접 사용해보겠습니다.&lt;br /&gt;
윈도에서는 명령 프롬프트, 맥이나 리눅스에서는 터미널을 열고 node를 입력합니다.&lt;br /&gt;
VS Code에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + `&lt;/code&gt;를 누르면 터미널을 켤 수 있습니다.&lt;br /&gt;
앞으로는 명령 프롬프트나 터미널을 &lt;strong&gt;콘솔이라고 통칭&lt;/strong&gt;하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image26.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;프롬프트가 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; 모양으로 바뀌었다면 자바스크립트 코드를 입력할 수 있습니다.&lt;br /&gt;
간단한 문자열을 출력해봅시다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Hello world, hello node&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image27.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 출력되었다면 성공입니다.&lt;br /&gt;
여러분이 입력한 코드를 &lt;strong&gt;REPL이 읽고(Read) 해석(Eval)한 뒤 바로 결과물을 출력해주었습니다(Print).&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;그리고 종료되기 전까지 여러분의 입력을 기다립니다(Loop).&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;REPL을 종료하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl + c&lt;/code&gt;를 두 번 누르거나, REPL 창에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.exit&lt;/code&gt;를 입력하면 됩니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image28.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;REPL은 한두줄짜리 코드를 테스트해보는 용도로는 좋지만 여러 줄의 코드를 실행하기에는 불편합니다.&lt;br /&gt;
긴 코드는 코드를 자바스크립트 파일로 만든 후, 파일을 통째로 실행하는 것이 좋습니다.&lt;br /&gt;
다음 절에서 JS 파일을 만들어 실행해봅시다.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Aug 2020 06:52:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/05/node27.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/05/node27.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3. 노드 기능 알아보기</title>
        <description>&lt;h2 id=&quot;3-노드-기능-알아보기&quot;&gt;3. 노드 기능 알아보기&lt;/h2&gt;

&lt;p&gt;이 장에서는 노드와 처음 상호작용을 해보고, 노드로 자바스크립트 파일을 실행하는 방법을 알아봅니다.&lt;br /&gt;
또한, 노드가 기본적으로 제공하는 객체와 모듈 사용법에 대해서도 알아봅니다.&lt;br /&gt;
&lt;strong&gt;모듈을 사용하면서 중요한 개념인 버퍼와 스트림, 동기와 비동기, 이벤트, 예외 처리에 대해서도 배웁니다.&lt;/strong&gt;&lt;br /&gt;
새로운 개념이 많이 나오는데, 한 번에 외우려고 하지 마세요.&lt;br /&gt;
잊어버렸을 때마다 다시 찾아서 보면 됩니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Aug 2020 06:19:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/05/node26.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/05/node26.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
  </channel>
</rss>
