<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 08 Aug 2020 21:44:10 +0900</pubDate>
    <lastBuildDate>Sat, 08 Aug 2020 21:44:10 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>3.4.6.3 내장객체 process - process.exit(코드)</title>
        <description>&lt;h2 id=&quot;3463-내장객체-process---processexit코드&quot;&gt;3.4.6.3 내장객체 process - process.exit(코드)&lt;/h2&gt;

&lt;p&gt;실행 중인 노드 프로세스를 종료합니다.&lt;br /&gt;
서버에 이 함수를 사용하면 서버가 멈추므로 서버에는 거의 사용하지 않습니다.&lt;br /&gt;
하지만 서버 외의 독립적인 프로그램에서는 수동으로 노드를 멈추게 하기 위해 사용합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;로 반복되고 있는 코드를 &lt;code class=&quot;highlighter-rouge&quot;&gt;process.exit()&lt;/code&gt;로 멈춰보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// exit.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;종료!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image44.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1부터 4까지 표시한 뒤, i가 5가 되었을 때 종료하도록 했습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;process.exit&lt;/code&gt; 메서드는 인자로 코드 번호를 줄 수 있습니다.&lt;br /&gt;
인자를 주지 않거나 0이면 정상 종료를 뜻하고, 1을 주면 비정상 종료를 뜻합니다.&lt;br /&gt;
&lt;strong&gt;만약 에러가 발생해서 종료하는 경우 1을 넣어주면 됩니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;지금까지 자주 쓰이는 내장 객체에 대해 알아보았습니다.&lt;br /&gt;
타이머와 콘솔, 프로세스, 모듈은 기본적인 기능이지만 앞으로도 계속 사용됩니다.&lt;/p&gt;

&lt;p&gt;또한, 노드는 여러 가지 강력한 기능을 기본 모듈로 제공합니다.&lt;br /&gt;
다음 절에서는 노드가 어떤 기능들을 제공하는지 알아보겠습니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Aug 2020 21:36:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/08/node39.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/08/node39.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.6.2 내장객체 process - process.nextTick(콜백)</title>
        <description>&lt;h2 id=&quot;3462-내장객체-process---processnexttick콜백&quot;&gt;3.4.6.2 내장객체 process - process.nextTick(콜백)&lt;/h2&gt;

&lt;p&gt;이벤트 루프가 다른 콜백 함수들보다 &lt;code class=&quot;highlighter-rouge&quot;&gt;nextTick&lt;/code&gt;의 콜백 함수를 우선으로 처리하도록 만듭니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// nextTick.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setImmediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;immediate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;nextTick&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;process.nextTick&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;나 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;보다 먼저 실행됩니다.&lt;br /&gt;
코드 맨 밑에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;를 넣은 것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;rosolve&lt;/code&gt;된 &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;도 &lt;code class=&quot;highlighter-rouge&quot;&gt;nextTick&lt;/code&gt; 처럼 다른 콜백들보다 우선시되기 때문입니다.&lt;br /&gt;
그래서 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;process.nextTick&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;를 마이크로태스크(microtask)라고 따로 구분지어 부릅니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image42.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/nodebook/image43.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;Warning&lt;/span&gt;&lt;/strong&gt; : 마이크로태스크의 재귀 호출&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;process.nextTick&lt;/code&gt;으로 받은 콜백 함수나 &lt;code class=&quot;highlighter-rouge&quot;&gt;resolve&lt;/code&gt;된 &lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;는 다른 이벤트 루프에서 대기하는 콜백 함수보다도 먼저 실행됩니다.&lt;br /&gt;
그래서 비동기 처리를 할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;보다 &lt;code class=&quot;highlighter-rouge&quot;&gt;process.nextTick&lt;/code&gt;을 더 선호하는 개발자도 있습니다.&lt;br /&gt;
하지만 이런 &lt;code class=&quot;highlighter-rouge&quot;&gt;Microtask&lt;/code&gt;를 재귀 호출하게 되면 이벤트 루프는 다른 콜백 함수보다 &lt;code class=&quot;highlighter-rouge&quot;&gt;Microtask&lt;/code&gt;를 우선하여 처리하므로 
콜백 함수들이 실행되지 않을 수도 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sat, 08 Aug 2020 19:29:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/08/node38.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/08/node38.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.6.1 내장객체 process - process.env</title>
        <description>&lt;h2 id=&quot;3461-내장객체-process---processenv&quot;&gt;3.4.6.1 내장객체 process - process.env&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;REPL&lt;/strong&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt;를 입력하면 매우 많은 정보가 출력됩니다.&lt;br /&gt;
자세히 보면 이 정보들이 &lt;strong&gt;시스템의 환경변수&lt;/strong&gt;임을 알 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt;는 서비스의 중요한 키를 저장하는 공간으로도 사용됩니다.&lt;br /&gt;
서버나 데이터베이스의 비밀번호와 각종 API 키를 코드에 직접 입력하는 것은 위헙합니다.&lt;br /&gt;
혹여 서비스가 해킹당해 코드가 유출되었을 때 비밀번호가 코드에 남아 있어 추가 피해가 발생할 수 있습니다.&lt;/p&gt;

&lt;p&gt;따라서 중요한 비밀번호는 다음과 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt;의 속성으로 대체합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secretId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SECRET_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secretCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SECRET_CODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt;에 직접 &lt;code class=&quot;highlighter-rouge&quot;&gt;SECRET_ID&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;SECRET_CODE&lt;/code&gt;를 넣어주면 됩니다.&lt;br /&gt;
&lt;strong&gt;넣는 방법은 운영체제마다 차이가 있습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;하지만 한 번에 모든 운영체제에 동일하게 넣을 수 있는 방법&lt;/strong&gt;이 있습니다.&lt;br /&gt;
9장에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;dotenv&lt;/code&gt;를 사용할 때 배웁니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Aug 2020 19:20:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/08/node37.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/08/node37.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.6 내장객체 process</title>
        <description>&lt;h2 id=&quot;346-내장객체-process&quot;&gt;3.4.6 내장객체 process&lt;/h2&gt;

&lt;p&gt;아직까지는 &lt;code class=&quot;highlighter-rouge&quot;&gt;process&lt;/code&gt; 객체를 사용할 일이 많지 않았지만, 책의 후반부로 갈수록 사용할 일이 늘어납니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;process&lt;/code&gt; 객체는 현재 실행되고 있는 노드 프로세스에 대한 정보를 담고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;process&lt;/code&gt; 객체 안에는 다양한 속성이 있는데, &lt;strong&gt;REPL&lt;/strong&gt;에 하나씩 따라서 입력해봅시다.&lt;br /&gt;
결과값은 사용자의 컴퓨터마다 차이가 있을 수 있으므로 이 책의 값과 다르더라도 걱정하지 마세요.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;process.version // 설치된 노드의 버전입니다.
process.arch // 프로세서 아키텍처 정보입니다. arm, ia32 등의 값일 수도 있습니다.
process.platform // 운영체제 플랫폼 정보입니다. linux나 darwin, freebsd 등의 값일 수도 있습니다.
process.pid // 현재 프로세스의 아이디입니다. 프로세스를 여러 개 가질 때 구분할 수 있습니다.
process.uptime&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; // 프로세스가 시작된 후 흐른 시간입니다. 단위는 초입니다.
process.execPath // 노드의 경로입니다.
process.cwd&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; // 현재 프로세스가 실행되는 위치입니다. current working directory
process.cpuUsage&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; // 현재 cpu 사용량입니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image41.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 정보들의 사용 빈도는 그리 높지 않지만, 일반적으로 운영체제나 실행 환경별로 다른 동작을 하고 싶을 때 사용합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;process.env&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;process.nextTick&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;process.exit()&lt;/code&gt;은 중요하므로 따로 설명하겠습니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Aug 2020 19:13:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/08/node36.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/08/node36.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.5 내장객체 module, exports</title>
        <description>&lt;h2 id=&quot;345-module-exports&quot;&gt;3.4.5 module, exports&lt;/h2&gt;

&lt;p&gt;지금까지는 모듈을 만들 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;만 사용했는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;module&lt;/code&gt; 객체 말고 &lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt; 객체로도 모듈을 만들 수 있습니다.&lt;/p&gt;

&lt;p&gt;3.3절의 &lt;strong&gt;var.js&lt;/strong&gt;를 다음과 같이 수정해도 &lt;strong&gt;index.js&lt;/strong&gt;에서는 동일하게 불러올 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// var.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;홀수입니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;짝수입니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// var.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;홀수입니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;짝수입니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 위 아래는 똑같은 기능을 하는 식입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;로 한 번에 대입하는 대신, 각각의 변수를 &lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt; 객체에 하나씩 넣었습니다.&lt;br /&gt;
&lt;strong&gt;동일하게 동작하는 이유&lt;/strong&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;가 같은 객체를 참조하기 때문입니다.&lt;br /&gt;
실제로 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log(module.exports === exports)&lt;/code&gt;를 하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;가 나옵니다.&lt;br /&gt;
따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt; 객체에 &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; 함수를 넣으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에도 &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; 함수가 들어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image40.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;Warning&lt;/span&gt;&lt;/strong&gt; : exports 객체 사용 시&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt; 객체 사용 시에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;와의 &lt;strong&gt;참조 관계가 깨지지 않도록 주의&lt;/strong&gt;해야 합니다.&lt;br /&gt;
&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에는 어떤 값이든 대입해도 되지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;에는 반드시 객체처럼 속성명과 속성값을 대입해야 합니다.&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;에 다른 값을 대입하면 객체의 참조 관계가 끊겨 더 이상 모듈로 기능하지 않습니다.&lt;/p&gt;

  &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// func.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./var&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkOddOrEven&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 홀수면&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;even&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkOddOrEven&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;를 사용할 때는 객체만 사용할 수 있으므로 &lt;strong&gt;func.js&lt;/strong&gt;와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에 함수를 대입한 경우에는 
&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;로 바꿀 수 없습니다.&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;에는 참조 관계가 있으므로 한 모듈에 &lt;code class=&quot;highlighter-rouge&quot;&gt;exports&lt;/code&gt; 객체와 &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt;를 동시에 
사용하지 않는 것이 좋습니다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 08 Aug 2020 19:02:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/08/node35.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/08/node35.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.4 내장객체 __filename, __dirname</title>
        <description>&lt;h2 id=&quot;344-__filename-__dirname&quot;&gt;3.4.4 __filename, __dirname&lt;/h2&gt;

&lt;p&gt;노드에서는 파일 사이에 모듈 관계가 있는 경우가 많아 현재 파일의 경로나 파일명을 알아야 하는 경우가 있습니다.&lt;br /&gt;
노드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;__filename&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;__dirname&lt;/code&gt;이라는 키워드로 경로에 대한 정보를 제공합니다.&lt;br /&gt;
파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;__filename&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;__dirname&lt;/code&gt;을 넣어두면 실행 시 현재 파일명과 파일 경로로 바뀝니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;__filename&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;__dirname&lt;/code&gt;을 사용해봅시다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// filename.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image39.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;경로는 여러분의 경로와 다를 것입니다.&lt;br /&gt;
또한, 윈도가 아니라면 &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;로 폴더 경로가 구분될 수 있습니다.&lt;br /&gt;
이렇게 얻은 정보를 사용해서 경로 처리를 할 수도 있습니다.&lt;br /&gt;
&lt;strong&gt;하지만 경로가 문자열로 반환되기도 하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt;나 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 같은 경로 구분자 문제도 있어 보통은 이를 해결해주는 
&lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; 모듈(3.5.2절 참조)과 함께 씁니다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Aug 2020 18:02:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/08/node34.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/08/node34.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.3 내장객체 타이머</title>
        <description>&lt;h2 id=&quot;343-내장객체-타이머&quot;&gt;3.4.3 내장객체 타이머&lt;/h2&gt;

&lt;p&gt;타이머 기능을 제공하는 함수인 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;는 노드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 안에 들어 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;은 웹 브라우저에서도 자주 사용되므로 익숙할 겁니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;setTimeout(콜백 함수, 밀리초)&lt;/strong&gt; : 주어진 밀리초(1000분의 1초) 이후에 콜백함수를 실행합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;setInterval(콜백 함수, 밀리초)&lt;/strong&gt; : 주어진 밀리초마다 콜백 함수를 반복 실행합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;setImmediate(콜백 함수)&lt;/strong&gt; : 콜백 함수를 즉시 실행합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 타이머 함수들은 모두 아이디를 반환합니다.&lt;br /&gt;
아이디를 사용하여 타이머를 취소할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;clearTimeout(아이디)&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout&lt;/code&gt;을 취소합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;clearInterval(아이디)&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt;을 취소합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;clearImmediate(아이디)&lt;/strong&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;를 취소합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다음은 위 메서드들을 사용한 코드입니다.&lt;br /&gt;
코드의 실행 순서를 예측해보세요.&lt;br /&gt;
헷갈리도록 코드 순서를 섞어 놓았습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;1.5초 후 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;1초마다 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;실행되지 않습니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clearTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeout2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;immediate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setImmediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;즉시 실행&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;immediate2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setImmediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;실행되지 않습니다&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;clearImmediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;immediate2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;immediate&lt;/li&gt;
  &lt;li&gt;interval&lt;/li&gt;
  &lt;li&gt;timeout&lt;/li&gt;
  &lt;li&gt;interval&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;나머지는 취소돼서 실행되지 않는다.&lt;/p&gt;

&lt;p&gt;제일 먼저 실행되는 것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;immediate&lt;/code&gt;입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;immediate2&lt;/code&gt;는 바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;clearImmediate&lt;/code&gt;를 사용해서 취소했기 때문에 실행되지 않습니다.&lt;br /&gt;
코드 실행 1초 후에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;interval&lt;/code&gt;의 콜백이 실행됩니다.&lt;br /&gt;
코드 실행 1.5초 후에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;의 콜백이 실행될 것입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;interval&lt;/code&gt;의 콜백은 1초마다 실행되므로 코드 실행 후 2초가 지났을 때도 콜백이 시행됩니다.&lt;br /&gt;
2.5초가 지났을 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;clearTimeout&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;clearInterval&lt;/code&gt;이 각각 &lt;code class=&quot;highlighter-rouge&quot;&gt;timeout2&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;interval&lt;/code&gt;을 취소합니다.&lt;br /&gt;
따라서 코드 실행 3초 후에는 로그가 아무것도 남지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image38.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note : setImmediate(콜백)과 setTimeout(콜백,0)&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate(콜백)&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(콜백, 0)&lt;/code&gt;에 담긴 콜백 함수는 이벤트 루프를 거친 뒤 즉시 실행됩니다.&lt;br /&gt;
둘의 차이점은 무엇일까요?&lt;br /&gt;
&lt;strong&gt;특수한 경우&lt;/strong&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(콜백, 0)&lt;/code&gt;보다 먼저 실행됩니다.&lt;br /&gt;
&lt;strong&gt;파일 시스템 접근, 네트워킹 같은 I/O 작업의 콜백 함수 안에서 타이머를 호출하는 경우입니다.&lt;/strong&gt;&lt;br /&gt;
하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;가 항상 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(콜백, 0)&lt;/code&gt;보다 먼저 호출되는 것은 아니라는 사실만 알아두세요.&lt;br /&gt;
헷갈리지 않도록 &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout(콜백, 0)&lt;/code&gt;은 사용하지 않는 것을 권장합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setImmediate&lt;/code&gt;는 브라우저에선 지원을 안하는데..? MDN 보면 IE 10 부터만 지원하는 걸로 나와있음.&lt;/p&gt;

</description>
        <pubDate>Fri, 07 Aug 2020 12:05:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/07/node33.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/07/node33.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.2 내장객체 console</title>
        <description>&lt;h2 id=&quot;342-내장객체-console&quot;&gt;3.4.2 내장객체 console&lt;/h2&gt;

&lt;p&gt;지금까지 사용했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt;도 노드에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 안에 들어 있습니다.&lt;br /&gt;
브라우저에서의 &lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt;과 거의 비슷합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt; 객체는 보통 &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;디버깅&lt;/span&gt;&lt;/strong&gt;을 위해 사용됩니다.&lt;br /&gt;
개발 중 &lt;strong&gt;&lt;span style=&quot;color:blue&quot;&gt;1) 변수에 값이 제대로 들어 있나 확인하기 위해 사용&lt;/span&gt;&lt;/strong&gt;하기도 하고, 
&lt;strong&gt;&lt;span style=&quot;color:blue&quot;&gt;2) 에러 발생 시 에러 내용을 콘솔에 표시하기 위해서도 사용&lt;/span&gt;&lt;/strong&gt;하며, 
&lt;strong&gt;&lt;span style=&quot;color:blue&quot;&gt;3) 코드 실행 시간을 알아보려고 할 때도 사용&lt;/span&gt;&lt;/strong&gt;합니다.&lt;br /&gt;
대표적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log&lt;/code&gt; 메서드가 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;console.log&lt;/code&gt;는 지금껏 계속 사용했으므로 익숙할 것입니다.&lt;br /&gt;
다른 로깅 함수들도 알아봅시다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;outside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;inside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;전체 시간&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;평범한 로그입니다. 쉼표로 구분해 여러 값을 찍을 수 있습니다.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;에러 메시지는 console.error에 담아주세요&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;depth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;시간 측정&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;시간 측정&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;에러 위치 추적&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;전체 시간&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image35.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/nodebook/image36.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;console.time(레이블)&lt;/strong&gt; : &lt;strong&gt;console.timeEnd(레이블)&lt;/strong&gt;과 대응되어 &lt;strong&gt;같은 레이블을 가진 &lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;timeEnd&lt;/code&gt; 사이의 시간을 측정&lt;/strong&gt;합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;console.log(내용)&lt;/strong&gt; : 평범한 로그를 콘솔에 표시합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log(내용, 내용, ...)&lt;/code&gt;처럼 여러 내용을 동시에 표시할 수도 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;console.error(에러 내용)&lt;/strong&gt; : 에러를 콘솔에 표시합니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;console.dir(객체, 옵션)&lt;/strong&gt; : 객체를 콘솔에 표시할 때 사용합니다. &lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;첫 번째 인자로 표시할 객체&lt;/span&gt;&lt;/strong&gt;를 넣고, 
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;두 번째 인자로 옵션&lt;/span&gt;&lt;/strong&gt;을 넣습니다. 옵션의 &lt;code class=&quot;highlighter-rouge&quot;&gt;colors&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;로 하면 콘솔에 색이 추가되어 보기가 한결 편해집니다. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;depth&lt;/code&gt;는 객체 안의 객체를 몇 단계까지 보여줄지를 결정합니다. 기본값은 2입니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;console.trace(레이블)&lt;/strong&gt; : 에러가 어디서 발생해쓴ㄴ지 추적할 수 있게 해줍니다. 보통은 에러발생 시 에러 위치를 알려주므로 자주 사용하지는 않지만, 
위치가 나오지 않는다면 사용할만합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;코드를 실행하면 노드 콘솔에는 다음과 같이 표시됩니다.&lt;br /&gt;
단, &lt;code class=&quot;highlighter-rouge&quot;&gt;console.time&lt;/code&gt;의 시간이나 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.trace&lt;/code&gt;의 경로는 사용자의 컴퓨터 환경에 따라 다를 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image37.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;편리한 디버깅을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt; 객체에는 지금도 새로운 메서드들이 추가되고 있습니다.&lt;br /&gt;
실제로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;console.js&lt;/code&gt;에서 소개한 메서드보다 더 다양한 메서드가 있습니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Aug 2020 01:01:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/06/node32.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/06/node32.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>3.4.1 내장객체 global</title>
        <description>&lt;h2 id=&quot;341-내장객체-global&quot;&gt;3.4.1 내장객체 global&lt;/h2&gt;

&lt;p&gt;먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체입니다.&lt;br /&gt;
브라우저의 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;와 같은 전역 객체입니다.&lt;br /&gt;
전역 객체이므로 모든 파일에서 접근할 수 있습니다.&lt;br /&gt;
또한, &lt;code class=&quot;highlighter-rouge&quot;&gt;window.open&lt;/code&gt; 메서드를 그냥 &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt;으로 호출할 수 있는 것처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt;도 생략할 수 있습니다.&lt;br /&gt;
&lt;strong&gt;이전 절에서 사용했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; 함수에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;global.require&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt;이 생략된 것입니다.&lt;/strong&gt;&lt;br /&gt;
노드 콘솔에 로그를 기록하는 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;console&lt;/code&gt; 객체도 원래는 &lt;code class=&quot;highlighter-rouge&quot;&gt;global.console&lt;/code&gt;&lt;/strong&gt;입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 내부에는 매우 많은 속성이 들어 있습니다.&lt;br /&gt;
이 절에서 배울 내용들이 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 안에 있습니다.&lt;br /&gt;
내부를 보려면 &lt;strong&gt;REPL&lt;/strong&gt;을 이용해야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;NOTE : 노드의 window, document 객체&lt;/strong&gt;&lt;br /&gt;
노드에는 DOM이나 BOM이 없어 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;document&lt;/code&gt; 객체를 사용할 수 없습니다.&lt;br /&gt;
노드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;document&lt;/code&gt;를 사용하면 에러가 발생합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image33.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;노드 버전에 따라 콘솔 내용이 다를 수 있습니다.&lt;/strong&gt;&lt;br /&gt;
내용이 너무 많아 줄였지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체 안에는 수십 가지의 속성이 담겨 있습니다.&lt;br /&gt;
모두 알 필요는 없고, 자주 사용하는 속성들만 이번 절에서 알아봅니다.&lt;/p&gt;

&lt;p&gt;전역 객체라는 점을 이용하여 간단한 데이터를 파일끼리 공유할 때 사용하기도 합니다.&lt;br /&gt;
&lt;strong&gt;globalA.js&lt;/strong&gt;와 &lt;strong&gt;globalB.js&lt;/strong&gt;를 같은 폴더에 생성해봅시다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// globalA.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// globalB.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./globalA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;안녕하세요&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;globalA&lt;/strong&gt; 모듈의 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;global.message&lt;/code&gt; 값을 반환합니다.&lt;br /&gt;
&lt;strong&gt;globalB.js&lt;/strong&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체에 속성명이 &lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt;인 값을 대입하고 &lt;strong&gt;globalA&lt;/strong&gt; 모듈의 함수를 호출합니다.&lt;br /&gt;
콘솔 결과를 보면 &lt;strong&gt;globalB&lt;/strong&gt;에서 넣은 &lt;code class=&quot;highlighter-rouge&quot;&gt;global.message&lt;/code&gt; 값을 &lt;strong&gt;globalA&lt;/strong&gt;에서도 접근함을 알 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/nodebook/image34.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;Warning&lt;/span&gt; global 객체의 남용&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체의 속성에 값을 대입하여 파일 간에 데이터를 공유할 수 있지만, 이를 남용하지는 마세요.&lt;br /&gt;
프로그램의 규모가 커질수록 어떤 파일에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;global&lt;/code&gt; 객체에 값을 대입했는지 찾기 힘들어 유지보수에 어려움을 겪게 되기 때문입니다.&lt;br /&gt;
다른 파일의 값을 사용하고 싶다면 모듈 형식으로 만들어서 명시적으로 값을 불러와 사용하는 것이 좋습니다.&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 06 Aug 2020 00:47:00 +0900</pubDate>
        <link>http://localhost:4000/nodebook/2020/08/06/node31.html</link>
        <guid isPermaLink="true">http://localhost:4000/nodebook/2020/08/06/node31.html</guid>
        
        
        <category>nodebook</category>
        
      </item>
    
      <item>
        <title>iPad 인식 테스트 결과</title>
        <description>&lt;h2 id=&quot;ipad-인식-테스트-결과&quot;&gt;iPad 인식 테스트 결과&lt;/h2&gt;

&lt;h3 id=&quot;방법1-멀티터치-이벤트-구분방식&quot;&gt;방법1. 멀티터치 이벤트 구분방식&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isIOS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/iPad|iPhone|iPod/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;platform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;MacIntel&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maxTouchPoints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MSStream&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;멀티터치 스크린 지원하는지 안하는지로 iPad인지 아닌지 구분&lt;/li&gt;
  &lt;li&gt;참고 사이트 : &lt;a href=&quot;https://stackoverflow.com/questions/9038625/detect-if-device-is-ios&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/9038625/detect-if-device-is-ios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;테스트결과&quot;&gt;테스트결과&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;아이패드 프로 iOS 13 이상 - iOS 모바일 정상 인식&lt;/li&gt;
  &lt;li&gt;아이패드 프로 iOS 12.X 버전 - iOS 모바일 정상 인식&lt;/li&gt;
  &lt;li&gt;아이폰X - iOS 모바일 정상 인식&lt;/li&gt;
  &lt;li&gt;맥북 - iOS 모바일 인식 안함&lt;/li&gt;
  &lt;li&gt;갤럭시 s10 - iOS 모바일 인식 안함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;위-방법의-리스크&quot;&gt;위 방법의 리스크&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;터치스크린이 지원되는 맥북이 나온다면 해당 맥북에서도 모바일 페이지로 노출될 가능성이 있음&lt;/li&gt;
  &lt;li&gt;현재는 터치스크린을 지원하는 맥북은 없는 것으로 확인 (애플에서도 아직 계획 없는걸로 보임)&lt;/li&gt;
  &lt;li&gt;하지만 노트북 시장의 추세가 터치스크린을 지원하는 것이라고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;관련-기사-2019-12-19-기사&quot;&gt;관련 기사 (2019. 12. 19 기사)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.itworld.co.kr/opinion/139856&quot; target=&quot;_blank&quot;&gt;http://www.itworld.co.kr/opinion/139856&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;즉, 현재로선 위 방법을 통해 분기처리를 해도 될 것 같습니다. (애플이 갑자기 터치스크린을 지원하는 맥북을 출시안한다면..)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;방법-2-그래픽-드라이버-구분방식-추측&quot;&gt;방법 2. 그래픽 드라이버 구분방식 (추측)&lt;/h3&gt;

&lt;p&gt;참고 사이트&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/API/WEBGL_debug_renderer_info&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/ko/docs/Web/API/WEBGL_debug_renderer_info&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/CsabaConsulting/DetectMobileTest&quot; target=&quot;_blank&quot;&gt;https://github.com/CsabaConsulting/DetectMobileTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위와 같이 iPad와 Mac을 구분하는 소스가 들어있습니다.
테스트 결과 iPad(iOS 13이상)를 구분하는 것으로 확인됐습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;장점&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;24일 전에 업데이트 기록이 있음 (최신)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;단점&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;정확히 어떤 원리에 의해 iPad를 구분하는 것인지 파악이안됨&lt;/li&gt;
  &lt;li&gt;그래픽 드라이브 정보를 읽어서 구분하는 것이라고 추측&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;개발쪽과 상의가 필요할 것 같습니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Aug 2020 11:38:00 +0900</pubDate>
        <link>http://localhost:4000/project/2020/08/05/project4.html</link>
        <guid isPermaLink="true">http://localhost:4000/project/2020/08/05/project4.html</guid>
        
        
        <category>project</category>
        
      </item>
    
  </channel>
</rss>
