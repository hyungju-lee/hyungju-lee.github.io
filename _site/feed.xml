<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-11T12:33:41+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">LHJ</title><subtitle>coding blog</subtitle><entry><title type="html">1.2 사용할 프로그램</title><link href="http://localhost:4000/javascript/2020/04/11/javascript03/" rel="alternate" type="text/html" title="1.2 사용할 프로그램" /><published>2020-04-11T12:00:00+09:00</published><updated>2020-04-11T12:00:00+09:00</updated><id>http://localhost:4000/javascript/2020/04/11/javascript03</id><content type="html" xml:base="http://localhost:4000/javascript/2020/04/11/javascript03/">&lt;p&gt;목수는 톱이 있어야 책상을 만들 수 있고, 우리는 몇 가지 프로그램이 있어야 소프트웨어를 만들 수 있습니다.&lt;br /&gt;
다행히 많은 준비가 필요하지는 않습니다.&lt;br /&gt;
이번 장에서 우리에게 필요한 것은 브라우저와 텍스트 에디터뿐입니다.&lt;/p&gt;

&lt;p&gt;이 소식을 전하게 되어 무척 기쁩니다.&lt;br /&gt;
현재 사용되는 브라우저는 모두 이 장의 예제를 잘 실행할 수 있습니다.&lt;br /&gt;
심지어 오랫동안 프로그래머들을 괴롭혔던 인터넷 익스플로러도 충분히 발전해서&lt;br /&gt;
이제는 크롬이나 파이어폭스, 사파리, 오페라에 뒤떨어지지 않습니다.&lt;br /&gt;
필자는 파이어폭스를 선택했고, 프로그램을 배울 때 도움이 되는 파이어폭스의 기능을 설명할 겁니다.&lt;br /&gt;
다른 브라우저에도 이런 기능이 있지만,&lt;br /&gt;
이 책에서 브라우저의 기능을 설명할 때는 파이어폭스를 기준으로 설명합니다.&lt;br /&gt;
따라서 이 책을 공부할 때는 파이어폭스를 사용하는 게 가장 쉽습니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">목수는 톱이 있어야 책상을 만들 수 있고, 우리는 몇 가지 프로그램이 있어야 소프트웨어를 만들 수 있습니다. 다행히 많은 준비가 필요하지는 않습니다. 이번 장에서 우리에게 필요한 것은 브라우저와 텍스트 에디터뿐입니다. 이 소식을 전하게 되어 무척 기쁩니다. 현재 사용되는 브라우저는 모두 이 장의 예제를 잘 실행할 수 있습니다. 심지어 오랫동안 프로그래머들을 괴롭혔던 인터넷 익스플로러도 충분히 발전해서 이제는 크롬이나 파이어폭스, 사파리, 오페라에 뒤떨어지지 않습니다. 필자는 파이어폭스를 선택했고, 프로그램을 배울 때 도움이 되는 파이어폭스의 기능을 설명할 겁니다. 다른 브라우저에도 이런 기능이 있지만, 이 책에서 브라우저의 기능을 설명할 때는 파이어폭스를 기준으로 설명합니다. 따라서 이 책을 공부할 때는 파이어폭스를 사용하는 게 가장 쉽습니다.</summary></entry><entry><title type="html">1.1 시작은 브라우저에서</title><link href="http://localhost:4000/javascript/2020/04/11/javascript02/" rel="alternate" type="text/html" title="1.1 시작은 브라우저에서" /><published>2020-04-11T12:00:00+09:00</published><updated>2020-04-11T12:00:00+09:00</updated><id>http://localhost:4000/javascript/2020/04/11/javascript02</id><content type="html" xml:base="http://localhost:4000/javascript/2020/04/11/javascript02/">&lt;p&gt;이 블로그에서는 서버 쪽, 스크립팅, 데스크톱, 브라우저에서의 활용 등 현재 자바스크립트가 쓰이는 모든 분야를 다루겠지만,&lt;br /&gt;
전통적으로 그래 왔고 현실적이기도 한 이유로 브라우저 기반 프로그램부터 만들겠습니다.&lt;/p&gt;

&lt;p&gt;브라우저 기반 프로그램부터 만드는 이유 중에는 그래픽 라이브러리를 사용하기가 편리하다는 점도 있습니다.&lt;br /&gt;
사람은 시각적인 동물이므로 프로그래밍 개념과 시각적 요소를 결합하면 배우기가 훨씬 쉬워집니다.&lt;br /&gt;
이 책을 공부하는 동안 텍스트를 노려보며 보내는 시간이 많겠지만,&lt;br /&gt;
처음에는 흥미로워 보이는 것들로 시작하겠습니다.&lt;br /&gt;
이 예제를 선택한 배경에는 &lt;strong&gt;이벤트 주도 프로그래밍(event-driven programming)&lt;/strong&gt; 같은&lt;br /&gt;
아주 중요한 개념으로 자연스럽게 연결된다는 이유도 있습니다.&lt;/p&gt;

&lt;p&gt;이벤트 주도 프로그래밍은 이후 몇 장에서 설명할 겁니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">이 블로그에서는 서버 쪽, 스크립팅, 데스크톱, 브라우저에서의 활용 등 현재 자바스크립트가 쓰이는 모든 분야를 다루겠지만, 전통적으로 그래 왔고 현실적이기도 한 이유로 브라우저 기반 프로그램부터 만들겠습니다. 브라우저 기반 프로그램부터 만드는 이유 중에는 그래픽 라이브러리를 사용하기가 편리하다는 점도 있습니다. 사람은 시각적인 동물이므로 프로그래밍 개념과 시각적 요소를 결합하면 배우기가 훨씬 쉬워집니다. 이 책을 공부하는 동안 텍스트를 노려보며 보내는 시간이 많겠지만, 처음에는 흥미로워 보이는 것들로 시작하겠습니다. 이 예제를 선택한 배경에는 이벤트 주도 프로그래밍(event-driven programming) 같은 아주 중요한 개념으로 자연스럽게 연결된다는 이유도 있습니다. 이벤트 주도 프로그래밍은 이후 몇 장에서 설명할 겁니다.</summary></entry><entry><title type="html">Hello, World</title><link href="http://localhost:4000/javascript/2020/04/11/javascript01/" rel="alternate" type="text/html" title="Hello, World" /><published>2020-04-11T10:41:02+09:00</published><updated>2020-04-11T10:41:02+09:00</updated><id>http://localhost:4000/javascript/2020/04/11/javascript01</id><content type="html" xml:base="http://localhost:4000/javascript/2020/04/11/javascript01/">&lt;h2 id=&quot;hello-world&quot;&gt;&lt;strong&gt;Hello, World&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;프로그래밍 책은 대개 터미널에 “Hello, World” 를 출력하는 고전적인 예제로 시작합니다.&lt;br /&gt;
이 예제는 벨 연구소에서 일하던 컴퓨터 과학자 &lt;strong&gt;브라이언 커니핸&lt;/strong&gt;이 1972년 처음 사용 했고,&lt;br /&gt;
책으로 인쇄된 건 1978년 출간된 &lt;strong&gt;C 언어 프로그래밍(제2판) (대영사, 2002)&lt;/strong&gt; 이 처음입니다.&lt;/p&gt;

&lt;p&gt;최근 점점 복잡해지는 프로그래밍 환경에서 “Hello, World”는 구식이라고 생각할 수도 있겠지만,&lt;br /&gt;
이 단순한 구절에 숨은 의미는 시간이 흘러도 퇴색되지 않습니다.&lt;br /&gt;
이 구절은 당신이 신에게서 불을 훔쳐내 인간에게 선물한 프로메테우스가 될 수도,&lt;br /&gt;
진흙 인형에 진정한 신의 이름을 새기던 랍비가 될 수도,&lt;br /&gt;
자신의 피조물에 생명을 불어넣던 프랑켄슈타인 박사가 될 수도 있게 합니다.&lt;/p&gt;

&lt;p&gt;이것은 그런 위대한 창조와 신기원을 의미합니다.&lt;br /&gt;
필자가 프로그래밍에 끌린 것도 이 구절의 울림 때문이었습니다.&lt;br /&gt;
언젠가 훌륭한 프로그래머(당신일 수도 있겠죠)가 최초로 인공지능 생명체를 만들고,&lt;br /&gt;
그 생명체가 처음으로 입을 열어 하는 말이 “Hello, World”일 수도 있습니다.&lt;/p&gt;

&lt;p&gt;1장에서는 브라이언 커니핸이 44년 전에 시작한 전통과 현재의 프로그래머가&lt;br /&gt;
사용할 수 있는 최신 도구 사이에서 균형을 잡을 겁니다.&lt;br /&gt;
쉽게 말해 화면에 “Hello, World”를 출력하는 건 마찬가지지만, &lt;br /&gt;
1972년의 프로그래머가 사용하던 고풍스러운 도구를 쓰지는 않을 겁니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">Hello, World 프로그래밍 책은 대개 터미널에 “Hello, World” 를 출력하는 고전적인 예제로 시작합니다. 이 예제는 벨 연구소에서 일하던 컴퓨터 과학자 브라이언 커니핸이 1972년 처음 사용 했고, 책으로 인쇄된 건 1978년 출간된 C 언어 프로그래밍(제2판) (대영사, 2002) 이 처음입니다. 최근 점점 복잡해지는 프로그래밍 환경에서 “Hello, World”는 구식이라고 생각할 수도 있겠지만, 이 단순한 구절에 숨은 의미는 시간이 흘러도 퇴색되지 않습니다. 이 구절은 당신이 신에게서 불을 훔쳐내 인간에게 선물한 프로메테우스가 될 수도, 진흙 인형에 진정한 신의 이름을 새기던 랍비가 될 수도, 자신의 피조물에 생명을 불어넣던 프랑켄슈타인 박사가 될 수도 있게 합니다. 이것은 그런 위대한 창조와 신기원을 의미합니다. 필자가 프로그래밍에 끌린 것도 이 구절의 울림 때문이었습니다. 언젠가 훌륭한 프로그래머(당신일 수도 있겠죠)가 최초로 인공지능 생명체를 만들고, 그 생명체가 처음으로 입을 열어 하는 말이 “Hello, World”일 수도 있습니다. 1장에서는 브라이언 커니핸이 44년 전에 시작한 전통과 현재의 프로그래머가 사용할 수 있는 최신 도구 사이에서 균형을 잡을 겁니다. 쉽게 말해 화면에 “Hello, World”를 출력하는 건 마찬가지지만, 1972년의 프로그래머가 사용하던 고풍스러운 도구를 쓰지는 않을 겁니다.</summary></entry><entry><title type="html">컴퓨터적 사고방식 및 공부 마인드</title><link href="http://localhost:4000/javascript/2020/04/11/javascript00/" rel="alternate" type="text/html" title="컴퓨터적 사고방식 및 공부 마인드" /><published>2020-04-11T08:00:00+09:00</published><updated>2020-04-11T08:00:00+09:00</updated><id>http://localhost:4000/javascript/2020/04/11/javascript00</id><content type="html" xml:base="http://localhost:4000/javascript/2020/04/11/javascript00/">&lt;h2 id=&quot;모든-걸-이해해야-한다는-강박관념에-빠지지-말자&quot;&gt;&lt;strong&gt;모든 걸 이해해야 한다는 강박관념에 빠지지 말자.&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;공부할 때 흔히 하는 실수 같습니다.&lt;br /&gt;
모든 것을 완벽하게 이해하고 넘어가려는 행동 말입니다.  &lt;br /&gt;
물론 모든 것을 완벽하게 이해하고 넘어가는 것은 좋습니다. 이해할 수만 있다면 말입니다.  &lt;br /&gt;
하지만 처음부터 모든 것을 완벽하게 소화해낼 순 없습니다.  &lt;br /&gt;
무엇이든지 반복 학습이 중요합니다.&lt;br /&gt;
해당 블로그 글을 끝까지 읽으신다면 자연스레 처음에 이해 안가던 부분이 이해가 되실 겁니다.&lt;/p&gt;

&lt;h2 id=&quot;컴퓨터적-사고방식&quot;&gt;&lt;strong&gt;컴퓨터적 사고방식&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;프로그래밍 경험이 많지 않다면, 컴퓨터가 얼마나 곧이곧대로 행동하는지 깨닫게 되면서 절망에 빠질 일이 많을 겁니다.&lt;br /&gt;
사람의 두뇌는 혼란스러운 일도 잘 처리할 수 있지만 컴퓨터는 이런 면에서는 빵점입니다.&lt;br /&gt;
제가 이 글을 쓰면서 문법이 틀리더라도, 읽으시는 분들은 저의 작문 실력을 의심할지언정 제가 어떤 말을 하려는 지는 이해할 수 있을 겁니다. 하지만 자바스크립트는(모든 프로그래밍 언어가 그렇지만) 혼란스러운 코드를 이해하는 능력은 전혀 없습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;대소문자를 틀리건, 오타를 내건, 단어와 구두점의 순서가 조금 바뀌는 등의 작은 실수도 모두 에러 또는 예상치 못한 결과를 초래합니다.&lt;/li&gt;
  &lt;li&gt;문제가 생겼다면 글에 있는 코드를 전부 정확히 옮겨 썼는지 확인해 보십시오.&lt;/li&gt;
  &lt;li&gt;세미콜론과 콜론을 헷갈리면 안되고, 마침표를 쓸 자리에 쉼표를 써도 안됩니다.&lt;/li&gt;
  &lt;li&gt;큰 따옴표와 작은 따옴표를 뒤섞어도 안됩니다.&lt;/li&gt;
  &lt;li&gt;대소문자도 확인해야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;경험이 쌓이면 어느 정도 자유롭게 써도 되는 부분과 한글자 한글자를 정확히 써야 하는 부분을 구별할 수 있게 되겠지만,&lt;br /&gt;
일단 지금은 블로그에 있는 내용을 그대로 따라 해야 머리를 쥐어뜯을 일이 줄어들 겁니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">모든 걸 이해해야 한다는 강박관념에 빠지지 말자. 공부할 때 흔히 하는 실수 같습니다. 모든 것을 완벽하게 이해하고 넘어가려는 행동 말입니다. 물론 모든 것을 완벽하게 이해하고 넘어가는 것은 좋습니다. 이해할 수만 있다면 말입니다. 하지만 처음부터 모든 것을 완벽하게 소화해낼 순 없습니다. 무엇이든지 반복 학습이 중요합니다. 해당 블로그 글을 끝까지 읽으신다면 자연스레 처음에 이해 안가던 부분이 이해가 되실 겁니다. 컴퓨터적 사고방식 프로그래밍 경험이 많지 않다면, 컴퓨터가 얼마나 곧이곧대로 행동하는지 깨닫게 되면서 절망에 빠질 일이 많을 겁니다. 사람의 두뇌는 혼란스러운 일도 잘 처리할 수 있지만 컴퓨터는 이런 면에서는 빵점입니다. 제가 이 글을 쓰면서 문법이 틀리더라도, 읽으시는 분들은 저의 작문 실력을 의심할지언정 제가 어떤 말을 하려는 지는 이해할 수 있을 겁니다. 하지만 자바스크립트는(모든 프로그래밍 언어가 그렇지만) 혼란스러운 코드를 이해하는 능력은 전혀 없습니다. 대소문자를 틀리건, 오타를 내건, 단어와 구두점의 순서가 조금 바뀌는 등의 작은 실수도 모두 에러 또는 예상치 못한 결과를 초래합니다. 문제가 생겼다면 글에 있는 코드를 전부 정확히 옮겨 썼는지 확인해 보십시오. 세미콜론과 콜론을 헷갈리면 안되고, 마침표를 쓸 자리에 쉼표를 써도 안됩니다. 큰 따옴표와 작은 따옴표를 뒤섞어도 안됩니다. 대소문자도 확인해야 합니다. 경험이 쌓이면 어느 정도 자유롭게 써도 되는 부분과 한글자 한글자를 정확히 써야 하는 부분을 구별할 수 있게 되겠지만, 일단 지금은 블로그에 있는 내용을 그대로 따라 해야 머리를 쥐어뜯을 일이 줄어들 겁니다.</summary></entry><entry><title type="html">Jekyll 설치 및 세팅</title><link href="http://localhost:4000/jekyll/2020/02/11/jekyll02/" rel="alternate" type="text/html" title="Jekyll 설치 및 세팅" /><published>2020-02-11T08:00:00+09:00</published><updated>2020-02-11T08:00:00+09:00</updated><id>http://localhost:4000/jekyll/2020/02/11/jekyll02</id><content type="html" xml:base="http://localhost:4000/jekyll/2020/02/11/jekyll02/">&lt;h2 id=&quot;jekyll-설치-및-세팅하기&quot;&gt;Jekyll 설치 및 세팅하기&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img05.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll&lt;/code&gt; 명령어로 jekyll을 설치합니다.&lt;br /&gt;
jekyll template 라는 검색어를 통해 마음에 드는 template을 다운받습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;원하는 template를 다운받고 압축을 푼 후, gemfile을 제외한 나머지 파일을 모두 jekyll root 폴더로 복붙합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img07.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 이미지는 다운받은 template의 gemfile 내용입니다.&lt;br /&gt;
확인하면 필요 모듈이 적혀있습니다.&lt;br /&gt;
해당 내용을 내 jekyll root 폴더에 있는 gemfile에 옮겨 적습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img06.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; 란 명령어로 server를 작동시킵니다.&lt;br /&gt;
그리고 &lt;a href=&quot;http://localhost:4000&quot;&gt;localhost:4000&lt;/a&gt; 으로 접속합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img08.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 위와 같은 template이 적용된 jekyll 블로그로 접속될 것입니다.&lt;br /&gt;
&lt;strong&gt;admin&lt;/strong&gt; 페이지로 접속하기 위해선&lt;br /&gt;
gemfile 파일에 다음 문구를 추가합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;gem 'jekyll-admin', group:jekyll_plugins&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img09.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; 로 다시 서버를 실행시키고&lt;br /&gt;
&lt;a href=&quot;http://localhost:4000/admin&quot;&gt;localhost:4000/admin&lt;/a&gt; 페이지로 접속합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img10.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그럼 이러한 admin 페이지로 접속이 가능해집니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">Jekyll 설치 및 세팅하기 gem install jekyll 명령어로 jekyll을 설치합니다. jekyll template 라는 검색어를 통해 마음에 드는 template을 다운받습니다. http://jekyllthemes.org/ 원하는 template를 다운받고 압축을 푼 후, gemfile을 제외한 나머지 파일을 모두 jekyll root 폴더로 복붙합니다. 위 이미지는 다운받은 template의 gemfile 내용입니다. 확인하면 필요 모듈이 적혀있습니다. 해당 내용을 내 jekyll root 폴더에 있는 gemfile에 옮겨 적습니다. 그리고 jekyll serve 란 명령어로 server를 작동시킵니다. 그리고 localhost:4000 으로 접속합니다. 그럼 위와 같은 template이 적용된 jekyll 블로그로 접속될 것입니다. admin 페이지로 접속하기 위해선 gemfile 파일에 다음 문구를 추가합니다. gem 'jekyll-admin', group:jekyll_plugins 그리고 jekyll serve 로 다시 서버를 실행시키고 localhost:4000/admin 페이지로 접속합니다. 그럼 이러한 admin 페이지로 접속이 가능해집니다.</summary></entry><entry><title type="html">Jekyll 사용환경 만들기</title><link href="http://localhost:4000/jekyll/2020/02/10/jekyll01/" rel="alternate" type="text/html" title="Jekyll 사용환경 만들기" /><published>2020-02-10T22:00:00+09:00</published><updated>2020-02-10T22:00:00+09:00</updated><id>http://localhost:4000/jekyll/2020/02/10/jekyll01</id><content type="html" xml:base="http://localhost:4000/jekyll/2020/02/10/jekyll01/">&lt;h2 id=&quot;jekyll-사용환경-만들기&quot;&gt;Jekyll 사용환경 만들기&lt;/h2&gt;

&lt;h3 id=&quot;1-ruby-다운로드&quot;&gt;1. Ruby 다운로드&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img00.jpg&quot; alt=&quot;이미지&quot; /&gt;
&lt;img src=&quot;/assets/img/jekyll/img01.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;먼저 Ruby를 설치해 Jekyll 을 사용할 수 있는 환경을 만들어야합니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;https://rubyinstaller.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위 사이트로 접속해 Ruby를 다운받으십시오.&lt;/p&gt;

&lt;h3 id=&quot;2-ruby-설치&quot;&gt;2. Ruby 설치&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img02.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;UTF-8 엔코딩에 체크한 후&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img03.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설치를 진행합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img04.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 Ruby가 제대로 설치되었는지 &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby -v&lt;/code&gt; 명령어를 통해 확인해봅니다.&lt;br /&gt;
위는 git bash 창입니다. &lt;br /&gt;
&lt;strong&gt;Ruby를 설치했어도 &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby -v&lt;/code&gt; 명령어가 &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby: command not found&lt;/code&gt;라는 오류가 발생하면서 실행이 안될 수도 있습니다.&lt;/strong&gt;&lt;br /&gt;
그럴 때는 git bash창 말고 &lt;strong&gt;cmd&lt;/strong&gt; 창을 이용합니다.&lt;br /&gt;
그러면 &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby -v&lt;/code&gt; 명령어를 제대로 인식할 수도 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/jekyll/img04-0.jpg&quot; alt=&quot;이미지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;cmd 창을 활용하는 경우는 해당 드라이브로 가는 명령어(&lt;code class=&quot;highlighter-rouge&quot;&gt;드라이브이름:&lt;/code&gt;), 폴더 옮기는 명령어 &lt;code class=&quot;highlighter-rouge&quot;&gt;cd (폴더명)&lt;/code&gt; 등을 이용해 Jekyll 모듈을 사용할 root 폴더로 직접 이동해야됩니다.&lt;/p&gt;

&lt;p&gt;위와 같이 ruby 설치와 ruby가 제대로 설치되었는지 확인 작업까지 마치면 Jekyll 사용환경이 완성된 겁니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">Jekyll 사용환경 만들기 1. Ruby 다운로드 먼저 Ruby를 설치해 Jekyll 을 사용할 수 있는 환경을 만들어야합니다. https://rubyinstaller.org/ 위 사이트로 접속해 Ruby를 다운받으십시오. 2. Ruby 설치 UTF-8 엔코딩에 체크한 후 설치를 진행합니다. 그리고 Ruby가 제대로 설치되었는지 ruby -v 명령어를 통해 확인해봅니다. 위는 git bash 창입니다. Ruby를 설치했어도 ruby -v 명령어가 ruby: command not found라는 오류가 발생하면서 실행이 안될 수도 있습니다. 그럴 때는 git bash창 말고 cmd 창을 이용합니다. 그러면 ruby -v 명령어를 제대로 인식할 수도 있습니다. cmd 창을 활용하는 경우는 해당 드라이브로 가는 명령어(드라이브이름:), 폴더 옮기는 명령어 cd (폴더명) 등을 이용해 Jekyll 모듈을 사용할 root 폴더로 직접 이동해야됩니다. 위와 같이 ruby 설치와 ruby가 제대로 설치되었는지 확인 작업까지 마치면 Jekyll 사용환경이 완성된 겁니다.</summary></entry><entry><title type="html">Jekyll(지킬) 이란?</title><link href="http://localhost:4000/jekyll/2020/02/10/jekyll00/" rel="alternate" type="text/html" title="Jekyll(지킬) 이란?" /><published>2020-02-10T21:30:00+09:00</published><updated>2020-02-10T21:30:00+09:00</updated><id>http://localhost:4000/jekyll/2020/02/10/jekyll00</id><content type="html" xml:base="http://localhost:4000/jekyll/2020/02/10/jekyll00/">&lt;h2 id=&quot;jekyll-이란&quot;&gt;Jekyll 이란?&lt;/h2&gt;

&lt;p&gt;평범한 텍스트 파일을 정적 웹사이트 또는 블로그로 변신시켜 주는 모듈입니다.&lt;/p&gt;

&lt;h3 id=&quot;특징&quot;&gt;특징&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;심플함&lt;/strong&gt;&lt;br /&gt;
데이터베이스도 댓글 관리도, 성가신 업데이트도 없습니다. 오직 당신의 컨텐츠뿐입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;정적&lt;/strong&gt;&lt;br /&gt;
Markdown (또는 Textile), Liquid, HTML &amp;amp; CSS 를 넣으면, 당장 게시할 수 있는 사이트가 완성됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;블로그 지향적&lt;/strong&gt;&lt;br /&gt;
고유주소, 카테고리, 페이지, 포스트, 사용자 레이아웃 등의 기능이 기본적으로 포함되어 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">Jekyll 이란? 평범한 텍스트 파일을 정적 웹사이트 또는 블로그로 변신시켜 주는 모듈입니다. 특징 심플함 데이터베이스도 댓글 관리도, 성가신 업데이트도 없습니다. 오직 당신의 컨텐츠뿐입니다. 정적 Markdown (또는 Textile), Liquid, HTML &amp;amp; CSS 를 넣으면, 당장 게시할 수 있는 사이트가 완성됩니다. 블로그 지향적 고유주소, 카테고리, 페이지, 포스트, 사용자 레이아웃 등의 기능이 기본적으로 포함되어 있습니다.</summary></entry></feed>