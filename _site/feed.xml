<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 06 Dec 2020 22:51:07 +0900</pubDate>
    <lastBuildDate>Sun, 06 Dec 2020 22:51:07 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>17-4. Object 오브젝트(ES5 기준) / getter와 setter, get 속성, set 속성</title>
        <description>&lt;h2 id=&quot;17-4-object-오브젝트es5-기준--getter와-setter-get-속성-set-속성&quot;&gt;17-4. Object 오브젝트(ES5 기준) / getter와 setter, get 속성, set 속성&lt;/h2&gt;

&lt;h2 id=&quot;get-속성&quot;&gt;get 속성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;getter&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;OOP 용어&lt;br /&gt;
즉, 객체지향을 지원하는 프로그래밍 언어에서 사용할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;var result = obj.book; 코드를 만나면 (book 프로퍼티네임에 value를 설정안하고 get설정)&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 아래 book 프로퍼티로 값을 구하려는데 위에 value 코드가 없다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 프로퍼티 값을 부를 때 value 속성이 없으면 get을 호출한다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 이것이 바로 getter이다.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// JS책&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;obj.book의 get 함수가 호출되며&lt;/li&gt;
      &lt;li&gt;get 함수에서 “JS책”을 반환&lt;/li&gt;
      &lt;li&gt;반환된 “JS책”을 result 변수에 할당&lt;/li&gt;
    &lt;/ul&gt;

    &lt;hr /&gt;

    &lt;ul&gt;
      &lt;li&gt;위 book 프로퍼티로 값을 구하려는데 위에 value 코드가 없다.&lt;/li&gt;
      &lt;li&gt;프로퍼티 값을 부를 때 value 속성이 없으면 get을 호출한다.&lt;/li&gt;
      &lt;li&gt;이것이 바로 getter이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;obj.book.get() 처럼 함수로 호출하면 에러 발생&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;set-속성&quot;&gt;set 속성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;setter&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;OOP 용어&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;obj.book = “JS책”; 코드를 만나면 (book 프로퍼티네임에 value를 설정안하고 set과 get설정)&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
          &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// JS책&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;obj.book의 set 함수를 호출하면서&lt;/li&gt;
      &lt;li&gt;“JS책”을 파라미터 값으로 넘겨줌&lt;/li&gt;
      &lt;li&gt;data의 title 프로퍼티에 “JS책”을 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;obj.book; 코드를 만나면&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;obj.book의 get 함수가 호출되며&lt;/li&gt;
      &lt;li&gt;get 함수에서 data.title 값을 반환&lt;/li&gt;
      &lt;li&gt;setter에서 설정한 “JS책”이 반환됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;위 스타일은 ES5 스타일입니다.&lt;br /&gt;
ES6에 위의 방법보다 조금 더 코딩이 편하고 확장성 있는 형태가 나왔습니다.&lt;br /&gt;
따라서 ES5 환경에서 개발하시려면 위의 형태를 쓰시지만,&lt;br /&gt;
ES6 환경이라면 ES6의 getter와 setter를 사용하시는 것이 더 효율적입니다.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 06 Dec 2020 22:16:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/06/beginner8.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/06/beginner8.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>17-3. Object 오브젝트(ES5 기준) / 프로퍼티 디스크립터, value/writable/enumerable/configurable 속성</title>
        <description>&lt;h2 id=&quot;17-3-object-오브젝트es5-기준--프로퍼티-디스크립터-valuewritableenumerableconfigurable-속성&quot;&gt;17-3. Object 오브젝트(ES5 기준) / 프로퍼티 디스크립터, value/writable/enumerable/configurable 속성&lt;/h2&gt;

&lt;h2 id=&quot;프로퍼티-디스크립터&quot;&gt;프로퍼티 디스크립터&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image247.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;6개의 디스크립터가 있습니다.&lt;br /&gt;
디폴트 값은 ‘부정’을 의미하는 값이 대부분입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;프로퍼티 디스크립터(Descriptor)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로퍼티의 속성 이름과 속성 값을 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;디스크립터 타입 분류 (위의 표 제일 왼족)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;데이터&lt;/strong&gt; 프로퍼티 디스크립터&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;엑세스(Access)&lt;/strong&gt; 프로퍼티 디스크립터&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;공용&lt;/strong&gt; 프로퍼티 디스크립터&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;디스크립터 타입에 속한 속성만 같이 사용할 수 있음&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;value, writable&lt;/li&gt;
          &lt;li&gt;get, set&lt;/li&gt;
          &lt;li&gt;enumerable, configurable &lt;strong&gt;(공용)&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;value와 get을 같이 사용할 수 없다.&lt;br /&gt;
마찬가지로 writable과 set을 같이 사용할 수 없다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;공용은 같이 작성할 수 있다.&lt;/strong&gt;&lt;br /&gt;
get과 enumerable은 같이 작성할 수 있다.
&lt;strong&gt;데이터와 엑세스는 같이 작성을 못하는 것이 특징이다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;디스크립터-타입-인식-기준&quot;&gt;디스크립터 타입 인식 기준&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;타입&lt;/th&gt;
      &lt;th&gt;속성 이름&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;데이터&lt;/td&gt;
      &lt;td&gt;value &lt;br /&gt; writable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;엑세스&lt;/td&gt;
      &lt;td&gt;get &lt;br /&gt; set&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;공용&lt;/td&gt;
      &lt;td&gt;enumerable &lt;br /&gt; configurable&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;먼저 value 또는 writable 작성 체크&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;작성되어 있으면&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;데이터 프로퍼티 디스크립터 타입으로 인식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;작성되어 있지 않으면&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;엑세스 프로퍼티 디스크립터 타입으로 인식&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;데이터와 엑세스 프로퍼티 디스크립터를 함께 작성할 수 없으므로 구분 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;value-속성&quot;&gt;value 속성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;프로퍼티 값을&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;{value: “JS북”} 형태로 작성&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;for~in에서 “JS북”이 프로퍼티 값이 됨&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;enumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// book&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// JS북&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;value 속성을 get/set 속성과 같이 작성 불가&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// get: function () {}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;writable-속성&quot;&gt;writable 속성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;프로퍼티 값 변경 가능, 불가&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;writable: true&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;프로퍼티 변경 가능&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 변경 가능&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;writable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;변경 가능&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 변경 가능&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;writable: false&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디폴트 값: false&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;프로퍼티 변경 불가&lt;br /&gt;
&lt;strong&gt;에러가 발생하지 않지만&lt;/strong&gt;, 값이 변경되지 않음&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 변경 불가&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;writable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 아래 코드에서 에러가 안납니다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 에러가 안나는 점이 오히려 조금 아쉽기도 합니다. 체크하기 어려울 수도..&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 그래도 나름 이해가 되는 부분입니다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 코드가 중간에 멈추는 것을 방지하기 위함이겠지만, 살짝 마음에 걸리는 부분입니다.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;변경 불가&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// JS책&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enumerable-속성&quot;&gt;enumerable 속성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for~in&lt;/code&gt;으로 열거 가능 여부&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;enumerable: true&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;프로퍼티 열거 가능&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 열거 가능&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;enumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// book:JS북&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;enumerable: false&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디폴트 값: false&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;프로퍼티 열거 불가&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 열거 불가&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;enumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;이 또한 데이터 보호 차원이 될 수 있습니다.&lt;br /&gt;
  물론 소스가 오픈되어있고 debugger로 보면 볼 수 있지만 또 그것은 다른관점이죠.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;configurable-속성&quot;&gt;configurable 속성&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;프로퍼티 삭제 가능, 불가&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;configurable: true&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프로퍼티 삭제 가능&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;value 이외 속성 변경 가능&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 삭제 가능&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;configurable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;configurable: false&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;디폴트 값 : false&lt;/li&gt;
      &lt;li&gt;프로퍼티 삭제 불가&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;value 이외 속성 변경 불가&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 삭제 불가&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;configurable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 마찬가지로 삭제 불가인데 다음과 같이 삭제해도 에러가 안납니다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 물론 삭제도 안됩니다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 코드가 중간에 멈추는 것을 방지하기 위함이겠지만, 살짝 마음에 걸리는 부분입니다.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// JS북&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 06 Dec 2020 21:21:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/06/beginner7.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/06/beginner7.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>17-2. Object 오브젝트(ES5 기준) / Object에 프로퍼티 추가</title>
        <description>&lt;h2 id=&quot;17-2-object-오브젝트es5-기준--object에-프로퍼티-추가&quot;&gt;17-2. Object 오브젝트(ES5 기준) / Object에 프로퍼티 추가&lt;/h2&gt;

&lt;h2 id=&quot;defineproperty&quot;&gt;defineProperty()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;object&lt;/td&gt;
      &lt;td&gt;Object 오브젝트&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;첫번째 파라미터: 대상 오브젝트 &lt;br /&gt; 두번째 파라미터: 프로퍼티 이름 &lt;br /&gt; 세번째 파라미터: 속성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;대상 오브젝트&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;대상 오브젝트에 프로퍼티 추가 또는 프로퍼티 속성 변경&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;프로퍼티마다 상태를 갖고 있음&lt;/strong&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;상태란? 변경 / 삭제 / 열거 가능 여부&lt;/li&gt;
      &lt;li&gt;상태가 가능일 때만 처리할 수 있음&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;프로퍼티를 추가할 때 상태 결정&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;enumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {book: &quot;JS책&quot;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;첫번째 파라미터에 프로퍼티를 추가할 오브젝트(obj) 작성&lt;/li&gt;
          &lt;li&gt;두번째 파라미터에 프로퍼티 이름(book) 작성&lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;세번째 파라미터 {value: “JS책”}에서&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;value는 프로퍼티 값을 나타내는 속성&lt;/li&gt;
              &lt;li&gt;“JS책”은 value의 속성 값으로&lt;/li&gt;
              &lt;li&gt;위에처럼 프로퍼티 값이 됩니다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;은 ES1.0에서 나왔습니다.&lt;br /&gt;
처음에 자바스크립트가 만들어 졌을 때부터 나왔던 것입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt;의 변경/삭제/열거의 &lt;strong&gt;디폴트 값은 true입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;그런데 &lt;code class=&quot;highlighter-rouge&quot;&gt;defineProperty&lt;/code&gt;는 ES5에서 나왔습니다.&lt;br /&gt;
여기선 변경/삭제/열거의 &lt;strong&gt;디폴트 값이 false입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;즉, &lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt; 이걸로 만든 것과 &lt;code class=&quot;highlighter-rouge&quot;&gt;defineProperty&lt;/code&gt; 이걸로 만든 것은 서로 반대입니다.&lt;/strong&gt;&lt;br /&gt;
그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;defineProperty&lt;/code&gt;으로 만들었을 때 변경/삭제/열거를 true로 만드려면 반드시 정의를 해줘야됩니다.&lt;br /&gt;
디폴트가 false입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이것을 어디다 사용할까요?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트 소스는 소스가 오픈되지 않습니까?&lt;br /&gt;
오픈소스를 만들어 다른 사람들이 메소드를 활용해 오픈소스를 활용할 수 있게 합니다.&lt;br /&gt;
그런데 오픈소스이다보니까 데이터를 읽어하거나하는 경우가 생길 수도 있다.&lt;/p&gt;

&lt;p&gt;ES5 이전까지만해도 이러한 속성들이 없었다.&lt;br /&gt;
하지만 ES5의 등장으로 &lt;strong&gt;데이터를 보호&lt;/strong&gt;할 수 있게 되었다.&lt;br /&gt;
&lt;strong&gt;사실 데이터 보호가 주된 목적이다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;defineproperties&quot;&gt;defineProperties()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;object&lt;/td&gt;
      &lt;td&gt;Object 오브젝트&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;첫번째 파라미터: 대상 오브젝트 &lt;br /&gt; 두번째 파라미터: 프로퍼티 이름과 속성&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;대상 오브젝트&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;다수의 프로퍼티를 추가하거나 속성 변경&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;함수 기능은 &lt;code class=&quot;highlighter-rouge&quot;&gt;defineProperty()&lt;/code&gt;와 같음&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;soccer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;축구&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;enumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;basketball&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;농구&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;enumerable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// soccer:축구&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// basketball:농구&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;enumerable&lt;/code&gt;이 둘 다 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;로 설정했으므로 &lt;strong&gt;for in문으로 열거가 됩니다.&lt;/strong&gt;&lt;br /&gt;
  만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;로 설정 안했다면 열거가 안됩니다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 06 Dec 2020 21:03:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/06/beginner6.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/06/beginner6.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>17-1. Object 오브젝트(ES5 기준) / ES5 Object 특징, ES5 Object 함수, 프로퍼티 디스크립터</title>
        <description>&lt;h2 id=&quot;17-1-object-오브젝트es5-기준--es5-object-특징-es5-object-함수-프로퍼티-디스크립터&quot;&gt;17-1. Object 오브젝트(ES5 기준) / ES5 Object 특징, ES5 Object 함수, 프로퍼티 디스크립터&lt;/h2&gt;

&lt;h2 id=&quot;es5-object-특징&quot;&gt;ES5 Object 특징&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ES5 Object에 함수가 추가됨&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;메소드는 하나도 없음 - 추가된 메소드가 없다는 뜻&lt;br /&gt;
전부 함수만 추가되었습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 Object 오브젝트의 모든 메소드는 (즉, prototype에 연결되어있는 6개의 메소드를 말함)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;대부분의 빌트인 오브젝트(String, Number, Array…)에 첨부됨&lt;/li&gt;
      &lt;li&gt;빌트인((String, Number, Array…))으로 오브젝트를 생성하므로 연결이 많이 발생&lt;br /&gt;
&lt;strong&gt;빌트인 Object 오브젝트의 prototype의 6개의 메소드가 연결되다는 뜻입니다.&lt;/strong&gt;&lt;br /&gt;
그렇다고 &lt;code class=&quot;highlighter-rouge&quot;&gt;toString&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;valueOf&lt;/code&gt; 등등의 메소드가 모든 오브젝트에서 다 쓰이나?&lt;br /&gt;
그런 것도 아닙니다.&lt;br /&gt;
결국 이는 &lt;strong&gt;loss&lt;/strong&gt;입니다.&lt;br /&gt;
&lt;strong&gt;빌트인 오브젝트를 만들 때마다 빌트인 Object 오브젝트로 연결하는 경로를 계속 생성하다보면, 이는 메모리를 많이 쓰므로 분명한 낭비, 손실입니다.&lt;/strong&gt;&lt;br /&gt;
이런 이유 때문에 &lt;strong&gt;전부 함수만 추가되었습니다.&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;String이나 Number에 메소드가 추가되는 것은 괜찮다고 봅니다.&lt;br /&gt;
그것들은 각자의 것에서만 쓰이기 때문입니다.&lt;br /&gt;
하지만 빌트인 Object 오브젝트는 모든 오브젝트에 들어갑니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;함수는 첨부되지 않으므로&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;연결 부하를 줄일 수 있음 - 효율성 증가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;es5-object-함수&quot;&gt;ES5 Object 함수&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;이름&lt;/th&gt;
      &lt;th&gt;개요&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;defineProperty()&lt;/td&gt;
      &lt;td&gt;프로퍼티 추가, 프로퍼티 &lt;mark&gt;속성&lt;/mark&gt; 변경&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;defineProperties()&lt;/td&gt;
      &lt;td&gt;다수의 프로퍼티 추가, 속성 변경&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;getPrototypeOf()&lt;/td&gt;
      &lt;td&gt;prototype에 연결된 프로퍼티 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;getOwnPropertyNames()&lt;/td&gt;
      &lt;td&gt;프로퍼티 이름을 배열로 반환 (내가만든 프로퍼티 이름)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;keys()&lt;/td&gt;
      &lt;td&gt;열거 가능한 프로퍼티 이름 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;getOwnPropertyDescriptor()&lt;/td&gt;
      &lt;td&gt;&lt;mark&gt;디스크립터&lt;/mark&gt; 속성 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;preventExtensions()&lt;/td&gt;
      &lt;td&gt;프로퍼티 추가 금지 설정&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;isExtensible()&lt;/td&gt;
      &lt;td&gt;프로퍼티 추가 금지 여부 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;seal()&lt;/td&gt;
      &lt;td&gt;프로퍼티 추가, 삭제 금지 설정&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;isSeal()&lt;/td&gt;
      &lt;td&gt;프로퍼티 추가, 삭제 금지 여부 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;freeze()&lt;/td&gt;
      &lt;td&gt;프로퍼티 추가, 삭제/변경 금지 설정&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;isFrozen()&lt;/td&gt;
      &lt;td&gt;프로퍼티 추가, 삭제/변경 금지 여부 반환&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;p&gt;ES5에 새롭게 추가된 개념이 바로 위의 &lt;mark&gt;속성&lt;/mark&gt;개념입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;enumerable&lt;/code&gt; 한번 들으셨던 적 있죠?&lt;br /&gt;
열거할 수 있느냐, 없느냐. &amp;lt;- 이러한 것입니다.&lt;br /&gt;
이러한 것들이 속성인데요, 계속해서 이번장에서 다룰겁니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;mark&gt;디스크립터&lt;/mark&gt;라는 속성이 있다.&lt;br /&gt;
우리가 여태 다룬 것 중에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;enumerable&lt;/code&gt;이 있다.&lt;br /&gt;
일단은 이 정도로만 아시고 다음다음 페이지에서 다루겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;프로퍼티-디스크립터&quot;&gt;프로퍼티 디스크립터&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;6개의 디스크립터&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;이름&lt;/th&gt;
      &lt;th&gt;개요&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;value&lt;/td&gt;
      &lt;td&gt;[[Value]], 설정할 값&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;writable&lt;/td&gt;
      &lt;td&gt;[[Writable]], 값 변경 가능 여부 &lt;br /&gt; false로 주면 값을 변경 못함 &lt;br /&gt; 데이터를 보호하겠다는 의미&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;get&lt;/td&gt;
      &lt;td&gt;[[Get]], 값 반환 프로퍼티 함수 &lt;br /&gt; getter라고 이야기함&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;set&lt;/td&gt;
      &lt;td&gt;[[Set]], 값 설정 프로퍼티 함수 &lt;br /&gt; setter라고 이야기함&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;enumerable&lt;/td&gt;
      &lt;td&gt;[[Enumerable]], 프로퍼티 열거 가능 여부&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;configurable&lt;/td&gt;
      &lt;td&gt;[[Configurable]], 프로퍼티 삭제 가능 여부&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;p&gt;위에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;getOwnPropertyDescriptor()&lt;/code&gt; 이거 있었죠?&lt;br /&gt;
이거 관련된 내용입니다.&lt;/p&gt;

</description>
        <pubDate>Sun, 06 Dec 2020 20:41:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/06/beginner5.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/06/beginner5.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>16-4. 자바스크립트 특징 / 메소드 형태</title>
        <description>&lt;h2 id=&quot;16-4-자바스크립트-특징--메소드-형태&quot;&gt;16-4. 자바스크립트 특징 / 메소드 형태&lt;/h2&gt;

&lt;p&gt;지금까지 다뤘던 메소드와 함수 형태를 정리합니다.&lt;/p&gt;

&lt;h2 id=&quot;메소드-호출-형태&quot;&gt;메소드 호출 형태&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 형태&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;배열: [“book”, “책”, 123]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;OOP의 일반적인 형태&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [&quot;book&quot;, &quot;책&quot;, 123]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;new Array()로 인스턴스 생성&lt;/li&gt;
      &lt;li&gt;obj.concat(data);&lt;br /&gt;
obj 인스턴스의 concat() 호출&lt;br /&gt;
데이터를 파라미터로 넘겨줌&lt;/li&gt;
      &lt;li&gt;JS는 일반적으로 이 방법을 사용하지 않고 아래의 방법을 사용&lt;/li&gt;
    &lt;/ol&gt;

    &lt;hr /&gt;

    &lt;p&gt;아주 일반적인 형태로 인스턴스를 활용해 메소드를 호출한다.&lt;br /&gt;
  오브젝트를 활용해 메소드를 호출하는 경우도 있지만 대부분 인스턴스를 활용한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;자바스크립트 형태&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;데이터로 메소드 호출&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [&quot;book&quot;, &quot;책&quot;, 123]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;data.concat()&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;엔진이 data 타입에 따라 오브젝트 결정&lt;/strong&gt;&lt;br /&gt;
원래는 말이 안됩니다.&lt;br /&gt;
자바스크립트 특성상 가능한 겁니다.&lt;br /&gt;
자바스크립트 엔진이 data 타입을 파악해 빌트인 Array 오브젝트의 prototype에 연결되어있는 메소드로 &lt;strong&gt;인스턴스를 만들어서&lt;/strong&gt; 그 인스턴스의 concat 메소드를 호출하는 겁니다.&lt;br /&gt;
이때 data를 내부에서 파라미터로 넘겨주는 겁니다.&lt;/li&gt;
          &lt;li&gt;data가 배열이므로 Array의 concat() 호출&lt;br /&gt;
data를 파라미터로 넘겨 줌&lt;/li&gt;
        &lt;/ol&gt;

        &lt;hr /&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;오브젝트의 함수 호출&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bookObj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bookObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [&quot;book&quot;, &quot;책&quot;, 123]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;위 방법은 꽤나 많이 사용하는 아주 심플한 방법입니다.&lt;br /&gt;
  일단 위 방식은 &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; 연산자는 사용할 수 없습니다.&lt;br /&gt;
  즉, bookObj 안에 공통적인 내용이 들어간다는 겁니다.&lt;br /&gt;
  예를 들어, 회사 전체에 공통으로 사용하는 어떤 기능이 있다고 합시다.&lt;br /&gt;
  그런 것들을 위와 같이 작성해놓으면 그런 것들은 인스턴스를 만들 필요가 없으므로 위 처럼 심플하게 사용할 수 있습니다.&lt;br /&gt;
  &lt;strong&gt;인스턴스를 만들지 않으므로 메모리를 많이 차지하지도 않는다.&lt;/strong&gt;&lt;/p&gt;

        &lt;hr /&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인스턴스의 메소드 호출&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oneInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oneInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [&quot;book&quot;, &quot;책&quot;, 123]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Object 확장&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;네임스페이스(NameSpace)로 사용&lt;/li&gt;
      &lt;li&gt;Book = {};&lt;/li&gt;
      &lt;li&gt;Book.Javascript = {}; Book.Html = {};&lt;br /&gt;
위와 같이 작성하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Javascript&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Html&lt;/code&gt;은 오브젝트가 되고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Book&lt;/code&gt;은 &lt;strong&gt;네임스페이스가 됩니다.&lt;/strong&gt;&lt;br /&gt;
예를 들면, 책을 관리하는 게 있고, 회원을 관리하는 게 있습니다.&lt;br /&gt;
그리고 각각에 속한 메소드들이 있습니다.&lt;br /&gt;
그런데 이를 하나로 통합해버리면 서로 메소드 이름이 중첩되면 사용하기 어렵잖아요?&lt;br /&gt;
그때 이런식으로 업무별로 &lt;strong&gt;그룹핑&lt;/strong&gt;해서 오브젝트로 사용하는 겁니다.&lt;br /&gt;
이를 &lt;strong&gt;네임스페이스&lt;/strong&gt;라고 합니다.
만약 &lt;strong&gt;Book.Javascript.abc&lt;/strong&gt;가 있다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;Book.Javascript&lt;/code&gt;가 네임스페이스가 되는 겁니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;메소드-사용-팁&quot;&gt;메소드 사용 팁&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;메소드를 알 수 없을 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;MDN 활용 &lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array#%EC%A0%95%EC%A0%81_%EB%A9%94%EC%84%9C%EB%93%9C&quot; target=&quot;_blank&quot;&gt;예시&lt;/a&gt;&lt;br /&gt;
&lt;img src=&quot;/static/img/script/image246.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
각 메소드의 정의를 시간날 때 읽어보시기 바랍니다.&lt;br /&gt;
그것이 자바스크립트를 잘하는 방법입니다.&lt;br /&gt;
지름길은 없습니다. 이렇게 감을 잡으셔야됩니다.&lt;/li&gt;
      &lt;li&gt;MDN에서 “오브젝트 이름”으로 검색&lt;/li&gt;
      &lt;li&gt;왼쪽의 리스트에서 메소드 이름을 찾습니다.&lt;/li&gt;
      &lt;li&gt;메소드 이름이 시맨틱을 갖고 있으므로 메소드 이름으로 기능 예측 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;메소드를 알고 있을 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기능을 정확하게 사용하기 위해 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 06 Dec 2020 19:56:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/06/beginner4.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/06/beginner4.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>16-3. 자바스크립트 특징 / 자바스크립트 인스턴스, instanceof 연산자</title>
        <description>&lt;h2 id=&quot;16-3-자바스크립트-특징--자바스크립트-인스턴스-instanceof-연산자&quot;&gt;16-3. 자바스크립트 특징 / 자바스크립트 인스턴스, instanceof 연산자&lt;/h2&gt;

&lt;h2 id=&quot;인스턴스&quot;&gt;인스턴스&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Instance&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Class를 &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; 연산자로 생성한 것&lt;/li&gt;
      &lt;li&gt;ES5에는 클래스가 없죠?&lt;br /&gt;
하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;에 연결된 것이 있으면 &lt;strong&gt;Class&lt;/strong&gt;로 볼 수 있습니다.&lt;br /&gt;
이것은 &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; 연산자로 생성하기 때문이죠.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스 목적&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Class에 작성된 메소드 사용&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;에 연결된 프로퍼티로 &lt;strong&gt;인스턴스를 만들어서&lt;/strong&gt; 메소드를 호출하겠다라는 것입니다.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;인스턴스마다 프로퍼티 값을 유지&lt;/strong&gt;&lt;br /&gt;
또한 인스턴스마다 프로퍼티 값을 유지하겠다라는 겁니다.&lt;br /&gt;
사실 이것이 더 큽니다.&lt;/li&gt;
      &lt;li&gt;예 : 축구 경기에서 각 팀에 적용되는 규칙(메소드)은 같지만 팀마다 선수(프로퍼티 값)는 다르다.&lt;br /&gt;
메시(프로퍼티 값)가 슛을했다(메소드).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;new-연산자&quot;&gt;new 연산자&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;constructor&lt;/td&gt;
      &lt;td&gt;생성자&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;값opt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;생성한 인스턴스&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스를 생성하여 반환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;new Book(“JS책”); // ES5에서는 생성자 함수&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;인스턴스를 생성하므로 Book()을 생성자 함수라고 부름&lt;/strong&gt;&lt;br /&gt;
즉, prototype에 있는 constructor를 호출하는 겁니다.&lt;/li&gt;
      &lt;li&gt;코딩 관례로 첫 문자를 대문자로 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;생성자 함수로 넘겨줄 값을 소괄호()에 작성&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// this는 생성하는 인스턴스를 참조합니다.&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oneInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oneInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 300&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;new Book(200)으로 인스턴스 생성&lt;br /&gt;
oneInstance가 인스턴스 이름&lt;/li&gt;
          &lt;li&gt;파라미터 값을 생성하는 인스턴스에 설정&lt;/li&gt;
          &lt;li&gt;따라서 인스턴스마다 고유의 값을 가질 수 있음&lt;/li&gt;
          &lt;li&gt;oneInstance.getPoint() 형태로 prototype에 연결되 getPoint() 메소드 호출&lt;/li&gt;
        &lt;/ol&gt;

        &lt;p&gt;oneInstance에서 getPoint를 호출할 땐 prototype을 연결하지 않습니다.&lt;br /&gt;
  그럼 getPoint가 호출되고 getPoint의 this가 instance를 참조하므로 이미 할당되어있던 값 200을 불러와 100을 더해 반환하게 되고, 
  그 값을 출력하게 됩니다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;이와 같이 &lt;strong&gt;인스턴스를 생성하는 이유&lt;/strong&gt;는 A라는 사람과 B라는 사람의 &lt;strong&gt;point&lt;/strong&gt;가 다르겠죠?&lt;br /&gt;
C라는 사람도 마찬가지일 거고요.&lt;br /&gt;
&lt;strong&gt;point는 다르지만 getPoint하는 방법은 같습니다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;이것이 인스턴스를 생성하는 이유입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;instanceof&quot;&gt;instanceof&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;오브젝트로 생성한 인스턴스 여부 반환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;instance &lt;code class=&quot;highlighter-rouge&quot;&gt;instanceof&lt;/code&gt; object&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oneInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// new 연산자로 만든 인스턴스니? 라고 물어보는 것&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oneInstance&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;new Book()으로 인스턴스 생성&lt;/li&gt;
          &lt;li&gt;onInstance instanceof Book&lt;/li&gt;
          &lt;li&gt;oneInstance가 Book()으로 생성한 인스턴스이므로 true 반환&lt;/li&gt;
        &lt;/ol&gt;

        &lt;hr /&gt;
      &lt;/li&gt;
      &lt;li&gt;instance 위치에 인스턴스 작성&lt;/li&gt;
      &lt;li&gt;object 위치에 비교 기준 오브젝트 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;instance가 object로 생성한 인스턴스이면 true, 아니면 false 반환&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 06 Dec 2020 09:55:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/06/beginner3.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/06/beginner3.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>16-2. 자바스크립트 특징 / 자바스크립트 객체 형태, JS의 OOP 구현 방법, prototype 형태/연결</title>
        <description>&lt;h2 id=&quot;16-2-자바스크립트-특징--자바스크립트-객체-형태-js의-oop-구현-방법-prototype-형태연결&quot;&gt;16-2. 자바스크립트 특징 / 자바스크립트 객체 형태, JS의 OOP 구현 방법, prototype 형태/연결&lt;/h2&gt;

&lt;h2 id=&quot;js-객체-형태&quot;&gt;JS 객체 형태&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Object 오브젝트 형태&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;빌트인 Object 오브젝트로 Object 오브젝트를 만드는 형태&lt;/li&gt;
      &lt;li&gt;인스턴스를 생성할 수 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Function 오브젝트 형태&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readBook&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;빌트인 Function 오브젝트로 Function 오브젝트를 만드는 형태&lt;/li&gt;
      &lt;li&gt;객체이지만, OOP의 객체라고 하기에는 부족&lt;/li&gt;
      &lt;li&gt;객체에 메소드가 하나 있는 모습&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Function 오브젝트 형태는 OOP의 객체라고 부르기엔 부족합니다.&lt;br /&gt;
OOP의 객체는 개념적인 것으로 이것을 우리는 &lt;code class=&quot;highlighter-rouge&quot;&gt;CLASS&lt;/code&gt;라고 부른다고 했습니다.&lt;br /&gt;
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;CLASS&lt;/code&gt; 안에는 0개 이상의 메소드가 있게됩니다.&lt;/p&gt;

&lt;p&gt;그런데 &lt;code class=&quot;highlighter-rouge&quot;&gt;Function&lt;/code&gt;은 오직 하나의 메소드만 있습니다.&lt;br /&gt;
그래서 &lt;strong&gt;OOP의 객체라고 하기엔 조금 작습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;prototype&quot;&gt;prototype&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JS의 OOP 구현 방법&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;prototype에 메소드 연결&lt;/li&gt;
      &lt;li&gt;prototype 형태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;개발자 도구 열기 (Ctrl + Shift + I)&lt;/li&gt;
  &lt;li&gt;브라우저 새로고침 실행 (F5)&lt;/li&gt;
  &lt;li&gt;debugger 위치에서 실행 멈춤&lt;/li&gt;
  &lt;li&gt;debugger 종료 (F8)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image236.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image237.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image238.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image239.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트는 이와 같이 prototype에다가 객체지향에서 말하는 메소드를 연결합니다.&lt;br /&gt;
&lt;strong&gt;구조 자체가 다릅니다.&lt;/strong&gt;&lt;br /&gt;
그래서 다른 언어의 객체지향 구현 방법과 자바스크립트를 비교하는 것은 안됩니다.&lt;br /&gt;
OOP를 구현하는 방법 자체가 다르기 때문에 그렇습니다.&lt;/p&gt;

&lt;p&gt;함수와 메소드를 구분하자는 이유가 이러한 이유도 있었던 것입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;prototype에 연결하여 작성&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Function을 만들 때 Book.prototype은 자동으로 만들어집니다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// getBook은 메소드 이름이 됩니다.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;Book 함수 작성&lt;/li&gt;
      &lt;li&gt;Book.prototype에 getBook 메소드 연결&lt;/li&gt;
      &lt;li&gt;prototype이 오브젝트이므로 {이름 : 메소드} 형태로 연결할 수 있습니다.&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;위와 같이 만들면 됩니다.&lt;br /&gt;
  심플하죠?&lt;br /&gt;
  다만 우리는 위에처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;을 쓴다라는 겁니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;위의 함수가 어떻게 연결되는지 확인해보겠습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;개발자 도구 열기 (Ctrl + Shift + I)&lt;/li&gt;
  &lt;li&gt;브라우저 새로고침 실행 (F5)&lt;/li&gt;
  &lt;li&gt;debugger 위치에서 실행 멈춤&lt;/li&gt;
  &lt;li&gt;debugger 종료 (F8)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image240.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image241.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image242.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image243.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/static/img/script/image244.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이와 같이 자바스크립트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;에 메소드를 연결하여 객체지향 형태를 만듭니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/script/image245.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;우리는 이와같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Function&lt;/code&gt; 오브젝트를 2개의 형태로 활용할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;에 연결 안하고 단일 기능으로 사용하겠다. 또는&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;에 연결해서 다수 기능으로 사용하겠다. (CLASS 개념)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CLASS 개념으로 쓸 때 위의 코드처럼&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 개발자들간의 시맨틱&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 함수 이름 첫글자를 대문자로 쓰면 이 함수는 CLASS 개념으로 사용하겠다는 의미&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 소문자면 단일 Function으로.. prototype에다가 메소드를 연결하지 않고 하나의 Function 오브젝트로 사용할거다라는 의미&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Function을 만들 때 Book.prototype은 자동으로 만들어집니다.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// getBook은 메소드 이름이 됩니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이런식으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;에 연결하면 된다는 겁니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;개발자들간의 시맨틱&lt;/li&gt;
  &lt;li&gt;함수 이름 첫글자를 대문자로 쓰면 이 함수는 CLASS 개념으로 사용하겠다는 의미&lt;/li&gt;
  &lt;li&gt;소문자면 단일 Function으로.. prototype에다가 메소드를 연결하지 않고 하나의 Function 오브젝트로 사용할거다라는 의미&lt;/li&gt;
  &lt;li&gt;이는 개발자들 사이에서 내려오는 일종의 관례라고 할 수 있습니다.&lt;br /&gt;
그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Number&lt;/code&gt; 등등 봐도 첫글자가 다 대문자입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;다른 언어는 class 안에&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;메소드와 프로퍼티를 작성하지만&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;자바스크립트는 prototype에&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;메소드를 연결하여 작성합니다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;ES6에서 class에 메소드를 작성&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;getBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;일반적인 객체 개념입니다.&lt;br /&gt;
  객체지향 언어는 위와 같이 &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;라는 단어를 씁니다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class Book&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;var Book&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;하지만, 위와 같이 작성하더라도 자바스크립트 내부에서 prototype에 연결합니다.&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;getBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;위의 코드를 아래와 같이 만들어 버립니다.&lt;br /&gt;
  코드를 위와 같이 작성하더라도 내부에선 아래처럼 만든다는 겁니다.&lt;br /&gt;
  그러니까 아래와 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt; 개념을 이해하실 필요가 있습니다.&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;JS북&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;의 발전된 형태가 &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;이지만 구조적으로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;prototype&lt;/code&gt;으로 만들어진다는 겁니다.&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Dec 2020 08:57:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/06/beginner2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/06/beginner2.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>16-1. 자바스크립트 특징 / 스크립팅 언어 특징, 컴파일 순서, JS와 객체지향, OOP의 객체</title>
        <description>&lt;h2 id=&quot;16-1-자바스크립트-특징--스크립팅-언어-특징-컴파일-순서-js와-객체지향-oop의-객체&quot;&gt;16-1. 자바스크립트 특징 / 스크립팅 언어 특징, 컴파일 순서, JS와 객체지향, OOP의 객체&lt;/h2&gt;

&lt;h2 id=&quot;자바스크립트-특징&quot;&gt;자바스크립트 특징&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;자바스크립트는 &lt;strong&gt;스크립팅(Scripting) 언어&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;스크립팅 언어 특징&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소스 파일의 코드를 사전에 컴파일하여 실행 파일을 만들어 놓지 않고&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;사용하는 시점에 컴파일하고 실행&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c1&quot;&gt;// book.js&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;getPoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;장점을 활용하는 지혜 필요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;JAVA나 C++ 같은 경우는 사전에 컴파일을 합니다.&lt;br /&gt;
그리고 컴파일 할 때 문법 체크 등을 합니다.&lt;br /&gt;
그리고 확장자가 &lt;code class=&quot;highlighter-rouge&quot;&gt;exe&lt;/code&gt;인 실행 파일을 만들어 놓습니다.&lt;br /&gt;
그리고 실행할 땐 &lt;code class=&quot;highlighter-rouge&quot;&gt;exe&lt;/code&gt; 파일을 실행합니다.&lt;br /&gt;
그렇기 때문에 &lt;strong&gt;컴파일 시간이 안듭니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;그런데 자바스크립트는 실행하는 순간 컴파일을 합니다.&lt;br /&gt;
그러면 사용자 입장에선 그만큼 컴파일하는 시간을 기다려야하냐는 거죠.&lt;br /&gt;
이것이 &lt;strong&gt;스크립트 언어의 단점&lt;/strong&gt;이라고 얘기할 수 있습니다.&lt;/p&gt;

&lt;p&gt;10~20년 전에는 컴파일하는 시간이 부담이 됐었습니다.&lt;br /&gt;
그런데 상대적으로 그때는 프로그램이 짧았습니다.&lt;br /&gt;
제가 5~6만 라인을 작성한 경험으로 생각했을 때, 컴파일 시간은 그리 오래걸리지 않습니다.&lt;/p&gt;

&lt;p&gt;그리고 일반적으로 3천라인 정도 선에서 애플리케이션이 돌아가거든요?&lt;br /&gt;
3천라인 컴파일은 컴파일도 아닙니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;스크립팅 언어의 장점도 있습니다.&lt;/strong&gt;&lt;br /&gt;
컴파일된 파일들은 코드를 수정할 수 없습니다.&lt;br /&gt;
그런데 스크립팅 언어는 코드를 수정해 바로 실행할 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;컴파일 순서&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소스 파일의 위에서부터 아래로 컴파일&lt;/li&gt;
      &lt;li&gt;function 키워드를 만나면 빌트인 function 오브젝트를 활용해 function 오브젝트를 생성&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;이때, &lt;strong&gt;함수 안의 코드는 컴파일하지 않음&lt;/strong&gt;&lt;br /&gt;
함수가 호출되었을 때, 위의 방법으로 컴파일&lt;br /&gt;
&lt;strong&gt;이것이 굉장히 좋은 겁니다.&lt;/strong&gt;&lt;/p&gt;

        &lt;p&gt;예시) 회원가입 버튼&lt;br /&gt;
보통 회원가입 버튼 누를 때만 해당 코드가 작동하면 된다.&lt;br /&gt;
하지만 일반적인 언어들은 실행되기도 전에 컴파일을 해놓는다.&lt;br /&gt;
반면, 자바스크립트는 실행될 때 컴파일을 한다.&lt;br /&gt;
실행되기 전엔 단순한 &lt;strong&gt;부담없는 텍스트일 뿐이다.&lt;/strong&gt;&lt;/p&gt;

        &lt;p&gt;이런 측면에서 본다면 컴파일하지 않는 것이 더 좋다고도 할 수 있다.&lt;br /&gt;
&lt;strong&gt;컴파일을 했다는 이야기는 기계어로 번역했다는 얘기이고, 그러면 메모리를 차지하고 있다는 소리가 된다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;이것이 스크립팅 언어의 장점이다.&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;js와-객체지향&quot;&gt;JS와 객체지향&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;객체 지향 프로그래밍 언어&lt;br /&gt;
OOP : Object Oriented Programming&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자바스크립트는 객체지향 언어&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ES5 스펙에 아래와 같이 기술되어 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;ECMAScript is an object-oriented programming language&lt;/strong&gt; for performing computations and manipulating computational objects within a host environment.&lt;br /&gt;
ECMAScript as defined here is not intended to be&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;자바스크립트 OOP 구현&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;다른 언어의 OOP 구현과 차이가 있으므로 &lt;strong&gt;비교하는 것은 의미 없음&lt;/strong&gt;&lt;br /&gt;
언어마다 이를 구현하는 방법이 다릅니다.&lt;/li&gt;
      &lt;li&gt;JS 특징이 반영된 OOP 구현&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;oop의-객체&quot;&gt;OOP의 객체&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;강좌에 필요한 것만 간략하게 다룹니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;객체(Object)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;개념적 접근&lt;/strong&gt; 실체가 없다는 뜻입니다.&lt;br /&gt;
그런데 우리가 여태까지 봐왔던 Object는 key와 value로 이루어진 &lt;strong&gt;프로퍼티의 집합&lt;/strong&gt;이었습니다.&lt;br /&gt;
우리가 봐왔던 것은 실체가 있었습니다.&lt;br /&gt;
빌트인 오브젝트 - 오브젝트라 부르고, 인스턴스도 하나의 오브젝트라고도 볼 수 있습니다.&lt;br /&gt;
&lt;strong&gt;&lt;span style=&quot;color:red&quot;&gt;그런데 지금 말하는 Object는 개념입니다.&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;
그래서 지금까지 &lt;strong&gt;객체라는 말을 못썼습니다.&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;객체는 행위(Behavior)와 속성(Attribute)으로 구성&lt;/li&gt;
      &lt;li&gt;행위 : 먹다, 마시다&lt;/li&gt;
      &lt;li&gt;속성 : 밥, 사이다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;객체를 형상화하면&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;행위가 메소드가 되고 (함수가 될 수도 있겠죠)&lt;/li&gt;
      &lt;li&gt;속성이 프로퍼티가 됩니다. (변수도 될 수도 있습니다.)&lt;/li&gt;
      &lt;li&gt;객체가 클래스로 됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;클래스(Class)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;행위와 속성을 정의한 것&lt;/strong&gt;으로&lt;br /&gt;
&lt;strong&gt;이 상태까지는 단순 텍스트입니다.&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;인스턴스로 생성하여 프로그램에서 사용&lt;br /&gt;
클래스는 반드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; 연산자로 인스턴스를 생성하여 프로그램에서 사용합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 06 Dec 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/06/beginner.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/06/beginner.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>15-1. Boolean 오브젝트 / Boolean 오브젝트 개요, 프로퍼티 리스트, Boolean 값으로 변환</title>
        <description>&lt;h2 id=&quot;15-1-boolean-오브젝트--boolean-오브젝트-개요-프로퍼티-리스트-boolean-값으로-변환&quot;&gt;15-1. Boolean 오브젝트 / Boolean 오브젝트 개요, 프로퍼티 리스트, Boolean 값으로 변환&lt;/h2&gt;

&lt;h2 id=&quot;boolean-오브젝트&quot;&gt;Boolean 오브젝트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빌트인 오브젝트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; 처리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;값이 있으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;로 인식&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt; 인식 기준&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;undefined, null, NaN&lt;/li&gt;
      &lt;li&gt;빈 문자열, &lt;strong&gt;숫자 타입의 0&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;숫자 값 변환 기준&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;를 1로, &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;를 0으로 변환&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;프로퍼티-리스트&quot;&gt;프로퍼티 리스트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;new Boolean() : 인스턴스 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Boolean 함수&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Boolean() : Boolean 타입으로 변환&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Boolean.prototype&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;constructor : 생성자&lt;/li&gt;
  &lt;li&gt;toString() : true/false를 문자열로 반환&lt;/li&gt;
  &lt;li&gt;valueOf() : 프리미티브 값 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;new-boolean&quot;&gt;new Boolean()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;값&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;생성한 Boolean 인스턴스&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;Boolean 인스턴스 생성&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;로 변환하여 프리미티브에 설정&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;value의 모든 값이 false로 변환되며&lt;/li&gt;
      &lt;li&gt;생성한 Boolean 인스턴스의 프리미티브 값으로 설정&lt;/li&gt;
      &lt;li&gt;false를 값으로 변환하면 0이 되며 1을 더하면 1이 됩니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;문자열이면서 값이 있으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;로 변환&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;value의 모든 값이 true로 변환되며&lt;/li&gt;
      &lt;li&gt;생성한 Boolean 인스턴스의 프리미티브 값으로 설정&lt;/li&gt;
      &lt;li&gt;true를 값으로 변환하면 1이 되며 1을 더하면 2가 됩니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;boolean&quot;&gt;Boolean()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;값&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;변환한 값&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;Boolean 값으로 변환&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인스턴스를 생성하지 않고 true 또는 false로 변환&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;value의 모든 값이 true로 변환되고 true를 값으로 변환하면 1이 됩니다.&lt;/li&gt;
      &lt;li&gt;1을 더하면 2가 됩니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;tostring&quot;&gt;toString()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data&lt;/td&gt;
      &lt;td&gt;변환 대상&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;사용하지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;문자열로 변환한 값&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;data 위치의 true, false를 문자열로 변환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;즉, “true”, “false”로 변환&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;true를 문자열로 변환&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;valueof&quot;&gt;valueOf()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;object&lt;/td&gt;
      &lt;td&gt;Boolean 인스턴스&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;사용하지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;true, false&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Boolean 인스턴스의 프리미티브 값 반환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;즉, true 또는 false 반환&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;3이므로 프리미티브 값에 true가 설정&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 05 Dec 2020 23:43:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/05/beginner6.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/05/beginner6.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>14-7. Array 오브젝트(ES5 기준) / 반환 값을 파라미터 값으로 사용</title>
        <description>&lt;h2 id=&quot;14-7-array-오브젝트es5-기준--반환-값을-파라미터-값으로-사용&quot;&gt;14-7. Array 오브젝트(ES5 기준) / 반환 값을 파라미터 값으로 사용&lt;/h2&gt;

&lt;h2 id=&quot;reduce&quot;&gt;reduce()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data&lt;/td&gt;
      &lt;td&gt;반복 대상&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;첫번째 파라미터: 콜백 함수 &lt;br /&gt; 두번째 파라미터: 초깃값opt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;콜백 함수에서 반환한 값&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;forEach()처럼 &lt;strong&gt;시맨틱 접근&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;배열 끝까지 콜백함수 호출&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;파라미터 작성 여부에 따라 처리가 다름&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;reduce-파라미터-한개만-작성한-경우&quot;&gt;reduce() 파라미터 한개만 작성한 경우&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;콜백 함수만 작성한 경우&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;즉, 파라미터를 하나만 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;처음 콜백 함수를 호출할 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;인덱스 [0]의 값을 prev 값에 설정&lt;/li&gt;
      &lt;li&gt;인덱스 [1]의 값을 current 값에 설정&lt;/li&gt;
      &lt;li&gt;인덱스에 1을 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;두번째로 콜백 함수를 호출할 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;콜백 함수에서 반환된 값을 직전 값에 설정&lt;/li&gt;
      &lt;li&gt;인덱스 [2]의 값을 current 값에 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;결과:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 1,3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 4,5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9,7&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 결과: 16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;4번이 아니라 3번 반복한 것은 처음 시작할 때 index가 1이기 때문입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;reduce-파라미터-두번째까지-작성한-경우&quot;&gt;reduce() 파라미터 두번째까지 작성한 경우&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;두번째 파라미터를 작성한 경우&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;처음 콜백 함수를 호출할 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;두번째 파라미터 값을 prev 값에 설정&lt;/li&gt;
      &lt;li&gt;인덱스 [0]의 값을 current 값에 설정&lt;/li&gt;
      &lt;li&gt;인덱스에 0을 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;두번째로 콜백 함수를 호출할 때&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;콜백함수에서 반환된 값을 prev 값에 설정&lt;/li&gt;
      &lt;li&gt;인덱스 [1]의 값을 current 값에 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;반환:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 7,1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 8,3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 11,5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 반환: 16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;두번째 파라미터에 초깃값으로 7을 작성&lt;/li&gt;
  &lt;li&gt;처음 콜백 함수를 호출할 때 두번째 파라미터 값 7을 prev에 설정&lt;br /&gt;
prev: 7, current: 1, index: 0, 반환값: 8&lt;/li&gt;
  &lt;li&gt;두번째 콜백함수를 호출할 때&lt;br /&gt;
prev: 8, current: 3, index: 1, 반환값: 11&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;reduceright&quot;&gt;reduceRight()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data&lt;/td&gt;
      &lt;td&gt;반복 대상&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;첫번째 파라미터: 콜백 함수 &lt;br /&gt; 두번째 파라미터: 초깃값opt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;콜백 함수에서 반환한 값&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;reduce()와 처리방법 같음&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;배열 끝에서 앞으로 하나씩 읽어가면서&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;콜백 함수에서 반환한 값을 반환&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduceRight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;반환:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 7,5&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 12,3&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 15,1&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 반환: 16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 05 Dec 2020 23:24:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/05/beginner5.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/05/beginner5.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
  </channel>
</rss>
