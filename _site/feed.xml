<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 14 Nov 2020 22:56:05 +0900</pubDate>
    <lastBuildDate>Sat, 14 Nov 2020 22:56:05 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>12. 상수, 진수</title>
        <description>&lt;h2 id=&quot;12-상수-진수&quot;&gt;12. 상수, 진수&lt;/h2&gt;

&lt;h3 id=&quot;상수&quot;&gt;상수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;변경할 수 없는 값&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상수 변수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;상수가 설정된 변수&lt;/li&gt;
      &lt;li&gt;JS는 변수의 값을 변경할 수 있으므로 (ES5 기준)&lt;/li&gt;
      &lt;li&gt;상수 변수는 선언적 의미 (ES5 기준)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상수 변수 표기 방법 (관례)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;코딩 관례로 영문 대문자 사용&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;var ONE = 1;&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;상수로 사용한다는 &lt;strong&gt;시맨틱&lt;/strong&gt; 선언&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ONE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ONE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ONE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                   &lt;span class=&quot;c1&quot;&gt;// 456&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// 1.7976931348623157e+308&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;ONE 변수를 대문자로 선언한 것은 상수라는 것을 나타내기 위한 것&lt;/li&gt;
          &lt;li&gt;ES5 기준으론 상수라는 뜻으로 선언한 변수값을 변경할 수 있습니다.&lt;br /&gt;
하지만 대문자로 쓰여져있으면 변경하지 말라는.. 관습적인 것입니다.&lt;/li&gt;
          &lt;li&gt;Number.MAX_VALUE는 최대값입니다.&lt;br /&gt;
JS 상수이며 값을 바꾸면 &lt;strong&gt;에러&lt;/strong&gt;가 납니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JS가 제공하는 상숫값은 변경 불가&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MAX_VALUE&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;MIN_VALUE&lt;/code&gt; 등&lt;/li&gt;
      &lt;li&gt;MIN_VALUE 라는 상수도 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;진수&quot;&gt;진수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;10진수 : 123&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;16진수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;0xFF : 255&lt;/li&gt;
      &lt;li&gt;1번째에 숫자 0 작성&lt;/li&gt;
      &lt;li&gt;2번째에 영문자 x 작성&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3번째 이후 : 0 ~ f 작성&lt;br /&gt;
대소문자 구분하지 않음&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0XF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// 15&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 255    &lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xfff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 4095&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;OXF는 15&lt;br /&gt;
OX는 16진수를 나타내므로 값이 아니며&lt;br /&gt;
A: 10, B: 11, C: 12, D: 13, E: 14, F: 15&lt;/li&gt;
          &lt;li&gt;0xff는 (16 * 15 + 15) 방법으로 계산&lt;/li&gt;
          &lt;li&gt;0xfff는 (16 * 16 * 15) + (16 * 15) + 15로 계산&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;8진수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ES3에서 폐지, ES6 재정의&lt;/li&gt;
      &lt;li&gt;8진수가 ES3에서 폐지된 이유.&lt;br /&gt;
16진수의 첫번째 자리는 숫자 0입니다. 그런데 8진수는 영문 o였습니다.&lt;br /&gt;
헷갈리기 때문에 폐지됐었습니다.&lt;br /&gt;
그리고 ES6에서 다시 정의했습니다.&lt;br /&gt;
&lt;strong&gt;첫번째 자리를 숫자 0을 쓰고 두번째 자리에 영문 o를 씁니다.&lt;/strong&gt;&lt;br /&gt;
그리고 세번째 자리에 0~7 값을 정의할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;2진수 : ES6에서 특별한 방법 제공&lt;/p&gt;

    &lt;p&gt;2진수는 0 또는 1을 가진 비트입니다.&lt;br /&gt;
이 비트를 조합해서 값을 표현합니다.&lt;br /&gt;
ES5에선 2진수를 활용하는 경우가 거의 없습니다. 쓰더라도 가독성 이유로 비추입니다.&lt;/p&gt;

    &lt;p&gt;하지만 ES6에선 써야될 경우가 있습니다.&lt;br /&gt;
ES6에선 2진수 전용 특별한 방법을 제공하고 있습니다.&lt;br /&gt;
그것은 &lt;strong&gt;머신러닝&lt;/strong&gt; &lt;strong&gt;딥러닝&lt;/strong&gt;에서 사용하는데요, 머신러닝 딥러닝에서 일반적인 CPO를 사용하기보단 GPU를 사용합니다.&lt;br /&gt;
CPO 보다 GPU가 처리속도가 더 빠르기 때문입니다.&lt;/p&gt;

    &lt;p&gt;이는 WebGL에서 제공을 하는데, 그때는 2진수를 사용합니다.&lt;br /&gt;
머신러닝, 딥러닝과 같이 연산을 많이하면서 빠르게 처리해야될 때는 2진수를 사용해야됩니다.&lt;br /&gt;
이는 ES6 과정에서 다루도록 하겠습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 14 Nov 2020 22:33:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/14/beginner8.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/14/beginner8.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>11. 정수, 실수, 숫자 처리</title>
        <description>&lt;h2 id=&quot;11-정수-실수-숫자-처리&quot;&gt;11. 정수, 실수, 숫자 처리&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;정수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소수가 없는 숫자&lt;/li&gt;
      &lt;li&gt;123, -123&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;실수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소수를 가진 숫자&lt;/li&gt;
      &lt;li&gt;1.23, 1.0&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JS는 정수, 실수를 구분하지 않음&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;1, 1., 1.0 모두 1.0으로 간주&lt;br /&gt;
단, 표시는 1로 표시&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.);&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.00001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 1.00001&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;숫자-처리&quot;&gt;숫자 처리&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;정수와 실수를 구분하지 않음&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;64비트(bit) 부동 소수점 처리&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;비트는 0과 1의 값만을 가집니다.&lt;/li&gt;
          &lt;li&gt;이런 0과 1의 값을 갖는 bit를 64개를 사용해 값을 처리합니다. 1도 64비트를 사용한 것이고 1억도 64비트를 사용하고 100억, 1000억도 64비트를 사용합니다.&lt;/li&gt;
          &lt;li&gt;그래서 값이 클 때는 효율이 있지만 값이 1이라면(0과 1은 1비트이다.) 비트 한개만 있어도 되는데, 64개를 사용하게되므로 loss(손실)이 발생합니다.&lt;/li&gt;
          &lt;li&gt;그러나 IEEE 754 표준을 준수하기 때문에 어쩔수가 없습니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/IEEE_754&quot; target=&quot;_blank&quot;&gt;IEEE 754 표준&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;부동 소수점 처리란?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;123을 123.0으로 처리&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;즉 정수를 실수로 처리하는 방법입니다.&lt;/li&gt;
          &lt;li&gt;그래서 자바스크립트는 정수와 실수를 구분하지 않습니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.123&lt;/code&gt;처럼 소수점 앞에 값을 작성하지 않으면 0을 붙여 0.123으로 사용합니다.&lt;/li&gt;
  &lt;li&gt;정수와 실수를 구분하는 언어에서는 실수(0.12)와 정수(5)를 더할 수 없으며&lt;/li&gt;
  &lt;li&gt;정수를 실수(5.0)로 변환하여 더해야 합니다.&lt;/li&gt;
  &lt;li&gt;JS는 정수와 실수를 구분하지 않고 실수로 계산합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;C++과 JAVA 등 이런 언어는 정수와 실수를 구분하여 선언할 수 있습니다.&lt;br /&gt;
정수를 선언했으면 해당 변수엔 실수값을 할당할 수 없고 실수 변수를 선언했으면 해당 변수엔 정수값을 할당할 수 없습니다.&lt;/p&gt;

&lt;p&gt;자바스크립트 숫자는 이런 면에서 자유롭습니다.&lt;br /&gt;
이러한 특징이 장점이될 수도 있고, 단점이 될 수도 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ES6에 정수, 실수 구분 추가&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ES6에 정수 또는 실수를 구분하여 정수, 실수만을 다룰 수 있는 방법이 등장했습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 14 Nov 2020 22:16:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/14/beginner7.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/14/beginner7.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>10. console.log()</title>
        <description>&lt;h2 id=&quot;10-consolelog&quot;&gt;10. console.log()&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;console.log(…data)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;소괄호() 안에 작성된 값을 브라우저 콘솔 창에 출력&lt;/li&gt;
      &lt;li&gt;문자, 숫자 등을 출력&lt;/li&gt;
      &lt;li&gt;콤마로 구분하여 다수 작성 가능&lt;/li&gt;
      &lt;li&gt;소괄호 안에 작성한 값을 강좌에서는 파라미터 값이라고 부릅니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JS에서 제공하는 것은 아니며.. 시간이 되시는대로 다음 api를 읽어보시길 바랍니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://console.spec.whatwg.org/#log&quot; target=&quot;_blank&quot;&gt;console.log API&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;브라우저-콘솔창-열기&quot;&gt;브라우저 콘솔창 열기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;크롬 브라우저, window 기준&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;브라우저 상단 오른쪽 끝의 “chrome 맞춤설정 및 제어”를 클릭&lt;/li&gt;
      &lt;li&gt;도구 더보기&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;개발자 도구(D) 클릭&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;개발자 도구 단축 키 : Ctrl + Shift + I&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;도구 창 메뉴에서 console 클릭&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 14 Nov 2020 22:06:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/14/beginner6.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/14/beginner6.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>9. 주석 (comment)</title>
        <description>&lt;h2 id=&quot;9-주석-comment&quot;&gt;9. 주석 (comment)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;주석은 JS 코드로 인식하지 않음&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;한줄 주석&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c1&quot;&gt;// 책을 book 변수에 할당합니다.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 여기부터 주석;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;// 부터 줄 끝까지를 주석으로 처리&lt;/li&gt;
      &lt;li&gt;주석의 확장성을 위해 코드 윗줄에 작성&lt;/li&gt;
      &lt;li&gt;single-line comment&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;블록(block) 주석&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;cm&quot;&gt;/*
  var book = &quot;책&quot;;
  var music = &quot;음악&quot;;
  */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;/* 와 */ 사이의 모든 코드를 주석으로 처리합니다.&lt;/li&gt;
      &lt;li&gt;일반적으로 4줄, 5줄 이상을 주석으로 처리할 때 사용합니다.&lt;/li&gt;
      &lt;li&gt;multi-line comment&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;/** 코드 */ 형태&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;별 하나를 더 추가한 형태&lt;/li&gt;
      &lt;li&gt;JS 스펙에 정의된 주석은 아니며 블록 주석과 같음&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;cm&quot;&gt;/**
  * @function getName
  * 1. 이 형태로 작성
  * @param {String} code, 코드
  */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;개발자들 사이의 코딩 관례&lt;/li&gt;
      &lt;li&gt;이렇게 작성하면 프로그램 설명 문서를 자동으로 만들어 주는 툴이 있습니다.&lt;/li&gt;
      &lt;li&gt;오래된 관례라고 생각하면 됩니다. 다른 언어에서도 위와 같은 주석 방식을 많이 사용합니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JS 스펙(specification)이란?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;자바스크립트 문법을 작성한 문서&lt;/li&gt;
      &lt;li&gt;ES3, ES5는 JS 스펙의 에디션(Edition) - 흔히 버전이라고 합니다. 자바스크립트는 버전을 에디션이라 표기하고 있습니다.&lt;/li&gt;
      &lt;li&gt;개발자들은 해당 스펙 내용을 보고 스펙에 정리되어있는 문법을 사용합니다.&lt;/li&gt;
      &lt;li&gt;자바스크립트 엔진은 스펙 문법에 의해 작성된 코드를 실행합니다. 중고급 과정에서는 자바스크립트 엔진 측면에서 공부를 합니다.&lt;br /&gt;
엔진이 어떻게 작동하므로 이에 맞춰 코드를 작성하면 효율적이다! 라는 내용을 배우는 것입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 14 Nov 2020 21:52:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/14/beginner5.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/14/beginner5.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>8. 변수</title>
        <description>&lt;h2 id=&quot;8-변수&quot;&gt;8. 변수&lt;/h2&gt;

&lt;p&gt;변수란 변할 수 있는 값을 말합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Variable&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;값을 저장하는 영역&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변수 사용 목적&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;변수에 저장된 값의 재사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변수 선언 방법&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;값을 변수에 할당하는 방법&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;는 할당 연산자라고 합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 오른쪽의 값을 왼쪽 변수에 할당합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;book&lt;/code&gt; 변수로 값을 사용할 수 있게 됩니다.&lt;/p&gt;

&lt;h3 id=&quot;변수-선언-방법&quot;&gt;변수 선언 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;콤마로 구분하여 다수 작성&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;줄을 바꾸어 작성&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;변수 이름 앞에 콤마 작성&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;의미를 부여하여 변수 이름 작명&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;시맨틱(Semantic)이라고 합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;변수에-값-할당-방법&quot;&gt;변수에 값 할당 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;나중에 할당한 값으로 바뀜&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
  &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;789&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;JS 코드는 왼쪽에서 오른쪽으로 처리 (세미콜론이 나올 때까지)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;point&lt;/code&gt; 변수 값은 123 -&amp;gt; 456 -&amp;gt; 789로 바뀜&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;같은 값 할당&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;amount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;point와 amount의 값은 123&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;권장 형태는 아님&lt;/p&gt;

    &lt;p&gt;오래된 브라우저에선 값이 연동되는 경우도 있기 때문입니다.&lt;br /&gt;
 연동이란, 만약에 &lt;code class=&quot;highlighter-rouge&quot;&gt;amount&lt;/code&gt;에 값을 &lt;strong&gt;456&lt;/strong&gt;을 할당했습니다.&lt;br /&gt;
 그랬더니 &lt;code class=&quot;highlighter-rouge&quot;&gt;point&lt;/code&gt; 까지 &lt;strong&gt;456&lt;/strong&gt;으로 바뀌는 것입니다.&lt;br /&gt;
 이를 &lt;strong&gt;연동&lt;/strong&gt;이라고 합니다.&lt;br /&gt;
 최신 브라우저에선 이런 현상이 없지만, 오래된 브라우저에선 이러한 일이 발생할 수가 있습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sat, 14 Nov 2020 21:39:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/14/beginner4.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/14/beginner4.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>7. 문장</title>
        <description>&lt;h2 id=&quot;7-문장&quot;&gt;7. 문장&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;statement&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;JS 코드 실행 단위&lt;/li&gt;
      &lt;li&gt;세미콜론(;)까지 하나의 문장 (아래 코드보면 문장 안에 문장이 있는 것을 볼 수 있다.)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;var book = &quot;책&quot;&lt;/code&gt;;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;책&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;문장 시작 위치&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;위치 제약 없음&lt;/li&gt;
      &lt;li&gt;들여쓰기 : 일반적으로 2칸, 4칸&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 14 Nov 2020 21:34:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/14/beginner3.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/14/beginner3.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>6. 강좌 환경, Hellow JavaScript</title>
        <description>&lt;h2 id=&quot;6-강좌-환경-hellow-javascript&quot;&gt;6. 강좌 환경, Hellow JavaScript&lt;/h2&gt;

&lt;h3 id=&quot;코딩에-필요한-것&quot;&gt;코딩에 필요한 것&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;최신 브라우저&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;강좌에서는 크롬 브라우저 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;편집기 (에디터)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;손에 익숙한 것 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용하고 있는 것이 없다면&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Visual Studio Code (VS Code)&lt;/li&gt;
      &lt;li&gt;강좌에서는 VS Code 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;html-파일-작성&quot;&gt;HTML 파일 작성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;확장자 : html&lt;/li&gt;
  &lt;li&gt;인코딩 : utf-8&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ko&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;자바스크립트&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./hello.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// hello.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;안녕하세요.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;본 강좌에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; 요소를 &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt; 요소 안에 작성하는 것을 기본으로 하겠습니다.&lt;br /&gt;
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;defer&lt;/code&gt; 속성을 작성해 주십시오.&lt;/p&gt;

&lt;h3 id=&quot;defer&quot;&gt;defer&lt;/h3&gt;

&lt;p&gt;html 파일을 처음부터 랜더링하다가 &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; 요소의 &lt;strong&gt;hello.js&lt;/strong&gt;를 만나면 서버에서 &lt;strong&gt;hello.js&lt;/strong&gt; 파일을 가져옵니다.&lt;br /&gt;
&lt;strong&gt;그리고 바로 이어서 **hello.js&lt;/strong&gt; 파일에 작성되어있는 코드를 실행합니다.&lt;br /&gt;
그런데 그 코드에서 &lt;strong&gt;body 태그 안의 어떤 요소에 접근을 하게되면, 아직 body를 랜더링하지 않았으므로 &lt;span style=&quot;color&quot;&gt;에러&lt;/span&gt;가 발생합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;반면 &lt;code class=&quot;highlighter-rouge&quot;&gt;defer&lt;/code&gt; 속성을 작성하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;까지 랜더링 한 후에 &lt;strong&gt;hello.js&lt;/strong&gt; 파일에 작성되어있는 코드를 실행합니다.&lt;br /&gt;
따라서 그 코드에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt; 안의 어떤 요소에 접근을 하더라도 에러가 발생하지 않습니다.&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Nov 2020 20:54:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/14/beginner2.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/14/beginner2.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>5. 강좌 범위</title>
        <description>&lt;h2 id=&quot;5-강좌-범위&quot;&gt;5. 강좌 범위&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;자바스크립트 비기너 과정&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비기너에게 중요한 것은?&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;기본을 만드는 것&lt;/li&gt;
      &lt;li&gt;코딩 경험을 많이 하는 것&lt;/li&gt;
      &lt;li&gt;감각을 만드는 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ES5의 95% 정도를 다룹니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;키노트-활용&quot;&gt;키노트 활용&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;키노트의 용어, 함수 등을 파악&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;본 것과 안 본 것의 차이&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;비기너를-위한-추천&quot;&gt;비기너를 위한 추천&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자바스크립트 개발의 기본은 HTML5 마크업, CSS, DOM, JavaScript&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;추천 방향&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;위의 4가지는 프레임워크를 사용하지 않고 코딩할 수 있게 합니다.&lt;/li&gt;
      &lt;li&gt;감각을 만들 수 있기 때문&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;감각을 갖고 있으면&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프레임워크는 2~4주면 배울 수 있습니다.&lt;/li&gt;
      &lt;li&gt;위의 4가지가 바탕이기 때문&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;처음 시작할 때 방향을 잘 잡아야 합니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 14 Nov 2020 20:18:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/11/14/beginner.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/11/14/beginner.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>직접 작성한 gulp 및 grunt, gulp, webpack 관련</title>
        <description>&lt;h2 id=&quot;직접-작성한-gulp-및-grunt-gulp-webpack-관련&quot;&gt;직접 작성한 gulp 및 grunt, gulp, webpack 관련&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/hyungju-lee/private-hj/tree/master/private/20201106_lifeshoppine&quot; target=&quot;_blank&quot;&gt;링크&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;N 업무에서 새로운 페이지를 만들어야되는 작업이 있었습니다.&lt;br /&gt;
그래서 gulp로 N 업무를 진행해봤습니다.&lt;/p&gt;

&lt;h2 id=&quot;n-업무용-걸프&quot;&gt;N 업무용 걸프&lt;/h2&gt;

&lt;p&gt;N 업무용 걸프를 위해 지켜야할 사항을 다음과 같이 정했습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;CSS 컴파일 결과는 한줄 \n 한줄 \n &amp;lt;- 이런 형식으로 나와야됩니다.&lt;/li&gt;
  &lt;li&gt;CSS 컴파일될 때 sourcemaps 기능이 적용되어선 안됩니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;그리고 추가 규칙도 정했습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;JS도 컴파일될 때 sourcemaps 기능이 적용되어선 안됩니다.&lt;/li&gt;
  &lt;li&gt;JS는 min 파일로 압축 및 난독화해서 내보냅니다.&lt;/li&gt;
  &lt;li&gt;최신 문법으로 작성해도 최소 IE9~10 버전까지 적용될 수 있도록 컴파일되게 합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;위와 같은 규칙을 정해놓고 Gulp를 구성했습니다.&lt;br /&gt;
이전에도 공유드린 적이 있지만, Gulp를 실행할 때 &lt;strong&gt;환경변수&lt;/strong&gt;를 전달해 현재 ‘개발중’인지 아니면 고객에게 전달해줄 빌드중(Production)인지를 구분하였습니다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gulp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NODE_ENV=production gulp build&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;에 위와 같이 &lt;strong&gt;Custom&lt;/strong&gt; 명령어를 작성합니다.&lt;br /&gt;
환경변수 인식 오류를 대비해&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm i &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; win-node-env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;win-node-env&lt;/code&gt; 모듈도 설치해줍니다.&lt;br /&gt;
위와 같이 작성한 후에 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm start&lt;/code&gt; 명령어를 입력하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp&lt;/code&gt; 명령어가 실행되고, 
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; 명령어를 입력하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;NODE_ENV=production gulp build&lt;/code&gt; 명령어가 실행됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;start는 npm start이고 build는 npm run build인 이유는&lt;br /&gt;
start는 npm에 기본 내재되어있는 명령어이고 build는 사용자가 추가한 명령어이기 때문입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;npm-start---scss&quot;&gt;npm start - SCSS&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image00.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm start&lt;/code&gt;로 해당 걸프를 실행하면 위와 같이 (개발용)이란 메시지가 붙습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 위와같이 &lt;strong&gt;sourcemaps&lt;/strong&gt; 기능이 활성화되도록 했습니다.&lt;br /&gt;
그 이유는 개발중일 때는 &lt;strong&gt;sourcemaps&lt;/strong&gt; 기능이 켜져있어야 어디 sass 파일에 작성된 내용인지를 쉽게 알 수 있기 때문입니다.&lt;/p&gt;

&lt;h2 id=&quot;npm-run-build---scss&quot;&gt;npm run build - SCSS&lt;/h2&gt;

&lt;p&gt;반대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; 명령어를 통해 &lt;strong&gt;build&lt;/strong&gt;를 하면 다음과 같이 결과물이 출력됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아까완 다르게 (개발용) 텍스트가 붙어있지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image03.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그리고 &lt;strong&gt;sourcemaps&lt;/strong&gt; 기능도 없어진 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;npm-start---javascript&quot;&gt;npm start - JavaScript&lt;/h2&gt;

&lt;p&gt;JavaScript도 마찬가지입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm start&lt;/code&gt;로 실행하면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image04.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;어느 파일에서 작성된 코드인지를 보여줍니다.&lt;/p&gt;

&lt;h2 id=&quot;npm-run-build---javascript&quot;&gt;npm run build - JavaScript&lt;/h2&gt;

&lt;p&gt;하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; 명령어를 통해 빌드하면,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image05.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 &lt;strong&gt;sourcemaps&lt;/strong&gt; 기능이 없어져 컴파일된 결과물을 가리키고 어디서 작성되어있는지 알 수 없게됩니다.&lt;br /&gt;
또한 1줄로 min 파일화되었고 난독화되었음도 확인할 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;원리&quot;&gt;원리&lt;/h2&gt;

&lt;p&gt;아까 위에서 말씀드렸듯이 &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;에 커스텀한 명령어를 통해 각 명령어마다 다른 환경변수를 전달한다고 했습니다.&lt;br /&gt;
해당 환경변수는 다음과 같이 gulp 코드에 전달됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image07.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 코드를 보시면 상수 &lt;code class=&quot;highlighter-rouge&quot;&gt;sourcemaps&lt;/code&gt;에 &lt;strong&gt;process.env.NODE_ENV === “production” ? false : true;&lt;/strong&gt; 이런 코드로 값을 부여하는 것을 알 수 있습니다.&lt;br /&gt;
위 코드로 현재 개발용 실행인지 아니면 빌드하는 것인지를 구분하는 것입니다.&lt;br /&gt;
그렇게 구분되어진 값이 &lt;code class=&quot;highlighter-rouge&quot;&gt;sourcemaps&lt;/code&gt; 상수에 담기게되고,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image06.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 값을 위와 같이 전달함으로써 상황에 맞게 on/off 할 수 있는 것입니다.
JavaScript 컴파일도 마찬가지 원리입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image08.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;환경변수를 받아와 &lt;strong&gt;gulp-if&lt;/strong&gt; 모듈로 true인지 false인지를 구분해 &lt;code class=&quot;highlighter-rouge&quot;&gt;terser()&lt;/code&gt; 메서드를 실행할지 말지를 결정했습니다.&lt;/p&gt;

&lt;h2 id=&quot;css-한줄-컴파일&quot;&gt;CSS 한줄 컴파일&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sass&lt;/code&gt; 컴파일할 때 &lt;strong&gt;outputStyle&lt;/strong&gt; 옵션으로는 4가지가 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;nested : 기본값입니다. 옵션을 적용하지 않았을 때 해당 스타일로 컴파일 됩니다.&lt;/p&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;/* 컴파일 결과물 */&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;expanded&lt;/p&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;/* 컴파일 결과물 */&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;compact&lt;/p&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;/* 컴파일 결과물 */&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;compressed&lt;/p&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;N 업무용 스타일은 3번 &lt;strong&gt;compact&lt;/strong&gt;입니다.&lt;br /&gt;
하지만 gulp-sass 컴파일할때 &lt;strong&gt;compact&lt;/strong&gt; 옵션을 줘서 컴파일하면&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* 컴파일 결과물 */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Georgia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 한줄씩 더 개행되어 컴파일됩니다.&lt;br /&gt;
위와 같이 컴파일되면 곤란합니다.&lt;br /&gt;
그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp-clean-css&lt;/code&gt; 라이브러리의 도움을 받았습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image09.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;compact 형식으로 컴파일되게하고 gulp-clean-css 라이브러리의 도움을 받아 한번더 개행처리된 부분을 제거했습니다.&lt;/p&gt;

&lt;h2 id=&quot;js-파일-정리방법&quot;&gt;JS 파일 정리방법&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;src/js&lt;/code&gt; 폴더에 파일, 폴더트리는 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image11.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;script.js&lt;/code&gt; 파일엔 apps 폴더에 정의되어있는 파일들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 시켰습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./apps/common&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;caseView.js&lt;/code&gt; 파일엔 caseView 폴더에 정의되어있는 파일들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 시켰습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./caseView/guide&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./caseView/search&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./caseView/brand&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./caseView/main&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./caseView/brand-main&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 작성하고 컴파일하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 된 파일들의 내용이 불러와져 컴파일됩니다.&lt;br /&gt;
저희가 gulp로 scss 파일 컴파일 하는 원리와 똑같다고 생각하면 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;javascript-polyfill&quot;&gt;JavaScript Polyfill&lt;/h2&gt;

&lt;p&gt;자바스크립트 폴리필도 적용했습니다.&lt;br /&gt;
폴리필이란 쉽게 말해 &lt;strong&gt;코드조각&lt;/strong&gt;입니다.&lt;br /&gt;
스니펫과 비슷한 개념이라고 생각하시면 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 스니팻과는 차이점이 있습니다.&lt;br /&gt;
스니팻은 개발자가 개발을 편하게 하기위해 자주 쓰는 코드조각 모음입니다.&lt;br /&gt;
젠코딩에 주로 많이 사용됩니다.&lt;/p&gt;

&lt;p&gt;폴리필은 크로스브라우징을 위한 코드조각이라고 보시면 됩니다.&lt;br /&gt;
예를 들면 &lt;strong&gt;Promise&lt;/strong&gt;와 같은 ES6 이후에 생긴 새로운 객체는 IE에서는 전혀 지원이 안됩니다.&lt;br /&gt;
&lt;strong&gt;이를 IE에서도 작동하게끔 만들어주는 코드 조각들이 바로 폴리필입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;프로젝트를 진행하시다보면, 혹은 작업하시다보면 특정 플러그인을 사용했을시 IE10에서 확인해보면&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;indexOf가 정의되어있지 않습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 에러메시지를 접할때가 있습니다.&lt;br /&gt;
이런 경우에 &lt;strong&gt;특정 코드를 추가하면&lt;/strong&gt; 해결되는 경험을 해보셨을 수도 있습니다.&lt;br /&gt;
그 특정 코드를 바로 &lt;strong&gt;폴리필&lt;/strong&gt;이라고 부릅니다.&lt;/p&gt;

&lt;p&gt;하지만 이렇게 에러가 생길때마다 직접 폴리필을 찾아 추가하는 것은 개발자에게 아주 귀찮은 일입니다.&lt;br /&gt;
이러한 일을 자동으로 해주는 라이브러리가 있습니다.&lt;/p&gt;

&lt;p&gt;Gulp에선 바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;browserify&lt;/code&gt; 라이브러리가 이 역할을 해줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/img/node/gulp/image10.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 자바스크립트 파일을 컴파일 합니다.&lt;br /&gt;
위와 같이 하면 자바스크립트를 작성할 때 최신 문법과 최신 개념을 사용해서 작업해도 알아서 브라우저 저버전에서도 작동하도록 컴파일해줍니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;grunt-gulp-webpack-parcel--자동화툴-역사&quot;&gt;Grunt, Gulp, Webpack, parcel .. 자동화툴 역사&lt;/h2&gt;

&lt;p&gt;FE 개발자들은 Grunt, Gulp, Webpack, parcel 등 많은 종류의 자동화 툴을 사용합니다.&lt;/p&gt;

&lt;p&gt;이 중에서 Grunt와 Gulp는 웹 테스크 매니저 또는 웹 테스크 러너라 불리고 Webpack, parcel 등은 모듈 번들러라고 불립니다.&lt;br /&gt;
등장 순서로보면 Grunt가 2011년, Gulp가 2013년에 나왔고 Webpack과 parcel는 그 이후에 나왔습니다.&lt;/p&gt;

&lt;p&gt;이러한 자동화 도구는 같은 철학을 가지고 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;개발자 편의성&lt;/li&gt;
  &lt;li&gt;사용자 접근성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이러한 자동화 툴은 공통적으로 귀찮고 반복적이고 번거로운 일이면서도 개발자의 실수를 유발하기 쉬운 작업들을 자동화했습니다.&lt;br /&gt;
개발자가 그러한 일들을 직접 처리하는 것이 아닌 컴퓨터가 자동으로 처리해 개발자의 실수를 최소화하고 작업시간을 단축시켰습니다.&lt;/p&gt;

&lt;p&gt;그리고 결과물을 최적화해 사용자의 접근성을 높였습니다.&lt;br /&gt;
최적화엔 압축, min 파일화, 번들링 등 많은 방법이 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;개발자들이-grunt에서-gulp로-옮겨간-이유&quot;&gt;개발자들이 Grunt에서 Gulp로 옮겨간 이유&lt;/h2&gt;

&lt;p&gt;저희 회사만 보더라도 대부분 작업에서 Gulp를 더 많이 사용합니다.&lt;br /&gt;
라인만해도 옛날 레포에서만 Grunt를 가끔 볼 수 있고 대부분 Gulp를 사용합니다.&lt;br /&gt;
왜 Grunt에서 Gulp로 옮겨갔는지 이유를 알아보기 전에 Grunt와 Gulp의 차이점을 짚고 넘어가는 게 좋을 것 같습니다.&lt;/p&gt;

&lt;p&gt;겉으로만 보면 Grunt와 Gulp는 같은 작업을 수행합니다.&lt;/p&gt;

&lt;h3 id=&quot;grunt-gulp-수행방법&quot;&gt;Grunt, Gulp 수행방법&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;하지만 수행하는 방법에서 차이가 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Grunt는 아래와 같이 설정하는 형태로 작성합니다.&lt;br /&gt;
특정 기능을 구현하기 위해 미리 정해져있는 규칙에 의해 설정파일을 작성하면 되는 방식입니다.&lt;br /&gt;
프레임워크와 라이브러리 개념으로 보자면 프레임워크에 더 가깝다고 볼수도 있을 것 같습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Grunt는 JSON 형태의 config를 구성하는 방식으로 구현됩니다.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;imagemin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
   &lt;span class=&quot;nl&quot;&gt;jpgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
		&lt;span class=&quot;nl&quot;&gt;progressive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;expand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;src/img&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;*.jpg&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;images/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;반대로 Gulp는 아래와 같이 JavaScript 코드를 다룰 줄 안다면 JavaScript로 쉽게 작성할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Gulp는 Javascript를 사용합니다.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jpgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imagemin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;progressive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;optimized_images&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;속도&quot;&gt;속도&lt;/h3&gt;

&lt;p&gt;Grunt와 Gulp는 속도면에서도 차이가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gulp는 스트림을 기반으로하는 빌드 시스템입니다.&lt;/strong&gt;&lt;br /&gt;
스트림을 이용해서 데이터를 읽고 출력하며 작업들을 ‘메모리’에서 처리합니다.&lt;br /&gt;
즉, 요청 후 한번에 결과를 받는 것이 아니라 이벤트 중간중간 전달받아 작업을 하기 때문에 비교적 작업속도가 빠릅니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;스트림이란?&lt;/strong&gt;&lt;br /&gt;
데이터 입,출력시 비동기적으로 처리될 수 있는 데이터의 연속적 흐름으로써, NodeJS에서는 이 스트림을 읽고 쓸 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;…이건 다른 카테고리에서 정리했으므로 여기까지.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Nov 2020 23:40:00 +0900</pubDate>
        <link>http://localhost:4000/node_gulp/2020/11/12/gulp.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_gulp/2020/11/12/gulp.html</guid>
        
        
        <category>node_gulp</category>
        
      </item>
    
      <item>
        <title>자바스크립트 초보로서 배운 10가지</title>
        <description>&lt;h2 id=&quot;자바스크립트-초보로서-배운-10가지&quot;&gt;자바스크립트 초보로서 배운 10가지&lt;/h2&gt;

&lt;h3 id=&quot;1&quot;&gt;1&lt;/h3&gt;
&lt;p&gt;자바스크립트에는 숫자에 대한 다른 데이터 유형이 없습니다.&lt;br /&gt;
기본적으로 모든 숫자는 이중으로 간주됩니다.&lt;br /&gt;
정수가 없습니다.&lt;br /&gt;
예를 들어, 변수 두 개를 선언했다고 가정합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;a = 7&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;b = 2&lt;/code&gt;는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;입니다.&lt;br /&gt;
c와 같은 다른 프로그래밍 언어에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;c++&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;a / b = 3&lt;/code&gt;을 제공하지만 JavaScript에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;3.5&lt;/code&gt;를 얻습니다.&lt;br /&gt;
기본적으로 JavaScript는 모든 숫자에 대해 &lt;strong&gt;부동 소수점 나누기&lt;/strong&gt;를 수행합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;3.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2&quot;&gt;2&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=== vs ==&lt;/code&gt; 비교 연산자.&lt;br /&gt;
다른 프로그래밍 언어에 익숙하고 JavaScript를 처음 사용하는 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;에 눈살을 찌푸 릴 수 있습니다.  &lt;br /&gt;
double equal 연산자는 다소 잊고 있습니다.  &lt;br /&gt;
데이터 유형이 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 양쪽에서 동일하지 않으면 변수를 강제 변환하려고합니다.&lt;/p&gt;

&lt;p&gt;두 개의 변수 &lt;code class=&quot;highlighter-rouge&quot;&gt;num1 = 5&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;num2 = &quot;5&quot;&lt;/code&gt;가 있으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 같음을 사용하면 결과가 참이됩니다.&lt;br /&gt;
숫자 5와 문자열 5가 같지 않다는 것을 알고 있지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;는 비교를 위해 데이터유형을 강제 변환합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;반면에 &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;는 양쪽 변수 / 값의 데이터 유형이 동일하지 않으면 작동하지 않습니다.&lt;/p&gt;

&lt;p&gt;두 개의 변수 &lt;code class=&quot;highlighter-rouge&quot;&gt;num1 = 5&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;num2 = &quot;5&quot;&lt;/code&gt;가있는 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt; 같음을 사용하면 결과가 false가됩니다.&lt;br /&gt;
우리는 숫자 5와 문자열 5가 같지 않다는 것을 알고 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt; 는 값과 데이터 유형을 모두 확인합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;!==&lt;/code&gt; 연산자에도 비슷한 것이 적용됩니다.&lt;/p&gt;

&lt;h3 id=&quot;3&quot;&gt;3&lt;/h3&gt;

&lt;p&gt;JavaScript의 대문자 소문자 문자열 구분.&lt;br /&gt;
두 개의 문자열 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bangladesh&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;bangladesh&lt;/code&gt;가 있다고 가정하면 자바스크립트는 이를 어떻게 비교할까요.&lt;br /&gt;
이 비교를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 연산자가 있습니다.&lt;br /&gt;
지금은 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 연산자에 초점을 맞출 것입니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt;는 대소 문자를 구분하는 방식으로 두 문자열을 비교합니다.&lt;br /&gt;
대소 문자를 구분하는 방식은 조건 결과가 참이 되려면 두 문자열의 동일한 위치에있는 각 문자가 동일한 대소 문자 여야 함을 의미합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bangladesh&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bangladesh&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// results false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;country1&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;country2&lt;/code&gt; 변수를 동일하게 고려하려면 둘 다 동일한 대소 문자 (소문자 또는 대문자)로 만들어야합니다.&lt;br /&gt;
JavaScript에는 문자열 대소 문자 변환을위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;toLowerCase()&lt;/code&gt; 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;toUpperCase()&lt;/code&gt; 두 가지 메서드가 있습니다.&lt;br /&gt;
다음 예에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;country1.toLowerCase()&lt;/code&gt;를 사용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;country1&lt;/code&gt; 변수를 소문자로 변환했습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Bangladesh&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;bangladesh&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;country1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;country2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4&quot;&gt;4&lt;/h3&gt;

&lt;p&gt;JavaScript에서 배열을 만드는 양방향.&lt;br /&gt;
다른 프로그래밍 언어에서 볼 수있는 전통적인 &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt; 사용 및 &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt; 클래스 사용.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;를 사용하여,로 구분 된 값으로 배열을 선언합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Array()&lt;/code&gt;를 사용할 때 빈 배열을 선언하고 인덱스와 값을 사용하여 배열의 값을 할당합니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// first way&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [1, 3, 4, 5] // output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// using Array Class()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;apple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;] // output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5&quot;&gt;5&lt;/h3&gt;

&lt;p&gt;배열을 스택 및 대기열로 사용.&lt;br /&gt;
JavaScript 배열을 Stack 및 Queue로 사용할 수 있습니다.&lt;br /&gt;
이제 스택을 살펴 보겠습니다.&lt;/p&gt;

&lt;p&gt;스택은 선입 선출 데이터 구조입니다.&lt;br /&gt;
먼저 스택을 선언 한 다음 배열 푸시 및 팝 메서드를 사용하여 스택 항목을 삽입하고 팝할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [] // output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// insert a&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;// insert b&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// insert c&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// print the stack&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// (3) [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// poping gives the top element c&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// popping gives next the top element b&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6&quot;&gt;6&lt;/h3&gt;

&lt;p&gt;변수 선언 var, let 및 coast를위한 JavaScript의 3 개의 키워드.&lt;br /&gt;
const를 사용하면 값이 변경되지 않는 JavaScript에서 변수를 선언 할 수 있습니다.&lt;br /&gt;
상수 변수를 선언하는 일반적인 규칙은 이름 지정에 모두 대문자를 사용하는 것입니다.&lt;br /&gt;
const PI = 3.14159처럼.&lt;/p&gt;

&lt;p&gt;var는 다시 초기화 할 수있는 변수를 선언하는 데 사용되며 현재 컨텍스트 범위와 그 클로저를 포함합니다.&lt;br /&gt;
let은 선언 된 코드 블록 내에서 범위가있는 변수를 선언하는 데 사용됩니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.14159&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 5 // output&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Hello //output&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello World!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Hello World! // output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;7&quot;&gt;7&lt;/h3&gt;

&lt;p&gt;forEach () 배열 반복.&lt;/p&gt;

&lt;p&gt;과일 배열을 선언했다고 가정 해 보겠습니다.&lt;br /&gt;
배열 항목을 반복하기 위해 배열 이름을 입력 한 다음 .과 forEach를 입력합니다.&lt;br /&gt;
이렇게하면 forEach 내부에 fruits.forEach () 함수를 제공해야합니다.&lt;br /&gt;
이 함수는 &lt;strong&gt;3 개의 매개 변수&lt;/strong&gt;를 사용합니다.&lt;br /&gt;
항목을 얻기 위해 첫 번째 매개 변수를 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;여기에서 과일이라는 이름을 지정했습니다.&lt;br /&gt;
루프 내에서이 이름을 사용하여 배열 항목을 인쇄했습니다.&lt;/p&gt;

&lt;p&gt;항목의 색인을 얻기 위해 두 번째 매개 변수를 사용할 수 있습니다.&lt;br /&gt;
여기서는 아래 13 행의 두 번째 함수 매개 변수에 대한 색인 이름을 사용하고 루프 내부에 색인과 항목을 인쇄했습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;// declare an array&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;apple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;orange&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;banana&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;pineapple&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// loop over with items&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// apple&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// orange&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// banana&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// pineapple&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// loop over with item and index&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;index: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// index: 0 apple&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// index: 1 orange&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// index: 2 banana&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// index: 3 pineapple&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;8&quot;&gt;8&lt;/h1&gt;

&lt;p&gt;문자열에서 공백 제거.&lt;/p&gt;

&lt;p&gt;웹 개발에서 사람들이 입력에 텍스트를 입력 할 때 문자열의 시작 또는 끝에 불필요한 공백이 자주 발생합니다.&lt;/p&gt;

&lt;p&gt;이러한 것들을 없애기 위해 JavaScript 문자열에는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;문자열 양쪽에서 공백을 제거하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;trim()&lt;/code&gt;,&lt;/li&gt;
  &lt;li&gt;처음에 제거하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;trimStart()&lt;/code&gt; 및&lt;/li&gt;
  &lt;li&gt;끝에서 제거하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;trimEnd()&lt;/code&gt;와 같은 메서드가 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  JavaScript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  JavaScript   &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   JavaScript   &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;languageBoth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;languageBoth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// JavaScript&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;languageStart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trimStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;languageStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// JavaScript   &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;languageEnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trimEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;languageEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//   JavaScript&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;9&quot;&gt;9&lt;/h3&gt;

&lt;p&gt;삼항 연산자.&lt;br /&gt;
&lt;strong&gt;JavaScript의 &lt;code class=&quot;highlighter-rouge&quot;&gt;if-else&lt;/code&gt; 조건에 익숙하다면 삼항 연산자를 사용하는 동일한 논리를 사용하여 더 읽기 쉽고 간결한 코드를 작성할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Yes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;No&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Yes&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2019&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Yes&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;No&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;10&quot;&gt;10&lt;/h3&gt;

&lt;p&gt;수학 함수 및 상수를 위한 수학 함수.&lt;/p&gt;

&lt;p&gt;프로그래밍에서 우리는 종종 수학 함수와 상수를 사용해야 할 때를 접합니다.&lt;br /&gt;
JavaScript에는 수학 마법사가 되는 데 사용할 수있는 편리한 클래스 수학이 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Math.PI&lt;/code&gt;는 상수 값 파이를 제공하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.LN2&lt;/code&gt;는 2의 자연 로그를 제공합니다.&lt;br /&gt;
sqrt를 계산하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.sqrt(value)&lt;/code&gt;를 사용할 수 있으며, 값의 거듭 제곱을 계산하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.pow(value, exponent)&lt;/code&gt;를 사용할 수 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Math.abs()&lt;/code&gt;를 사용하여 절대 값을 계산할 수 있습니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Math.ceil(value)&lt;/code&gt;를 값의 상한으로 사용할 수 있습니다.&lt;br /&gt;
마지막으로 바닥 계산 &lt;code class=&quot;highlighter-rouge&quot;&gt;Math.floor(value)&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// constants&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3.141592653589793&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LN2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 0.6931471805599453&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 10&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 12 Nov 2020 17:54:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/11/12/javascript.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/11/12/javascript.html</guid>
        
        
        <category>js</category>
        
      </item>
    
  </channel>
</rss>
