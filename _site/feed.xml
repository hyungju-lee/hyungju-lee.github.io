<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LEE HYUNG JU</title>
    <description>Jekyll Blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 03 Dec 2020 20:17:14 +0900</pubDate>
    <lastBuildDate>Thu, 03 Dec 2020 20:17:14 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>flex-wrap 주의</title>
        <description>&lt;h2 id=&quot;flex-wrap-주의&quot;&gt;flex-wrap 주의&lt;/h2&gt;

&lt;p&gt;함부로사용하지말자!!&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Dec 2020 20:16:00 +0900</pubDate>
        <link>http://localhost:4000/css/2020/12/03/css2.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2020/12/03/css2.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>flexBox overflow</title>
        <description>&lt;h2 id=&quot;flexbox-overflow-ie10까지-크로스브라우징&quot;&gt;flexBox overflow IE10까지 크로스브라우징&lt;/h2&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display: flex&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;overflow:hidden;flex: 1 1 auto;align-self: center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display: flex&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;em&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display: block;flex: 0 1 auto;overflow: hidden;text-overflow: ellipsis;white-space: nowrap&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/em&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;em&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;display: block;flex: 0 0 auto&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/em&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;flex: 0 0 auto&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 03 Dec 2020 10:21:00 +0900</pubDate>
        <link>http://localhost:4000/css/2020/12/03/css.html</link>
        <guid isPermaLink="true">http://localhost:4000/css/2020/12/03/css.html</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>이벤트 발생이 한번이 아니라 여러변 되는 경우</title>
        <description>&lt;h2 id=&quot;이벤트-발생이-한번이-아니라-여러변-되는-경우&quot;&gt;이벤트 발생이 한번이 아니라 여러변 되는 경우&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;이벤트를 여러번 걸지 않았는지 확인&lt;/li&gt;
  &lt;li&gt;스크립트를 실수로 두번이상 연동시켰는지 확인&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 03 Dec 2020 10:20:00 +0900</pubDate>
        <link>http://localhost:4000/js/2020/12/03/javascript.html</link>
        <guid isPermaLink="true">http://localhost:4000/js/2020/12/03/javascript.html</guid>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>git index.lock 파일</title>
        <description>&lt;h2 id=&quot;git-indexlock-파일&quot;&gt;git index.lock 파일&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fatal: Unable to create &lt;span class=&quot;s1&quot;&gt;'project_path/.git/index.lock'&lt;/span&gt;: File exists.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같은 에러메시지가 뜰 때가 있다.&lt;br /&gt;
이럴 땐&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; .git/index.lock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;index.lock&lt;/code&gt; 파일을 지워주면된다.&lt;/p&gt;

&lt;p&gt;커밋하다가, 또는 어떤 명령어 실행중에 취소해버리면 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.lock&lt;/code&gt; 파일이 생성되면서 잠기는데, 해당 파일만 지워주면 다시 원활하게 git을 사용할 수 있다.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Dec 2020 21:16:00 +0900</pubDate>
        <link>http://localhost:4000/git/2020/12/02/git.html</link>
        <guid isPermaLink="true">http://localhost:4000/git/2020/12/02/git.html</guid>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>dartSass 우선순위</title>
        <description>&lt;h2 id=&quot;dartsass-우선순위&quot;&gt;dartSass 우선순위&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sass-lang.com/documentation/at-rules/use#configuration&quot; target=&quot;_blank&quot;&gt;https://sass-lang.com/documentation/at-rules/use#configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;@use - @forward - @import&lt;/p&gt;

&lt;p&gt;위와 같이 우선순위가 있다. 뭐 이런 내용임.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Dec 2020 12:07:00 +0900</pubDate>
        <link>http://localhost:4000/node_module/2020/12/02/module2.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_module/2020/12/02/module2.html</guid>
        
        
        <category>node_module</category>
        
      </item>
    
      <item>
        <title>SCSS에 새로 추가된 Module System (@use, @forward)</title>
        <description>&lt;h2 id=&quot;scss에-새로-추가된-module-system-use-forward&quot;&gt;SCSS에 새로 추가된 Module System (@use, @forward)&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;이 글은 &lt;a href=&quot;https://css-tricks.com/introducing-sass-modules/&quot; target=&quot;_blank&quot;&gt;Introducing Sass Module&lt;/a&gt;를 참고하여 정리하였다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;최근, SCSS(사스, Sass)에 모듈 시스템(Module System)을 지원하기 위한 새로운 feature들이 몇가지 승인(accepted)되었다.&lt;br /&gt;
그 중에 at-rules에 두개의 feature가 추가되었는데 하나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;@use&lt;/code&gt;, 하나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;@forward&lt;/code&gt;다.&lt;br /&gt;
@use는 이전부터 존재하던 feature인 @import와 유사하다.&lt;br /&gt;
하지만, 기존에 @import가 가진 문제점을 보완한다.&lt;br /&gt;
SCSS 커뮤니티에서는 점진적으로 import를 deprecated 하고 @use만 사용하도록 할 계획이다.&lt;br /&gt;
아직, 정식 &lt;mark&gt;spec&lt;/mark&gt;은 아니고 얼마전 &lt;mark&gt;accepted&lt;/mark&gt; 되었기 때문에 &lt;a href=&quot;https://github.com/sass/libsass&quot; target=&quot;_blank&quot;&gt;libsass&lt;/a&gt;와 같은 &lt;a href=&quot;https://github.com/sass/sass&quot; target=&quot;_blank&quot;&gt;Sass&lt;/a&gt; 컴파일러에서는 아직 사용할 수 없다.&lt;br /&gt;
대신 Ruby로 만들어진 Original Sass 패키지를 설치해서 테스트 해보자.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; sass
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 완료되면 컴파일 할 대상을 정해서 css 파일로 변환하자.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; sass src/scss/main.scss dist/css/main.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그럼 이제, 새롭게 추가된 feature들이 기존 문제를 어떻게 해결하고 어떤 방식으로 동작하는지 간단히 알아보자.&lt;/p&gt;

&lt;h2 id=&quot;import는-어떤-문제가-있고-use는-이-문제들을-어떻게-해결할까&quot;&gt;@import는 어떤 문제가 있고, @use는 이 문제들을 어떻게 해결할까?&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@import&lt;/code&gt; 키워드를 사용해서 파일을 불러오면 다음과 같은 문제가 발생할 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pure CSS도 @import를 사용하기 때문에 혼란스러울 수 있다.&lt;/li&gt;
  &lt;li&gt;같은 파일을 여러번 import 하면 코드 충돌과 중복 코드로 인해 컴파일 속도가 느려질 수 있다.&lt;/li&gt;
  &lt;li&gt;모든 변수와 함수가 전역으로 관리되기 때문에 같은 이름의 변수나 함수를 사용하면 먼저 선언된 것들이 무시된다.&lt;/li&gt;
  &lt;li&gt;어디서 가져온 변수 or 함수인지 직관적으로 알 수 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@use&lt;/code&gt;를 사용하면 @import를 사용할 때 발생하는 문제를 명확히 해결할 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@import가 아닌 @use를 사용하기 때문에 혼란을 피할 수 있다.&lt;/li&gt;
  &lt;li&gt;@use는 모듈시스템과 동일하게 동작하기 때문에 컴파일 중에 단 한번만 improt된다.&lt;/li&gt;
  &lt;li&gt;@use를 사용하면 모듈 별로 별도의 namespace를 가지기 때문에 각 변수와 함수는 독립적으로 사용된다. (아래에서 예제로 살펴보자)&lt;/li&gt;
  &lt;li&gt;변수나 함수를 사용할때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;namespace.function()&lt;/code&gt;과 같이 사용하기 때문에 어디서 가져온 요소인지 직관적으로 알 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;import와-namespace-문제&quot;&gt;@import와 namespace 문제&lt;/h2&gt;

&lt;p&gt;import를 사용하면 선언된 파일의 모든 변수와 함수, mixin 등을 가져올 수 있다.&lt;br /&gt;
하지만, import를 사용하면 모든 변수와 함수들이 전역 namespace에 존재하기 때문에 다른 모듈에서 같은 이름을 쓰면 문제가 된다.&lt;br /&gt;
특히 써드파티 라이브러리에서 특정 이름의 변수명을 사용하는 경우라면 더욱 심각하다.&lt;br /&gt;
이 경우에는 문제가 어디서 발생하는지조차 모를수도 있다.&lt;/p&gt;

&lt;p&gt;예를들어 아래와 같은 세 파일(box.scss, card.scss, main.scss)이 있다고 했을때, main.scss에서 사용하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;$background_color&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;getBorder()&lt;/code&gt;는 어디서 가져온 변수(or 함수)인지 전혀 알 수 없다.&lt;br /&gt;
물론 SCSS는 순차적으로 컴파일되기 때문에 동일한 이름의 변수가 있다면 나중에 선언된 값으로 결정되기 때문에 에러가 발생하지는 않는다.&lt;br /&gt;
다만 사용하는 입장에서 내가 지금 사용하는 변수가 어디서 온것인지 직관적으로 알기 어렵기 때문에 문제가 발생할 경우 해결하는데 많은 시간이 소요된다(사용한 변수가 어디있는지 뒤져봐야하니까..).&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// box.scss&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBorder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$is-black&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$is-black&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dashed&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// card.scss&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBorder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$is-black&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$is-black&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dashed&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.card&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBorder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.scss&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'box'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'card'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.big-box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// background-color는 red일까? blue일까?&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.big-box&lt;/code&gt;의 이름만 보면 웬지 box의 bg(red)를 가져오고 싶어한것 같지만, 실제로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;blue&lt;/code&gt; 색상이 적용된다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;$background-color&lt;/code&gt;라는 이름의 변수가 box.scss, card.scss 모두에 존재하고 card.scss가 나중에 import되었기 때문이다.&lt;/p&gt;

&lt;p&gt;이렇게 namespace가 파일별로 없고, 모든 요소들이 전역으로 관리되기 때문에 같은 이름을 썼을때 주의할 필요가 있다.&lt;br /&gt;
이 문제는 이번에 새로 추가된 &lt;code class=&quot;highlighter-rouge&quot;&gt;@use&lt;/code&gt;를 쓰면 간단히 해결할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;use는-namespace-문제를-어떻게-해결할까&quot;&gt;@use는 namespace 문제를 어떻게 해결할까?&lt;/h2&gt;

&lt;p&gt;@use를 이용해서 동일한 코드를 수정하자. box.scss와 card.scss의 코드는 동일하므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;main.scss&lt;/code&gt;만 수정한다.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.scss&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@use&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'box'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@use&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'card'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.big-box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getBorder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이전 코드에서 .big-box의 &lt;code class=&quot;highlighter-rouge&quot;&gt;$background-color&lt;/code&gt;는 어떤 파일에서 가져온 변수인지 직관적으로 알수 없었다.&lt;br /&gt;
하지만, @use를 이용하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;box.$background-color&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;box.getBorder(true)&lt;/code&gt; 처럼 명시적으로 사용할 수 있기 때문에 혼란을 피할 수 있다.&lt;br /&gt;
또한 as 키워드를 사용하면 모듈의 이름을 바꿔서 사용할 수도 있다.&lt;br /&gt;
각 모듈별로 별도의 namespace가 존재하기 때문에 @import를 사용할 때 발생하는 namespace문제는 말끔히 해결되었다.&lt;/p&gt;

&lt;h2 id=&quot;use의-다른-기능들&quot;&gt;@use의 다른 기능들&lt;/h2&gt;

&lt;p&gt;@use에 몇가지 기능이 더 추가되었다.&lt;br /&gt;
underscore(_)나 hyphen(-)을 이용하면 private member를 만들수 있다.&lt;br /&gt;
또한 Sass 내장 모듈도 @use를 통해서 사용 가능하다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;private member(_ or -)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;private member를 만들기 위해, 위에서 사용한 코드를 조금 추가하자.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// box.scss&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$_border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ccc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$_border&lt;/code&gt;라는 변수를 만들었다.&lt;br /&gt;
underscore(_)로 시작하기 때문에 private 변수다.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.scss&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@use&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'box'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.big-box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;.big-box에 &lt;code class=&quot;highlighter-rouge&quot;&gt;border: box.$_border;&lt;/code&gt;를 추가했다.&lt;br /&gt;
이렇게 작성한 다음 실행해보면, 아래와 같은 에러를 만날것이다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: Private members can&lt;span class=&quot;s1&quot;&gt;'t be accessed from outside their modules.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;underscore로 시작하는 변수(or 함수)는 private이기 때문에 모듈 외부에서 사용할 수 없다는 말이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SCSS(Sass) 내장 모듈&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이제는 내장 모듈을 사용할때도 @use를 사용하면 된다.&lt;br /&gt;
기존에는 아래 같은 방식으로 내장 기능을 사용했다.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$section-padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$default-margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$default-black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.4px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 반올림, 15px&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$section-padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2번째 항목 추출, 10px&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$default-margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 항목 추가, 20px 10px&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;transparentize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$default-black&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 투명도 추가, rgba(51, 51, 51, 0.2);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러나 이제부터는 @use를 이용해서 내장모듈을 가져온다(물론 기존 방식도 동작할것이다).&lt;br /&gt;
위의 코드는 아래처럼 바꿀 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@use&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sass:math&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@use&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sass:list&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@use&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sass:color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$section-padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$default-margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$default-black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.4px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$section-padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$default-margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;adjust&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$default-black&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$alpha&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-0&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;물론 이전 방식처럼 직접 내장 함수를 그대로 사용할수도 있다.&lt;br /&gt;
하지만 모듈시스템을 적극 이용한다면, 코드 품질 향상을 위해서라도 @use를 사용하자.&lt;br /&gt;
대부분의 함수는 이전에 사용하던 방식 그대로 이식되었다.&lt;br /&gt;
하지만, 일부 함수는 아예 사라졌고, 일부 함수는 추가되었거나 수정되었다.&lt;br /&gt;
예를들어 이전에 사용하던 투명도 조절을 위한 transparentize() 같은 함수는 없어졌다(타이핑 하기도 어려운데 잘 됐다).&lt;br /&gt;
대신 color 모듈의 adjust() 메서드를 사용해서 투명도를 조정한다.&lt;br /&gt;
adjust는 투명도 조정 이에외 다양하게 활용할 수 있다.&lt;br /&gt;
RGB 프로퍼티나 Hue 등의 HSL 프로퍼티 등을 조절할때도 adjust()를 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;forward는-언제-사용할까&quot;&gt;@forward는 언제 사용할까?&lt;/h2&gt;

&lt;p&gt;@use와 @forward는 비슷한 기능을 한다.&lt;br /&gt;
둘다 각 파일의 모든 요소를 import한다.&lt;br /&gt;
실제로 컴파일된 CSS 결과물도 같다.&lt;br /&gt;
그러나 가장 큰 차이점이 하나 있는데, 바로 @use와 다르게 @forward를 사용하면 페이지 내에서 forwad한 모듈의 요소(variables, functions, mixins)를 사용할 수 없다는 점이다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;@forward&lt;/code&gt;는 단지 전달만 할뿐이다.&lt;br /&gt;
만약 forward한 모듈의 요소를 사용하려면 forward로 모듈을 가져온 파일을 @use를 사용해 import하면 된다.&lt;br /&gt;
말이 좀 어려운데, 예를 들어보자.&lt;/p&gt;

&lt;p&gt;여러개의 모듈이 있고 각 모듈을 @use로 import하지 않고 통일된 namespace를 사용해서 각 요소를 사용하려고 한다.&lt;br /&gt;
다음과 같이 box, card, modules, main 파일이 있다.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// box.scss&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$border-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#dddddd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#eeeeee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBorder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$is-black&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@if&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$is-black&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;@return&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dashed&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$border-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// card.scss&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$card-bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#ff0000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.card&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$card-bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#dddddd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// modules.scss&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@forward&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'box'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@forward&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'card'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.scss&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@use&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'modules'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getBorder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$card-bg-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;modules.scss&lt;/code&gt;라는 파일을 만들자.&lt;br /&gt;
이 모듈에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;@forward&lt;/code&gt; 키워드로 &lt;code class=&quot;highlighter-rouge&quot;&gt;box.scss&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;card.scss&lt;/code&gt; 모듈을 forward 한다(이때는 위에서 언급했듯이 modules 내부에서 import한 모듈의 요소를 사용하지 못한다).&lt;br /&gt;
다음으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;main.scss&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;@use&lt;/code&gt;를 사용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;modules.scss&lt;/code&gt;를 import하자.&lt;br /&gt;
이제 main.scss에서 box와 card의 요소를 사용할 수 있다.&lt;br /&gt;
한가지 주의할점은 &lt;code class=&quot;highlighter-rouge&quot;&gt;box.getBorder(true)&lt;/code&gt; 형태로 사용하는 것이 아니라 &lt;code class=&quot;highlighter-rouge&quot;&gt;modules.getBorder(true)&lt;/code&gt;로 사용해야 한다.&lt;/p&gt;

&lt;p&gt;그런데 한가지 문제가 있다.&lt;br /&gt;
위의 코드에서는 문제 없지만, 만약 box와 card에서 동일한 이름의 변수를 사용한다면 문제가 된다.&lt;br /&gt;
가져오려는 변수를 어떤 모듈에서 가져와야할지 알 수 없기 때문이다.&lt;br /&gt;
예를들어 card.scss에도 $background-color가 있다고 한다면, main.scss에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;$background-color&lt;/code&gt;를 사용할때 어느 모듈에서 값을 가져와야 할지 알수 없다.&lt;br /&gt;
그래서 이런 구조로 코드가 구성되면 컴파일시에 에러가 발생한다.&lt;br /&gt;
실제로 컴파일 해보자.&lt;br /&gt;
다음과 같은 에러가 발생하면서 컴파일이 실패한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Error: Module box.scss and the new module both forward a variable named &lt;span class=&quot;nv&quot;&gt;$background&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-color&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;modules.scss&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;main.scss&lt;/code&gt; 파일의 수정이 필요하다.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// modules.scss&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@forward&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'box'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;box-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@forward&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'card'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;card-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// main.scss&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@use&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'modules'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getBorder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$box-background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결국 &lt;code class=&quot;highlighter-rouge&quot;&gt;modules&lt;/code&gt;로 통합된 namespace가 문제가 되었기 때문에 충돌을 막기위해 각 모듈 내 요소의 이름을 변경한다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;$background-color&lt;/code&gt;가 아니라, &lt;code class=&quot;highlighter-rouge&quot;&gt;box-&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;card-&lt;/code&gt;를 prefix로 붙여줘서 &lt;code class=&quot;highlighter-rouge&quot;&gt;$box-background-color&lt;/code&gt;와 같이 사용하면 문제가 해결된다.&lt;/p&gt;

&lt;h2 id=&quot;정리&quot;&gt;정리&lt;/h2&gt;

&lt;p&gt;@use는 확실히 중요하고 유용한 feature임에 틀림없다고 생각하지만, @forward는 잘 모르겠다.&lt;br /&gt;
@use가 namespace 충돌을 막기위해 나왔음에도 불구하고 @forward를 사용하면 또다른 namespace 충돌의 여지가 생길 수 있기 때문이다.&lt;br /&gt;
아직 SCSS로 큰 프로젝트를 진행해본적이 없어서 그런지 몰라도 @forward는 왠지 잘 사용하지 않을것 같다.&lt;br /&gt;
그럼에도 모듈 시스템의 도입은 확실히 큰 개선임에는 틀림없다.&lt;br /&gt;
소개한 내용 이외에도 추가된 내용이 많이 있으니 문서를 꼼꼼히 읽어보자.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;즉 각 파일의 리소스가 커지면, &lt;code class=&quot;highlighter-rouge&quot;&gt;@forward&lt;/code&gt;를 사용했을 때 충돌날 수 있다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;그래서 변수명이든 함수명이든 믹스인이든 겹치는지 안겹치는지 확인하면서 써야된다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;규모가 적으면 편하겠지만 규모가 커지면 커질수록 이는 힘들거같다.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Dec 2020 11:09:00 +0900</pubDate>
        <link>http://localhost:4000/node_module/2020/12/02/module.html</link>
        <guid isPermaLink="true">http://localhost:4000/node_module/2020/12/02/module.html</guid>
        
        
        <category>node_module</category>
        
      </item>
    
      <item>
        <title>14-2. Array 오브젝트(ES5 기준) / index 처리 메소드</title>
        <description>&lt;h2 id=&quot;14-2-array-오브젝트es5-기준--index-처리-메소드&quot;&gt;14-2. Array 오브젝트(ES5 기준) / index 처리 메소드&lt;/h2&gt;

&lt;h2 id=&quot;indexof&quot;&gt;indexOf()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data&lt;/td&gt;
      &lt;td&gt;검색 대상&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;첫번째 파라미터: 검색할 값 &lt;br /&gt; 두번째 파라미터: 검색 시작 인덱스, 디폴트 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;검색된 인덱스&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터 값과 같은 엘리먼트의 인덱스 반환&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;왼쪽에서 오른쪽으로 검색&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;값이 같은 엘리먼트가 있으면 검색 종료&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;배열의 왼쪽부터 5를 검색&lt;/li&gt;
          &lt;li&gt;2번 인덱스에 5가 있으므로 2를 반환&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;데이터 타입까지 체크&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;배열의 왼쪽부터 “5”를 검색&lt;/li&gt;
          &lt;li&gt;2번과 4번 인덱스에 5가 있지만 타입이 다름&lt;/li&gt;
          &lt;li&gt;같은 값이 없으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;-1&lt;/code&gt;을 반환합니다.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;두번째 파라미터의 인덱스부터 검색&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;3번 인덱스부터 5를 검색&lt;/li&gt;
      &lt;li&gt;2번 인덱스에 5가 있지만 3번 인덱스부터 검색하므로 4가 반환됩니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;String과 Array의 indexOf() 차이&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ABCBC&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;두 번째 파라미터에 음수를 작성했을 때 검색 방법이 다릅니다.&lt;/li&gt;
      &lt;li&gt;String 오브젝트는 0으로 간주하여 처음부터 처음부터 검색&lt;br /&gt;
ABCBC에서 C가 2번 인덱스에 있으므로 2를 반환&lt;/li&gt;
      &lt;li&gt;Array 오브젝트는 음수에 length를 더해 시작 인덱스로 사용&lt;br /&gt;
-2 + length(5) = 3&lt;br /&gt;
2번 인덱스에 C가 있지만 4번 인덱스를 반환&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lastindexof&quot;&gt;lastIndexOf()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data&lt;/td&gt;
      &lt;td&gt;검색 대상&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;첫번째 파라미터: 검색할 값 &lt;br /&gt; 두번째 파라미터: 검색 시작 인덱스opt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;검색된 인덱스&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;파라미터 값과 같은 엘리먼트의&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;마지막 인덱스 반환&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;다른 처리 방법은 indexOf()와 같음&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastIndexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;음 잘 이해는 안가지만 강좌 내용은 다음과 같습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;왼쪽 -&amp;amp;ㅎㅅ; 오른쪽 : 같은 값이 나와도 그 다음을 검색합니다. 마지막 인덱스를 반환합니다.&lt;/li&gt;
  &lt;li&gt;그런데 last의 사전적 개념은 마지막&lt;/li&gt;
  &lt;li&gt;그런데 오른쪽에서 왼쪽으로 검색해야 효율적&lt;/li&gt;
  &lt;li&gt;즉, 오른쪽에서 왼쪽으로 검색한다는 표현이 더 맞음&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;사전적 개념이 마지막이라 왼쪽 -&amp;gt; 오른쪽 검색 - 마지막 나올때까지 - 이렇게 생각하기 쉽지만&lt;br /&gt;
사전적 개념 last 생각말고 오른쪽 -&amp;gt; 왼쪽 검색이라고 생각해.&lt;/p&gt;

&lt;p&gt;이런뜻인가?.. 이 부분은 좀 뭔가 이해하기 난해..&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Dec 2020 09:24:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/02/beginner8.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/02/beginner8.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>14-1. Array 오브젝트(ES5 기준) / 프로퍼티 리스트, 함수 여부 체크</title>
        <description>&lt;h2 id=&quot;14-1-array-오브젝트es5-기준--프로퍼티-리스트-함수-여부-체크&quot;&gt;14-1. Array 오브젝트(ES5 기준) / 프로퍼티 리스트, 함수 여부 체크&lt;/h2&gt;

&lt;p&gt;이번 시간은 ES5 기준의 Array 오브젝트입니다.&lt;/p&gt;

&lt;h2 id=&quot;프로퍼티-리스트-es5&quot;&gt;프로퍼티 리스트 (ES5)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Array 함수&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;isArray() : 배열 여부 반환; 배열이면 true, 아니면 false 반환&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Array.prototype&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;indexOf() : 지정한 값에 일치하는 엘리먼트 인덱스 반환&lt;/li&gt;
  &lt;li&gt;lastIndexOf() : indexOf()와 같으며 마지막 인덱스 반환&lt;/li&gt;
  &lt;li&gt;forEach() : 배열을 반복하면서 콜백 함수 실행&lt;/li&gt;
  &lt;li&gt;every() : 반환 값이 false일 때까지 콜백 함수 실행&lt;/li&gt;
  &lt;li&gt;some() : 반환 값이 true일 때까지 콜백 함수 실행&lt;/li&gt;
  &lt;li&gt;filter() : 콜백 함수에서 true를 반환한 엘리먼트 반환&lt;/li&gt;
  &lt;li&gt;map() : 콜백 함수에서 반환한 값을 새로운 배열로 반환&lt;/li&gt;
  &lt;li&gt;reduce() : 콜백 함수의 반환 값을 파라미터 값으로 사용&lt;/li&gt;
  &lt;li&gt;reduceRight() : reduce()와 같음. 단, 배열의 끝에서 앞으로 진행&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;mark&gt;forEach / every / some / filter / map / reduce / reduceRight&lt;/mark&gt;&lt;/p&gt;

&lt;p&gt;위 7개 메소드의 공통점은 콜백함수를 호출하는 것입니다.&lt;br /&gt;
배열을 반복할 때마다(매번) 콜백함수를 호출합니다.&lt;/p&gt;

&lt;h3 id=&quot;foreach&quot;&gt;forEach()&lt;/h3&gt;

&lt;p&gt;배열을 반복하면서 반복할 때마다 콜백 함수를 실행합니다.&lt;br /&gt;
&lt;strong&gt;그리고 forEach 함수의 특징은 중간에 빠져나올 수 없습니다.&lt;/strong&gt;&lt;br /&gt;
처음부터 끝까지 무조건 반복하는 겁니다.&lt;/p&gt;

&lt;p&gt;그리고 &lt;mark&gt;forEach / every / some / filter / map&lt;/mark&gt; 이렇게 5개의 공통점은 또 뭐냐면, 파라미터를 넘겨줄 때 &lt;strong&gt;파라미터를 3개를 넘겨줍니다.&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;첫번째 파라미터 : 현재 처리중인 엘리먼트 값&lt;/li&gt;
  &lt;li&gt;두번째 파라미터 : 현재 처리중인 인덱스&lt;/li&gt;
  &lt;li&gt;세번째 파라미터 : 배열 전체&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;every&quot;&gt;every()&lt;/h3&gt;

&lt;p&gt;반환 값이 false일 때까지 콜백함수를 실행합니다.&lt;br /&gt;
&lt;strong&gt;그러니깐 콜백함수에서 true를 반환하면 반복을 종료합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;some&quot;&gt;some()&lt;/h3&gt;

&lt;p&gt;반환 값이 true일 때까지 콜백함수를 실행합니다.&lt;br /&gt;
&lt;strong&gt;그러니깐 콜백함수에서 false를 반환하면 반복을 종료합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;every / some : 서로 반대&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;filter&quot;&gt;filter()&lt;/h3&gt;

&lt;p&gt;콜백함수에서 true를 반환한 엘리먼트를 반환합니다.&lt;br /&gt;
콜백함수에서 false를 반환한 엘리먼트는 반환하지 않습니다.&lt;br /&gt;
그러니깐 필터, 걸러내는 겁니다.&lt;/p&gt;

&lt;h3 id=&quot;map&quot;&gt;map()&lt;/h3&gt;

&lt;p&gt;콜백함수에서 반환한 값을 새로운 배열로 반환해줍니다.&lt;br /&gt;
filter는 true를 반환한 엘리먼트 값만 반환해주지만, map은 반환한 값을 새로운 배열로 반환하는 거니깐 콜백 함수에서 조종할 수 있다는 뜻이 됩니다.&lt;br /&gt;
그래서 &lt;strong&gt;map()과 forEach()는 비슷&lt;/strong&gt;합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;map / forEach 차이점&lt;/strong&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;forEach는 무조건 끝까지 반복합니다. 그리고 반환하는게 없습니다.&lt;br /&gt;
 그래서 반환하기 위해선 별도의 배열을 만들어서 거기다가 집어넣는 그런 처리를 해줘야합니다.&lt;/li&gt;
    &lt;li&gt;반면에 map은 기본적으로 반환을 해줍니다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;reduce-reduceright-공통점&quot;&gt;reduce() reduceRight() 공통점&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;파라미터가 4개입니다.&lt;/li&gt;
  &lt;li&gt;첫번째, 두번째 파라미터는 상황에 따라 다릅니다.&lt;/li&gt;
  &lt;li&gt;세번째는 index이고 네번째는 전체 배열입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 상황에 대해서는 메소드를 다룰 때 설명하겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;reduceright&quot;&gt;reduceRight()&lt;/h3&gt;

&lt;p&gt;reduce()와 같은데 단지 배열의 끝에서 앞으로 진행합니다. (오른쪽 -&amp;gt; 왼쪽)&lt;br /&gt;
reduce()는 배열의 처음에서 마지막으로 진행합니다. (왼쪽 -&amp;gt; 오른쪽)&lt;/p&gt;

&lt;p&gt;뒤에서 위의 메소드들에 대해 각각 다루도록 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;isarray&quot;&gt;isArray()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;object&lt;/td&gt;
      &lt;td&gt;Array 오브젝트&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;체크 대상&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;배열 : true, 아니면 : false&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;체크 대상이 배열이면 true, 아니면 false&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;isArray()는 &lt;strong&gt;함수&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;isArray()는 함수이므로&lt;/li&gt;
      &lt;li&gt;Array.isArray() 형태로 호출&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;isArray()는 함수이기 때문에 isArray() 앞에 Array 즉, 오브젝트를 작성해야됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;isArray() 함수가 필요한 이유&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// object&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// object&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;typeof 연산자로 데이터 타입을 구하면&lt;/li&gt;
      &lt;li&gt;모두 object이므로 배열 여부 체크 불가&lt;/li&gt;
      &lt;li&gt;[1, 2]는 Array.isArray() 사용&lt;/li&gt;
      &lt;li&gt;null은 &lt;strong&gt;Object.is()&lt;/strong&gt; 사용&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;isArray() 함수는 ES3에는 없었다.&lt;br /&gt;
그런데 ES5에서 생겼다.&lt;br /&gt;
왜 생겼을까?&lt;/p&gt;

&lt;p&gt;위 코드에서 보시면 아시겠지만 배열을 배열이 맞는지 아닌지 구분하기 위해 생긴것입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;isArray() 함수를 사용하는 경우&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;서버에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; 타입의 데이터를 가져옵니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt; 타입 안에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt; 형태도 있고, &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt; 이런 형태도 있습니다.&lt;br /&gt;
그럼 반복을 하면서 그때 읽은거마다 어떤 형태인지 체크를 해줘야됩니다.&lt;br /&gt;
{} / [] 구분을 해줘야됩니다.&lt;br /&gt;
그래서 그때마다 그 타입에 맞는 함수를 호출해서 데이터를 처리해줘야됩니다.&lt;/p&gt;

&lt;p&gt;그런데 &lt;code class=&quot;highlighter-rouge&quot;&gt;typeof&lt;/code&gt;로는 체크할 방법이 없잖아요?
그런 경우에 &lt;code class=&quot;highlighter-rouge&quot;&gt;isArray()&lt;/code&gt; 함수를 사용해서 해당 데이터가 배열이면 반복을 처리하는 함수를 호출하고, 오브젝트이면 &lt;strong&gt;for in&lt;/strong&gt; 문으로 처리하는 함수를 호출합니다.&lt;br /&gt;
이런식으로 처리할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;isArray()&lt;/code&gt; 함수를 사용합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;isArray()&lt;/code&gt;는 사용성이 굉장히 높습니다.&lt;br /&gt;
서버에서 데이터를 가져올 땐, 1차원 배열로 오는 경우도 있지만, 막 섞여서 오는 경우도 있습니다.&lt;br /&gt;
그것이 &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON&lt;/code&gt;의 특징입니다.
그럴 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;isArray()&lt;/code&gt;가 필요합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;null은 Object.is() 함수를 사용해서 비교&lt;/strong&gt;하시면 됩니다.&lt;br /&gt;
Object.is()는 ES6에서 나왔습니다.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Dec 2020 09:06:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/02/beginner7.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/02/beginner7.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>13-10. Array 오브젝트(ES3 기준) / sort 알고리즘, 역순 정렬</title>
        <description>&lt;h2 id=&quot;13-10-array-오브젝트es3-기준--sort-알고리즘-역순-정렬&quot;&gt;13-10. Array 오브젝트(ES3 기준) / sort 알고리즘, 역순 정렬&lt;/h2&gt;

&lt;h2 id=&quot;sort&quot;&gt;sort()&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;sort 알고리즘&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [7, 26, 101, 1234]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;sort 메소드의 파라미터에 함수를 작성합니다.&lt;br /&gt;
이를 콜백 함수라 합니다.&lt;/li&gt;
  &lt;li&gt;sort를 반복할 때마다 콜백 함수가 호출됩니다.&lt;br /&gt;
자바스크립트 엔진이 호출을 해줍니다.&lt;br /&gt;
어떻게 보면 표현식이죠?&lt;br /&gt;
파라미터 값이 표현식이면 표현식을 평가합니다.&lt;br /&gt;
그런데 파라마미터가 함수인 겁니다.&lt;br /&gt;
그래서 함수를 실행시키는 겁니다. (평가해서 return 값 받아야되니까)
return값 받아서 그걸 가지고 또 다른 처리를 하는 겁니다.&lt;/li&gt;
  &lt;li&gt;위의 코드를 보면 사람이 생각하는 승순으로 sort가 됩니다.&lt;br /&gt;
어떻게 이런 결과가 나올까요?&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;sort() 파라미터의 function(){}을 호출하면서 101과 26을 파라미터 값으로 넘깁니다.&lt;br /&gt;
101이 one에, 26이 two에 설정됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;one(101) - two(26)의 결과는 양수이며 이 값을 반환합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이때, 0보다 큰 값이 반환되면 배열에서 값의 위치를 바꿉니다.&lt;br /&gt;
즉, [26, 101, 7, 1234]가 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;다시 콜백 함수를 호출하면서 101과 7을 넘겨줍니다.&lt;br /&gt;
one(101) - two(7)의 결과는 양수이며 0보다 큰 값을 반환하게 됩니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반환 값이 0보다 크므로 배열에서 값의 위치를 바꿉니다.&lt;br /&gt;
즉, [26, 7, 101, 1234]가 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;다시 함수를 호출하면서 101과 1234를 넘겨줍니다.&lt;br /&gt;
one(101) - two(1234)의 결과는 &lt;strong&gt;음수&lt;/strong&gt;이며 0보다 작은 값을 반환하게 됩니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반환 값이 0보다 작거나 같으면 배열에서 값의 위치를 바꾸지 않습니다.&lt;br /&gt;
따라서, [26, 7, 101, 1234]가 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;mark&gt;다시 처음으로 돌아가 바뀌는 것이 없을 때까지 배열의 엘리먼트 위치를 조정합니다.&lt;/mark&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;sort 알고리즘&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;sort 메소드 호출 -&amp;gt; 콜백함수 호출&lt;/li&gt;
  &lt;li&gt;위 코드에서 파라미터 두개를 콜백함수로 던져줌&lt;/li&gt;
  &lt;li&gt;첫번째 파라미터 - 두번째 파라미터&lt;/li&gt;
  &lt;li&gt;결과가 양수이면 값의 위치를 바꾸고 음수이면 값의 위치를 바꾸지 않는다.&lt;/li&gt;
  &lt;li&gt;위치바꿈이 없을 때까지 콜백함수 호출&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;콜백함수엔 식을 작성해 리턴값을 양수 또는 음수로 던져준다.&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;콜백 함수의 코드를 작성한다는 것은 위 콜백 함수 안에다가 다른 알고리즘을 작성할 수 있다는 뜻이된다.&lt;/strong&gt;&lt;br /&gt;
예를 들면 two - one을 할 수도 있다.&lt;br /&gt;
그러면 반환값이 바뀐다.&lt;/p&gt;

&lt;p&gt;이것이 sort 알고리즘의 전체이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;코딩시간&quot;&gt;코딩시간&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;요구사항&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;배열의 엘리먼트 값을 역순으로 정렬하세요.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;힌트&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;sort() 메소드는 역순 정렬을 제공하지 않습니다.&lt;/li&gt;
      &lt;li&gt;하지만 sort() 메소드의 콜백 함수를 사용하여 역순으로 정렬할 수 있습니다.&lt;/li&gt;
      &lt;li&gt;앞 페이지 sort 알고리즘을 참조하세요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [1234, 101, 26, 7]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;reverse&quot;&gt;reverse()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data&lt;/td&gt;
      &lt;td&gt;대상&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;사용하지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;결과&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;mark&gt;배열의 엘리먼트 위치를 역순으로 바꿈&lt;/mark&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;엘리먼트 값이 아닌 인덱스 기준&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;대상 배열도 바뀜&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [5, 7, 3, 1]&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [5, 7, 3, 1]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 02 Dec 2020 08:53:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/02/beginner6.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/02/beginner6.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
      <item>
        <title>13-9. Array 오브젝트(ES3 기준) / sort(분류), sort()와 Unicode</title>
        <description>&lt;h2 id=&quot;13-9-array-오브젝트es3-기준--sort분류-sort와-unicode&quot;&gt;13-9. Array 오브젝트(ES3 기준) / sort(분류), sort()와 Unicode&lt;/h2&gt;

&lt;h2 id=&quot;sort&quot;&gt;sort()&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;구분&lt;/th&gt;
      &lt;th&gt;데이터(값)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;data&lt;/td&gt;
      &lt;td&gt;대상&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;파라미터&lt;/td&gt;
      &lt;td&gt;함수opt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;반환&lt;/td&gt;
      &lt;td&gt;sort 결과&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;엘리먼트 값을 &lt;strong&gt;승순&lt;/strong&gt;으로 정렬&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정렬 기준은 엘리먼트 값의 Unicode&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;코드 포인트가 작으면 앞에 오고 크면 뒤에 옵니다.&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3, 4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;승순이란 작은 값이 앞에오고 큰 값이 뒤에오는 형태입니다.&lt;br /&gt;
  가나다 순이라고도 합니다.&lt;/p&gt;

        &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;A1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;A01&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;B2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;B02&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [&quot;A01&quot;, &quot;A1&quot;, &quot;B02&quot;, &quot;B2&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;ol&gt;
          &lt;li&gt;왼쪽에서 오른쪽으로 &lt;mark&gt;문자 하나씩 비교&lt;/mark&gt;하여 정렬&lt;/li&gt;
          &lt;li&gt;A01과 A1에서 A가 같으므로 다음 문자 비교&lt;/li&gt;
          &lt;li&gt;0과 1을 비교하게되며 0이 1보다 코드 포인트가 앞에있으므로 앞에 정렬&lt;/li&gt;
        &lt;/ol&gt;

        &lt;p&gt;비교가 완료되면 다음 문자는 비교하지 않습니다.&lt;br /&gt;
  B2 / B02&lt;br /&gt;
  B / B 끼리 비교 - 같음&lt;br /&gt;
  2 / 0 끼리 비교 / 0이 더 작음 -끝-&lt;br /&gt;
  &lt;strong&gt;B02의 2는 비교하지 않습니다.&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;mark&gt;주의 : sort 대상 배열도 정렬됨&lt;/mark&gt;&lt;br /&gt;
&lt;strong&gt;원본훼손&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3, 4]&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3, 4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;sort 대상 배열이 훼손되면 안될 경우엔 사전에 복사를 합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;값이 undefined이면 끝으로 이동&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, undefined, undefined]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;undefined가 1, 2보다 크다는 것이 아닙니다.&lt;br /&gt;
  단지 undefined이니깐 뒤에 정렬하는 것입니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;sort와-unicode&quot;&gt;sort()와 Unicode&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;숫자에 해당하는 Unicode의 code point로 정렬&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [101, 1234, 7, 26]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ol&gt;
      &lt;li&gt;사람이 생각하는 일반적인 정렬은 &lt;strong&gt;[7, 26, 101, 1234]&lt;/strong&gt;입니다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;mark&gt;위의 결과처럼 정렬된 것은 코드 포인트로 비교하여 sort하기 때문입니다.&lt;/mark&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;101과 26에서 1이 2보다 작으므로 101이 26보다 작은 것으로 정렬됩니다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;또한 101과 7에서 1이 7보다 작으므로 101이 7보다 작은 것으로 정렬됩니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;mark&gt;이를 해결하려면 sort()의 파라미터에 함수를 작성하고 함수에서 정렬해야 합니다.&lt;/mark&gt;&lt;/li&gt;
      &lt;li&gt;다음 절에서 알고리즘을 다룹니다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 02 Dec 2020 08:33:00 +0900</pubDate>
        <link>http://localhost:4000/js_beginner/2020/12/02/beginner5.html</link>
        <guid isPermaLink="true">http://localhost:4000/js_beginner/2020/12/02/beginner5.html</guid>
        
        
        <category>js_beginner</category>
        
      </item>
    
  </channel>
</rss>
