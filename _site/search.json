[

{
"id": "-jekyll-2020-02-11-jekyll02",
"title": "Jekyll 설치 및 세팅",
"author": null,
"tags": [],
"url": "/jekyll/2020/02/11/jekyll02/",
"date": "2020-02-11",
"content": "Jekyll 설치 및 세팅하기gem install jekyll 명령어로 jekyll을 설치합니다.jekyll template 라는 검색어를 통해 마음에 드는 template을 다운받습니다.http://jekyllthemes.org/원하는 template를 다운받고 압축을 푼 후, gemfile을 제외한 나머지 파일을 모두 jekyll root 폴더로 복붙합니다.위 이미지는 다운받은 template의 gemfile 내용입니다.확인하면 필요 모듈이 적혀있습니다.해당 내용을 내 jekyll root 폴더에 있는 gemfile에 옮겨 적습니다.그리고 jekyll serve 란 명령어로 server를 작동시킵니다.그리고 localhost:4000 으로 접속합니다.그럼 위와 같은 template이 적용된 jekyll 블로그로 접속될 것입니다.admin 페이지로 접속하기 위해선gemfile 파일에 다음 문구를 추가합니다.gem 'jekyll-admin', group:jekyll_plugins그리고 jekyll serve 로 다시 서버를 실행시키고localhost:4000/admin 페이지로 접속합니다.그럼 이러한 admin 페이지로 접속이 가능해집니다."
}, 

{
"id": "-jekyll-2020-02-10-jekyll01",
"title": "Jekyll 사용환경 만들기",
"author": null,
"tags": [],
"url": "/jekyll/2020/02/10/jekyll01/",
"date": "2020-02-10",
"content": "Jekyll 사용환경 만들기1. Ruby 다운로드먼저 Ruby를 설치해 Jekyll 을 사용할 수 있는 환경을 만들어야합니다.https://rubyinstaller.org/위 사이트로 접속해 Ruby를 다운받으십시오.2. Ruby 설치UTF-8 엔코딩에 체크한 후설치를 진행합니다.그리고 Ruby가 제대로 설치되었는지 ruby -v 명령어를 통해 확인해봅니다.위는 git bash 창입니다. Ruby를 설치했어도 ruby -v 명령어가 ruby: command not found라는 오류가 발생하면서 실행이 안될 수도 있습니다.그럴 때는 git bash창 말고 cmd 창을 이용합니다.그러면 ruby -v 명령어를 제대로 인식할 수도 있습니다.cmd 창을 활용하는 경우는 해당 드라이브로 가는 명령어(드라이브이름:), 폴더 옮기는 명령어 cd (폴더명) 등을 이용해 Jekyll 모듈을 사용할 root 폴더로 직접 이동해야됩니다.위와 같이 ruby 설치와 ruby가 제대로 설치되었는지 확인 작업까지 마치면 Jekyll 사용환경이 완성된 겁니다."
}, 

{
"id": "-jekyll-2020-02-10-jekyll00",
"title": "Jekyll(지킬) 이란?",
"author": null,
"tags": [],
"url": "/jekyll/2020/02/10/jekyll00/",
"date": "2020-02-10",
"content": "Jekyll 이란?평범한 텍스트 파일을 정적 웹사이트 또는 블로그로 변신시켜 주는 모듈입니다.특징  심플함데이터베이스도 댓글 관리도, 성가신 업데이트도 없습니다. 오직 당신의 컨텐츠뿐입니다.  정적Markdown (또는 Textile), Liquid, HTML &amp; CSS 를 넣으면, 당장 게시할 수 있는 사이트가 완성됩니다.  블로그 지향적고유주소, 카테고리, 페이지, 포스트, 사용자 레이아웃 등의 기능이 기본적으로 포함되어 있습니다."
}, 

{
"id": "-javascript-2020-02-10-javascript00",
"title": "JavaScript00",
"author": null,
"tags": [],
"url": "/javascript/2020/02/10/javascript00/",
"date": "2020-02-10",
"content": "안녕"
}, 

{
"id": "-jekyll-update-2020-02-10-welcome-to-jekyll",
"title": "포스트1",
"author": null,
"tags": [],
"url": "/jekyll/update/2020/02/10/welcome-to-jekyll/",
"date": "2020-02-10",
"content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.Jekyll requires blog post files to be named according to the following format:YEAR-MONTH-DAY-title.MARKUPWhere YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.Jekyll also offers powerful support for code snippets:def print_hi(name)  puts \"Hi, #{name}\"endprint_hi('Tom')#=&gt; prints 'Hi, Tom' to STDOUT.Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk."
}, 

{
"id": "-2015-01-01-hello",
"title": "Hello, Jekyll and TtskchTheme",
"author": null,
"tags": ["hello", "jekyll", "theme"],
"url": "/2015/01/01/hello/",
"date": "2015-01-01",
"content": "You can use most of standard Markdown features.List  foo  bar          indentation                  nesting indentation                    indentation        buzQuote  quote      nesting quote    quoteStrikethroughMistaken text.Syntax highlighting&lt;?phpecho 'Hello, World!';Tables            First Header      Second Header                  Content Cell      Content Cell              Content Cell      Content Cell      EmojiYou can use GitHub flavored emoji :+1:  NoteIt’s not a very good idea to use emoji before &lt;!--more--&gt; because jekyll can’t render emoji in the excerpted content.See alsoMarkdown"
}

]
